// Code generated by go-bindata.
// sources:
// assets/app.css
// assets/app.html
// assets/app.js
// assets/next.svg
// assets/pause.svg
// assets/play.svg
// assets/prev.svg
// assets/random.svg
// assets/repeat.svg
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAppCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdd\x6e\xeb\x36\x0c\xbe\xf7\x53\x08\x27\x28\x70\x0e\x50\x07\xb6\xe3\x64\x89\x87\xdd\xee\x25\x86\xe1\x40\xb6\x95\x58\xab\x22\x19\x32\x9d\xa6\x1d\xf2\xee\x83\xe3\x3f\xfd\x26\xee\x06\xac\x41\x80\x46\x36\xc9\x8f\xe4\x47\x8a\xcc\x45\xf9\x81\xfe\x0e\x10\x42\x28\x7c\x27\xf9\x1b\x85\x10\xc8\x15\xc2\x86\x7e\x92\x10\x97\x7f\xb5\x0d\x64\x28\x8e\xa2\x97\x5f\xef\xef\x9c\xb1\x3c\x51\x9e\xa1\xa8\xbe\xf6\x07\xb9\x90\x25\x91\xca\x41\x8d\xcb\x92\xf2\xd3\x70\x72\x0b\x82\x8a\xe0\x92\xc8\x57\x74\x14\x02\x88\x1c\x6c\xd5\xa2\xa1\x40\x05\xcf\xd0\x91\x5e\x49\xd9\x8b\x7e\x86\x94\x97\xe4\xda\xd9\xeb\x24\x7b\xc1\x41\x80\x91\x23\x28\x56\xde\x69\x09\x95\x0a\x0c\x44\xad\xa2\xc2\xc5\xdb\x49\x8a\x96\x97\x19\x5a\x95\xf9\x2f\xd1\x61\xd3\x3f\xa8\x08\x3d\x55\x90\xa1\x74\x44\xa7\xa1\xca\x05\x80\x38\x2b\x7a\xc6\xd7\x0f\x6e\xc3\xb7\x20\x58\x35\x6d\x7e\x26\xbc\x7d\xe4\x57\x8f\x7d\xb7\x5b\xef\x76\x2f\x9a\x96\xcd\x66\xbd\xd9\xa8\x0e\x4c\xb0\x26\xb5\x82\x8d\x01\xa0\x0d\x84\x0d\x7c\x30\x12\xc2\x47\x4d\x32\xc4\x05\x27\xae\x90\x3b\xd3\xe4\x85\x9d\xb7\x00\x82\x0f\x36\xcc\xb7\x1a\x52\x74\xce\x58\xbe\xe1\xbc\x11\xac\x05\x62\x21\x77\x64\x6a\x4e\xaa\x27\x73\x2a\xfa\xfb\xf7\x30\x05\xa1\xf3\xf9\x6b\x11\x88\x27\xbb\x85\x60\x42\x66\x68\x95\x46\xdd\xc7\x0a\x0b\x8a\x13\x2f\x63\x7b\xbb\xeb\x9a\x61\x6a\xfb\x2e\x09\xc3\x40\x2f\xba\xe1\xf0\x1e\x83\xbd\x49\x9b\xcd\x84\xe6\x28\x78\x5f\x53\x19\x8a\xf7\x7a\xed\x84\x23\xeb\x1a\xc1\x68\x89\xe2\xfa\x8a\x56\xc7\xa8\xfb\xa8\x60\x1a\xc1\x4f\x4f\xb0\xe8\xdc\x5e\x66\x60\x8e\xca\xf4\x56\xa2\x93\xa8\x77\x2d\xed\x43\xa3\x82\x59\x83\xc4\xc5\xdb\x2b\xd2\xce\x18\xe1\x27\xa8\x9c\x87\x3f\x1b\x52\x63\x89\x41\x48\xe3\x31\x61\xb8\x6e\x48\xf9\x84\x65\x23\xbc\x38\x75\xc5\x34\xf1\xe1\xb3\xdb\x87\xf1\x96\x6e\x5d\xf6\x21\xdc\x6d\x46\x23\x7d\x33\xac\x70\x29\xde\xb3\x7b\xe8\xe2\x81\xa5\xef\x15\xed\xa0\x19\xda\x4c\x57\x75\xb5\xdb\xe8\x3f\xa9\xd5\x95\xc5\xff\x56\x19\x50\x60\xe4\x49\xb4\xfb\x78\xcd\x4c\xba\x93\x20\x36\xdb\x49\x81\x59\xf1\xbd\xab\x64\x14\xa2\x38\x89\xea\xeb\x8f\x07\x6c\x67\x94\x93\x70\xe4\xe8\x9c\xc5\xc7\xe0\x5f\xc7\x5f\x7e\x77\xb0\x84\xee\xd7\x82\x1e\x95\xa4\x7a\x8f\x4a\x9d\xe5\xa9\x53\x09\xb3\xbc\x3d\x2f\x2c\xbc\xed\x17\x0a\xcf\x30\xb0\x2e\x31\x3c\xcb\x49\x9f\x03\xc3\x87\xd8\xef\x83\xda\x05\xf7\x51\xf7\x71\x5c\xd9\x26\x0e\xb7\xbf\x2e\x20\x89\x0e\x64\x76\x5e\x4f\xf4\xc2\x4a\x72\x25\xda\xf0\x2a\x49\x9c\x43\x87\xd3\x83\xe5\xa4\xd8\x18\x17\x57\xe2\x0c\x68\xea\x31\x1d\x04\xc1\xaa\x68\xa5\x24\x1c\x7c\x85\x65\x0d\x02\xb1\x5e\x55\x5b\xff\x50\xa3\x20\xd8\x24\xe3\xe5\x34\x99\xd3\x7c\xb4\xaf\x55\x17\x80\xbb\xc1\x43\xe4\xa3\xd0\x98\x34\x67\x0c\x92\x9d\x85\xc0\xd7\xb9\x4d\x8b\xdb\x11\xd4\x30\x09\x45\x2f\x1e\x87\x27\xd6\xb8\x42\x90\xee\x2d\x00\x25\x01\x4c\xd9\x53\xfb\xb1\x99\x64\x85\xab\x4b\x67\x0a\xcd\x30\xa3\x83\x4d\xb3\xbe\x34\x74\x85\xe0\x20\xc5\x43\x78\xf3\xad\x36\x41\xd2\xda\xfb\x2d\x08\xb4\x09\x4d\xb4\xd0\x95\x57\x86\xa2\xc5\xa3\x9f\x35\xa1\xcf\xc3\x71\x38\xc0\x97\xa7\x1c\x7f\x4f\xb6\xdb\xd7\xf1\x1b\xfd\xf0\xb8\x32\x80\xa1\xe7\x71\x18\xb1\x06\x6a\x4b\xe6\xe7\x45\xb0\xf6\xfc\xb0\x2e\xa6\x28\x24\xde\x81\xd5\xaf\x97\xf2\xba\x85\x3f\xba\xec\xfd\xf6\x4d\x62\x7e\x22\xdf\xfe\x34\xb0\xed\x0d\xa5\x07\xc7\x36\x83\xb6\xc3\xd9\xb8\x05\xe1\xba\x26\x58\x62\x5e\x68\xa4\xd0\x16\x0b\x75\xb4\x1c\x3a\xbe\xc4\x25\x6d\x9b\xb1\xa8\x1f\x85\xc3\x01\x3b\xcb\x46\xe3\x0d\xa3\x9d\x36\xa8\xda\x73\x6e\x6c\x67\x5f\xc4\x35\xb8\x3c\x5f\x7d\x53\x8d\x1b\x2d\x4d\x81\xfe\xa2\xed\x6d\xc3\x1a\xc6\xf1\x45\xfd\x5f\x5f\x1c\x2c\x8e\x59\x2c\xf4\xac\x85\xb6\x2a\x93\xe1\x36\x5b\xb5\x85\x4e\xdd\xa4\xa6\x5d\xca\x22\xa5\x65\x2c\xab\xc4\x65\x5e\xfb\x6c\x13\xc7\x63\x9c\x76\x26\x6e\x0e\x51\x5c\x74\x57\xbf\x5f\xf6\xf7\xfb\x9f\xba\x5d\x76\xc2\x5a\x9b\x4e\x62\x3b\x52\x08\xb7\x20\xdc\x97\x8c\xa2\xa6\xc7\x30\x6d\xd3\x0a\xac\xa3\x28\xda\xc6\xf1\x40\x29\xd6\xff\xb1\x7b\x20\x6b\x7b\xbe\xd9\x6e\x74\x2b\xd6\x87\x82\x6f\xaa\x4f\x9f\xdf\xeb\x5a\x92\x8b\x2d\xb0\xf3\x0b\x70\x72\x85\xaf\x08\x2c\x27\x86\x2d\xba\x9c\x18\xff\x04\x00\x00\xff\xff\xec\xb8\xd2\xfa\x76\x11\x00\x00")

func assetsAppCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppCss,
		"assets/app.css",
	)
}

func assetsAppCss() (*asset, error) {
	bytes, err := assetsAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.css", size: 4470, mode: os.FileMode(436), modTime: time.Unix(1490622751, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x3d\x73\xdb\x38\x10\xed\xf5\x2b\x70\xa8\x4d\xc3\xee\x6e\x6e\x00\x36\x97\xa4\x4d\x0a\xa7\x48\x95\x59\x82\x6b\x09\xf1\x12\xc0\x00\x4b\xca\xfc\xf7\x19\x90\x94\x4d\x31\x54\x92\x4a\xe0\xdb\x87\xb7\xdf\x90\xfe\xe7\xc3\xe7\xff\x9f\xbe\x7d\xf9\x28\x4e\xdc\x51\x7d\xd0\x97\x1f\x84\xb6\x3e\xe8\x0e\x19\x84\x3d\x41\xca\xc8\x46\x7e\x7d\xfa\x54\xfd\x2b\xd5\x05\xf7\xd0\xa1\x91\x83\xc3\x73\x0c\x89\xa5\xb0\xc1\x33\x7a\x36\xf2\xec\x5a\x3e\x99\x16\x07\x67\xb1\x9a\x3e\xee\x84\xf3\x8e\x1d\x50\x95\x2d\x10\x9a\xc7\x3b\xd1\x39\xef\xba\xbe\xbb\x00\xf2\x5a\x15\x62\x24\xac\xba\xd0\x38\xc2\xea\x8c\x4d\x05\x31\x56\x16\x22\x34\x84\x2b\x4f\x23\xe6\xbf\xb9\x98\x19\xb8\xcf\x55\x03\xa9\xca\x3c\x5e\x29\x34\x04\xf6\xa5\x68\x90\xf3\x2f\x22\x21\x19\x39\x51\xf2\x09\x91\xa5\xe0\x31\xa2\x91\x8c\xaf\xac\x6c\xce\x52\x9c\x12\x3e\x1b\xa9\x20\x67\xe4\xac\x20\xc6\xfb\x02\xd7\x07\x9d\x6d\x72\x91\x45\x4e\xf6\xda\xfc\x23\xcb\x5a\xab\xd9\x5a\x1f\x34\x3b\x26\xac\x87\x41\xab\xf9\x74\xd0\x6a\x29\x75\x13\xda\x71\x29\x3c\xa6\xfa\x20\x84\x10\xda\xc3\x20\x5c\x6b\x64\x87\xbe\x97\x33\x36\xe1\x4d\xcf\x1c\xbc\xb0\x04\x39\x9b\x3e\x2e\x51\xce\xa8\xac\xc9\x65\xd6\x6a\xfe\xaa\xaf\xb9\x0d\xd8\x97\x0d\xdb\x87\xb3\x88\x04\xa3\xf3\xc7\x1b\x97\x8a\xf7\xcd\xa5\x02\xbd\xb1\xe7\x58\x95\x87\x61\x13\x76\xee\x9b\x29\x72\x31\x55\xd4\xc8\xd6\xe5\xe2\xe9\x3f\xe1\x83\xc7\x75\x3e\x81\xde\x3f\x26\x80\xdc\x26\x86\x84\x14\xa0\xdd\x44\x31\x83\xef\x51\x2b\x72\x7f\xd2\xb1\xc1\x3f\xbb\xe3\x46\x67\x06\x77\x74\x96\xa4\xe6\x1e\x95\xae\xe8\x8c\x96\x5d\xf0\x53\x7a\xa5\xce\xbf\xcd\xed\x2d\x2f\xad\xca\x49\xab\xe5\xf6\x46\xc7\xf6\x29\xa1\xe7\xcb\x25\xcb\x0e\x97\x68\xe5\x34\x24\xa5\x47\x62\x3a\x69\x55\x8c\x0b\x2f\x47\xb8\x64\x25\x21\x71\x09\xa6\x10\xe7\xa3\x56\xc5\xbc\xc3\x44\x82\x98\xb1\x9d\xa8\x6f\x6d\x5f\x71\x4b\xef\x16\x6a\xd9\x91\x14\xe8\xe6\xe0\x25\x8c\x08\x5c\x6b\xd7\x1d\xaf\xe7\x7e\x36\xdc\xe7\xe1\x28\x05\x10\x1b\x39\x03\x65\x11\xd6\x23\xb3\xa3\x08\xbe\x0d\xdd\x9e\xe2\x64\x58\x2b\x4e\xc0\x56\x71\x3d\x84\x3d\x5d\xf2\x68\x91\xc1\x51\xe1\xf6\x74\x33\xcb\xef\x43\xa0\xbe\xbb\x9a\x4a\xe7\x63\xcf\xcb\xa8\x24\xf0\x47\x94\xe5\xd1\x32\x0f\xa2\x83\x57\xf3\xf8\xf0\x20\x32\x63\x34\x8f\x9b\x51\x79\xef\xf1\x73\x08\xfc\xcb\x2a\x97\x9a\x37\xf3\x93\xb3\x5f\x83\x98\x70\xb8\x9e\x4f\x31\x00\xf5\x68\x64\xb1\xc8\x9d\xe2\x14\x7c\x55\x9a\x85\xb6\xbf\xcb\xc5\xfd\x0d\x75\x82\x51\x45\xe8\x33\xee\xfa\x20\x18\xd7\x3e\x08\xc6\x9b\x3e\x3c\xbe\xf2\xbe\x8f\x62\xd9\x53\x2f\xf8\x4a\x7d\xa1\xed\xb5\x56\xab\x4b\x55\xb5\x9a\x5f\xcc\xb2\x9d\xd3\x7f\xd6\xcf\x00\x00\x00\xff\xff\x57\xef\xe6\x2f\xcb\x06\x00\x00")

func assetsAppHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppHtml,
		"assets/app.html",
	)
}

func assetsAppHtml() (*asset, error) {
	bytes, err := assetsAppHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.html", size: 1739, mode: os.FileMode(436), modTime: time.Unix(1490614795, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x3c\x5f\x73\xdb\x36\xf2\xcf\xcd\xa7\x40\x38\xf3\xab\xa8\x9f\x15\xd9\xee\xdd\xf5\x81\xaa\x9a\x69\x9b\x5c\xdb\x9b\xa4\xe9\x34\x7e\xb8\x19\x8d\xc6\x03\x89\xb0\x8c\x98\x22\x59\x12\x94\xa3\x71\xf4\xdd\x6f\x16\x7f\x48\xfc\xa5\x68\xc7\x4e\x6f\xe6\xfc\x40\x91\xc0\x62\xb1\x58\xec\x2e\x76\x17\x80\x77\xb8\x42\xbb\x1d\x9a\xc3\xe3\xd3\x27\x74\xf7\x0c\x21\x84\x8a\xd5\x87\x04\xdd\x1d\x26\xfc\xa3\x2e\xf2\x8d\xf9\x55\x6b\x9f\xac\xa8\xf0\x86\x74\x05\xdb\x22\x25\x59\x82\xee\x32\x5a\x33\x28\x95\xc5\x3b\x4a\x6e\x13\x74\xb7\xc5\x34\xe7\xb0\x48\xd5\x4f\xd0\x96\xe4\x8d\x78\x2b\x33\xbc\x5f\xe1\xf5\x8d\xf8\x22\x19\x2e\x6b\x92\x8a\x8f\xb4\x2a\xca\xb4\xb8\xcd\x35\x94\xeb\x22\x67\x55\x91\x21\xd1\xf7\x61\xf6\x6c\xb7\x9b\x16\xab\x0f\x68\x8e\xe2\xab\x26\x5f\x33\x5a\xe4\xf1\x58\x8c\x47\x7d\xa3\x0d\x61\xef\xaa\xd7\x59\x4d\xe2\xed\x04\xdd\x4c\xd0\x6e\x2c\x47\x0c\x7f\x15\x61\x4d\x95\xa3\x1b\x44\x73\xb4\x7d\x89\xb6\x8b\x9b\x25\x4a\xd0\x6e\xc6\x01\x0e\xcf\x34\x90\xbb\x16\x4f\xd2\xa1\x3c\xcc\x9e\x1d\xc6\xf1\x98\xd3\x01\x5c\xf2\x11\x02\xdc\x66\x18\xaa\xda\x1a\x00\x9d\xa0\x1b\xb2\xaf\x27\xa8\x60\xd7\xa4\xd2\x49\xba\x2a\x2a\x14\x53\x20\x08\x00\xf4\x1a\x85\xed\x86\xec\xd1\x9c\xd7\x2e\xe8\x72\x66\x54\xd3\x2b\x14\x43\x35\xcd\xf9\xac\xd9\xad\xb5\xf1\x40\xf5\xe2\x86\xec\x2d\x04\x87\x67\xee\x9b\x6c\xc1\x29\xd5\x39\x03\xb4\xb4\xac\xf0\x8e\xcf\x1d\x5e\x3f\x81\x41\xda\x0e\x88\x40\x1f\xaa\xf5\x7c\x8e\xa2\x1f\xb2\x55\xb3\x7d\x5f\x54\x2c\xf2\x23\x61\x78\x23\x09\x59\x08\xd8\x68\xa9\xc8\xe9\x45\x5b\x31\x5a\xb3\xa1\x78\x39\xf0\x40\xc4\x40\x83\x6c\xf0\x64\x98\xef\xc3\x0f\xd9\xc5\x04\xdd\xbf\xb3\xc7\x61\xbb\xaf\xb9\x26\x64\xad\x9c\x19\xd2\xe6\x95\x33\x8f\x4a\x77\x6a\xaf\x49\xe3\x68\x91\x17\x68\x84\x4e\xb8\x0a\x9d\xa0\xd1\x72\x34\xb6\x05\xba\x66\x95\x5f\x55\xf5\x3e\x38\x60\x51\x31\xa1\x89\xa3\xd1\x6c\xa0\xf6\xaa\x36\x27\x73\x1f\x7d\xa0\xce\x13\x34\x42\xa3\x71\x58\x09\x25\x06\x9f\x81\x6a\x41\x7d\x96\x6a\xa2\xd7\xf2\xf2\xae\xa4\x66\x55\x02\x0f\x51\x02\x36\x2d\x1e\x77\x36\xad\x0e\x19\x35\x20\xc5\x66\x55\xed\xf2\x4a\xd3\xe9\x7a\xba\xc5\x65\x6c\x34\xb0\x39\x24\xa1\x17\x82\x29\x92\x84\x69\xcd\x2a\x7d\x26\x96\x1d\x7f\xc6\x53\x20\xa3\xc5\x89\x62\x3c\x41\x2b\x1b\x29\xc8\x2f\x5e\x9c\x2f\xd1\x77\x68\xb5\x38\x5f\x8e\xd1\x9d\xea\xe7\xc5\xf9\xac\x95\x46\x55\x06\x45\x33\xbd\x07\x93\x68\xad\x75\xbd\x38\x5b\xce\xd0\xc1\x91\xa1\x26\xa7\x7f\xfa\x39\x13\x64\xcc\x15\xcd\x18\xa9\xb4\x71\x88\xe1\x52\x34\x41\x35\xc9\xae\x7c\x23\xa2\xa0\x8f\x67\x3d\x26\x9e\x55\x0d\xb1\xac\x7b\xa7\xcf\x8a\xb5\x7e\x3d\x41\xa3\x31\x7a\x3e\x47\x1e\x20\x92\x5d\x2d\x28\x7a\x81\xce\x97\x1a\xec\x43\x88\x08\xb6\xb8\xc2\x59\x6d\x37\xd1\xa6\xc3\x66\xb6\xe0\x9c\x87\xdd\xa2\x22\x2c\x8b\x16\xcb\x15\xc7\xfd\x0c\xe7\x7a\x7d\x05\x7a\xed\x41\xab\xcf\x8a\xc6\x32\x89\xf1\x8a\xb3\x52\x36\x5b\x5c\x2d\x7d\x2d\xfb\x87\x6f\xb2\xc0\xfd\xf2\xb2\xda\xe4\x94\x63\x24\x40\x6d\x12\xfe\xec\x0c\x01\xc8\x6d\xc2\x9f\x5d\x99\xa0\x3b\x91\xbf\x1e\x13\x21\xbc\xc1\xa0\xe7\x53\x11\xa8\x5b\xc8\xa5\x1c\x8a\xd6\x4d\x55\x91\x9c\xf9\x4b\x2f\x33\x5c\xb3\xcb\x6d\x91\xd2\x2b\x4a\x52\x34\x47\x51\xa4\xc1\x48\xf7\xcf\x6a\x29\x4a\x7b\x5b\x66\x74\x55\xe1\x0a\x8c\x75\xc7\x01\x63\x15\x4c\xd0\x62\xd9\x0d\x1a\x45\x3f\x93\xbc\x22\x5a\xe9\xc1\x46\xe5\xed\xae\xb3\x8d\x78\x67\x78\x44\xfa\x9c\xb3\x6a\x6f\x49\x40\x56\xac\x71\xf6\x5e\x30\x72\x2a\x39\xf6\xaf\xf7\xef\x7e\x03\xbb\x47\xf3\x0d\xbd\xda\xc7\x50\x3a\xd6\x26\x17\xad\x31\x5b\x5f\xa3\x98\x8c\xd1\x9d\xbd\x4a\x66\x05\x4e\x87\x77\x0e\x42\xeb\x10\xe0\x93\x51\x9d\xb0\x12\x57\x35\xf1\x34\x0b\xaa\x6d\x88\x5e\xa0\x35\x96\xcd\x1c\x19\x05\x94\x09\x7f\x76\x53\x23\xe5\x24\x51\x2f\x4e\x8d\x39\x31\x89\xbf\x58\x6b\x25\xa4\x27\x51\x2f\x4e\x8d\x83\xcf\x57\xdc\xb5\x92\xe2\x91\xa8\x17\xa7\xc6\xc6\xe7\x2d\xd6\x16\x67\xbc\x23\x09\x7f\x6a\x98\x0a\x0c\x0d\x0b\x9c\x5a\xfa\xf8\x0c\x34\x92\x87\x63\x53\x08\xb6\x4c\xa5\x44\x9d\x56\x5e\xfc\xf1\xfa\x75\x9f\x2e\x98\x93\x1f\x81\x95\x88\x12\x47\x20\x1c\x3f\xf2\x15\x66\x84\xfb\x93\xdc\xef\x83\x02\x5a\xaf\x7f\x6b\xb6\x2b\x52\xc1\xd7\x45\x85\xd7\x37\xda\x27\x65\x19\x07\xbf\xa2\x19\x89\x74\xed\x83\x3e\x61\xd6\x7d\x7d\x3a\x9d\x96\x19\xa6\xb9\xdd\x5c\xa7\x0f\x80\xb0\xf4\x44\x7d\x40\x2d\x1d\x60\xae\xa3\xa5\x03\xa2\xb5\x3a\x74\xaf\xad\x85\x18\xca\x2b\x01\xff\xe4\xdc\x69\xbb\x79\x6c\xbe\xb8\x30\x4b\x2f\x5f\xb8\x10\x0c\x67\xcb\x97\x91\x19\xd5\xcb\x17\x65\x8a\xed\x15\x96\x29\x66\xc6\xaa\x90\x62\x86\xed\xb0\xa2\x75\xee\x91\xf2\x3a\x64\xb8\x0c\x3a\xeb\x64\x03\xda\xf5\x77\x2a\xcd\x08\x0f\x9b\x51\xeb\xb9\xd5\xc2\x3d\x86\x8e\x26\x1c\x03\xaf\x5f\x88\xe9\x58\xea\x0b\x8a\x32\x24\x8a\x8e\xaa\x28\x58\x8e\xb7\xc1\x55\x8c\xc3\xc0\xb2\x07\x80\x51\x87\x48\xf9\x40\xda\xaa\x30\xcd\x48\xbe\x61\xd7\xe0\x05\x39\xee\x6a\x25\x69\xd5\xc0\x17\x67\xcb\xc5\xf9\xd2\x26\x0d\x75\x0b\x84\x4a\x42\xcc\x8c\x50\x04\x22\x83\x63\xc4\xaa\x41\xc5\x63\x93\xe0\x8a\x87\xb6\x7c\x24\xa1\x80\xa4\x8f\x20\xce\xd8\xaa\x65\xab\x13\x0e\x94\x21\xba\x78\xdf\x2d\x4d\xc0\x20\x3f\x11\x36\x43\xcb\xa2\x8c\xad\xb5\x56\x03\x81\xc5\x22\xee\x9b\xdb\xb4\xb8\xcd\x75\x92\x76\x38\x6b\xc8\x50\x7e\x75\x19\x28\xdf\xd4\x57\xe1\x41\x88\x46\x2d\xaf\xb8\xb2\x2e\x17\x01\x59\x81\x00\x03\xa2\x2b\x0f\xd3\x1d\x66\x34\xf5\x75\xbc\xe0\xb1\x08\x1f\x88\x2e\xd6\x01\xae\x68\xbc\xc0\xab\xda\x8e\x1d\x6c\x4e\xd0\x09\x67\x84\x8c\x77\x6a\x92\x91\x35\x23\xe9\xec\x73\x67\x11\xdc\x58\x57\xf4\xad\x7c\x1c\x20\x3a\xae\x22\xf0\xa7\xe8\x6a\x79\x5c\x14\xac\x65\xf3\xcc\x0d\x66\x78\x92\x42\x35\x0a\x45\x33\x3c\xc6\x54\x40\xda\xdc\x84\x62\x98\x55\x45\xf0\xcd\xb1\xe0\xa5\x13\x06\x85\x79\x41\xcd\xc9\x1e\x32\xd5\x4e\x9c\x05\xe1\xf5\x32\xe8\x81\xa2\x7b\xea\x88\xf4\x9f\x82\xe6\x24\xab\xb5\x30\x04\xb9\x52\x70\xcc\xa0\x00\xfe\x4b\x00\x30\xa8\xf0\x85\xc6\x7a\x83\xf5\x35\xcd\xd2\xa3\x74\x0b\xb0\x5e\x63\x28\xc4\xaa\xa3\xd7\x5c\xc8\xba\x70\xc9\xb3\xc2\x70\xc1\x32\xe1\x65\x70\x0b\x2e\xe5\x61\x12\x54\x7a\x5d\x20\x8f\xe8\xbd\x89\xa4\x66\xfb\x8c\xdc\x1f\xcd\xb9\x8d\x46\x64\xe8\xef\x0e\xa6\x8c\xb0\x7d\x09\xc8\xa3\x94\x56\xc3\xd6\xb1\xb9\x8f\x12\x59\x69\xcf\xb6\x42\xce\xfd\x15\x9f\x35\xe3\xba\x98\x11\xc2\x73\x0b\x56\x87\xbe\xac\x0f\x07\x95\x89\x1f\x1e\x8b\xd0\xbc\x21\x33\x4b\xd0\x55\xb2\xc1\x36\x1b\xd0\x18\xd8\xbb\xf4\x98\x14\x51\xe7\x5f\x78\x4d\x79\xd0\xb3\x27\x2a\xca\x69\xd3\x22\xb3\xbe\x46\x4d\x4e\xff\xec\x9a\x80\xc2\xce\xec\xb5\x54\x68\x77\x0b\xc3\xa7\x7e\xc2\xd9\xb8\x74\x6c\x77\xab\x43\xbd\xa2\x4e\x98\xa5\xa9\x96\x7b\x13\x45\x96\xc3\xd5\xd6\x05\xbc\xae\x8a\x30\x61\x89\xee\x84\x86\x27\x2d\xb6\x83\xa3\x99\xfa\xc8\x04\xf4\x04\xbe\x5b\x57\x74\x22\xe4\x6e\xd9\x9b\xab\x11\x9e\x63\x22\x7f\x3b\xa1\x56\xdd\x76\x04\x68\x71\xa3\x74\x89\x92\xf6\x4d\xcb\xf3\x94\x80\xab\xfb\x16\xbb\x6c\xf0\xec\xca\xf0\xaa\x4e\xe0\xa1\xc7\xaf\x35\x4b\xf8\xd3\xcd\x02\x75\x99\x19\x7f\xc0\x09\xad\x48\xce\xd3\x74\x77\x91\x04\xe6\xd9\x95\xce\x4b\xc2\x69\xfa\x7a\x47\x72\xf6\xa6\x03\x6d\x51\x91\xdd\x84\x7f\xe8\x33\xa1\x50\x2e\xc8\x6e\x29\xa6\x83\x43\xb4\x42\xd2\x22\xde\x10\x76\x59\x91\x3f\x1b\x62\x1a\xf4\x12\xb3\xeb\x09\xa2\x57\x6d\xc8\x8d\xd6\x38\xcb\x56\x78\x7d\x63\x4b\xd0\xc7\x6b\x20\x26\x27\xb7\xe8\xdf\x6f\xdf\xfc\xc2\x58\xf9\x87\xc0\xa6\xdb\xe1\x8f\xd7\xd5\xb4\xc8\x2b\x82\xd3\x7d\xcd\x30\x23\xeb\x6b\x9c\x6f\x82\xce\x33\x92\xca\x0c\xad\x78\x9b\xf7\x8c\x87\x06\x73\xf4\xf7\xd0\x4a\x0c\xa0\x80\xb9\xa9\x01\xec\x9b\xb3\x33\xf4\xf5\xd7\x5e\x8a\xf5\x3f\x55\x1f\x6b\x49\x1b\xd1\x67\x5d\x16\x79\x4d\x2e\xc8\x47\x36\x9e\x70\xe2\x37\x84\xfd\x21\x4b\x7f\x21\x38\x25\x55\x1c\xbd\xc1\x35\x7b\xf1\x56\xb2\x27\x1a\x8f\x87\x27\x25\x0f\x16\x63\x4a\x92\xc7\xd1\xcf\xaf\x2f\xa2\x09\x12\x6c\x67\x55\x43\x2c\x1f\xbc\x9b\x09\xee\x41\x39\xeb\x26\x67\x00\x10\xc9\x79\xaf\x68\xfc\xf5\xaa\xa5\xf0\xc5\x7b\x9a\xaf\x21\x36\xeb\x30\x79\xd5\x51\x20\xca\xdb\x65\xf4\xd0\x89\x4a\x59\xd4\x3d\xb2\x52\xac\x3e\xfc\xcf\x0a\xc9\xe7\x4e\xfe\xef\xef\xde\x07\x67\xdf\x3f\xb3\x3f\x15\x39\x23\x39\x7b\x71\xb1\x2f\x79\xc0\x8d\xcb\x32\xa3\x6b\x0c\x6c\x3a\xfd\x50\x17\x79\xe4\x60\xc8\xd3\xd8\xca\x9a\x16\xab\x0f\x63\x77\x96\x85\x19\xbd\x94\xee\x80\x97\xf7\x9a\xcd\x88\x23\x5c\xd2\x53\xbe\x7e\x9d\xca\x5c\x62\x34\xd1\x57\x4f\x7f\x82\xb1\xc3\xcb\xcd\x7d\x2b\x91\x9e\x09\xae\x08\x5b\x44\xa4\xaa\x8a\xaa\x8e\x96\x30\x71\x79\x93\x65\xbe\xd9\x72\x3b\x05\x1f\x0e\x5a\x43\x80\x6f\x7b\xf9\xfe\x16\x4e\xde\x5a\xbd\x7a\x1b\xef\x28\xb9\x9d\x6e\x31\xcd\xa7\x82\x69\x76\xd4\x89\x3a\x4f\xa9\x4b\x3b\x4e\x87\x04\x43\x5a\x27\x5a\x4b\xbc\xaa\x63\x6d\x40\x47\xa5\x0e\xfe\x4e\x4f\x55\x6a\x45\x1e\x1f\x41\x0c\x6f\x82\x83\xe1\xdd\xf8\x07\xe3\xd9\x65\x9a\xb9\x52\x23\xd5\x6b\xa0\xdc\xa8\xb5\xce\x94\x18\x6f\x0a\xf9\xa9\x25\xa6\x5d\xa2\x07\x4b\x4c\x60\x63\xe5\xb8\xc4\xc8\x89\xe8\x11\x1a\x05\xa9\xce\xff\xf4\x80\x76\xd1\x6a\xbb\xe4\xb7\x2e\x44\x70\x33\xcd\x03\xba\xa0\x4b\x1f\xfa\xa0\x19\x33\xd3\x08\x3d\xe3\xf2\x48\x49\xe7\xfb\x0e\x13\x13\x09\x6f\x8a\x89\x7f\x67\xe0\x89\xc4\x44\x53\x42\x39\xba\x7e\x3d\x3c\x46\x67\x50\x4e\xfa\xb5\xac\xac\xc8\xee\xbe\xca\xf5\x12\x73\xd8\x39\xb4\x85\x95\x22\xf2\x2c\xec\x19\xde\x5f\x96\xb8\xa9\x7b\xf3\x99\xb5\x58\x60\x91\x38\x55\xa6\xed\x7a\xbb\x4a\x31\x41\x11\x87\xe6\xa9\x60\x56\x94\x25\x78\x48\x66\x88\x21\xa8\x42\x73\x85\x76\xce\x7d\xfe\x7d\x84\x5e\xa2\x88\x93\x12\xa1\x44\x16\xcd\x06\x8f\x31\x3a\x11\x2f\xfe\x61\xe6\xe4\x63\x30\x16\x3a\x86\x19\xda\xf6\x70\x4f\x47\xdb\x54\xf4\xc9\xdc\x9f\x3e\xef\xa1\x5b\x89\xa3\x2f\xe8\x44\x18\xd2\x7b\x17\x09\x76\x45\x89\xdc\xd3\xb0\x76\x00\x22\x88\xb4\xa2\xc4\xd2\x28\x15\x82\xd9\x79\x16\x14\x35\x15\x8d\x12\xd4\x54\x34\xa0\x23\x1e\xf7\x65\x57\x64\x8d\x99\x97\xcf\x9b\xad\x3e\x1f\xba\x17\x1b\x47\xa7\xe6\x32\x74\x17\x89\xf6\x51\x82\xf2\x66\x7b\x18\xdb\xd8\x69\x4e\x83\x22\x94\x16\xeb\x66\x4b\x72\x36\x5d\x15\xe9\x7e\x6a\x07\x6c\xf1\x68\x9d\xd1\xf5\xcd\x48\xb3\x50\x4e\x06\xa3\x75\x29\x48\xde\x4c\xaf\x69\x4a\x2e\xeb\x66\x65\xe4\xb3\x2c\x25\x02\x40\x34\xef\x7a\xde\x10\xf6\x3a\x23\xf0\xfa\xe3\xfe\xd7\x34\x8e\xa0\x5e\x9f\x44\x8e\xb8\x03\xaa\x7f\xdc\xff\x94\xe1\xba\xfe\x0d\xbc\x91\xa8\x29\xa3\xf1\xe2\x6c\xf9\x20\xca\xa5\x97\xd3\x39\x44\xd7\x34\x4d\x49\x1e\x7b\xcf\xbe\xd8\xf6\xd4\xf1\x34\x42\x47\x60\x5c\x6f\xc8\xf5\xe0\x8e\xa5\x38\x0d\x12\x9d\x15\x75\x80\x1f\x64\x80\xd4\xd7\xc5\x6d\x08\x80\x33\xdb\x8f\x83\x00\xd5\xe5\xef\x55\x51\xe2\x0d\x16\x82\xe4\x9f\xe4\xde\x09\x03\xcf\xe0\xe1\x53\x66\x8c\xa3\x8f\x17\x9c\x59\x7f\xe9\x40\x85\x18\x3f\x8a\x6c\x4a\xcd\x4a\x49\x2e\x74\x2b\x20\x9f\x1d\x30\x0c\xdc\x56\x43\x74\x44\x48\xfb\x95\x18\x39\x62\x39\x98\x4b\x7c\x19\x6e\x56\xc7\xd4\x5e\x82\xe8\x9a\x2f\x8b\x82\x2c\xae\x48\x56\xe0\xf4\xe1\x4c\xce\x0a\xb1\x6e\x4c\x05\xa2\xbe\x01\x28\xa7\xb6\x6f\x04\x0a\x46\x1f\x42\xeb\x0c\x87\xc6\xc0\x3d\x9c\xcf\xd1\x07\xb9\x0e\x4c\x01\xd1\x83\x25\xf9\x38\x99\xe0\xd3\x3c\x0a\x99\xad\xdb\xf6\x74\xc4\x72\xbf\xe7\x31\x88\x05\x44\xf7\x26\xd3\x94\x9b\x22\xcb\x68\x38\x29\x61\xf5\xa7\xa5\x31\x3c\x76\xcb\x86\xe2\x61\xeb\x71\x38\xe9\xcb\x03\xe0\x57\x00\xf1\x55\x4d\xd8\x05\xdd\x92\xa2\x61\xb1\x24\x6f\x82\xce\xcf\xce\xce\x8c\xd4\x1a\x07\x95\xd5\xbe\xa8\xa8\x66\xb8\x0a\x7a\x15\x60\xbd\x5a\x35\xd1\x12\x5d\xcf\xe7\x73\x34\x02\x55\xa3\xf9\x66\xe4\x98\xbc\x9c\x1e\xdf\x39\x6b\xb1\xba\x33\xfb\xea\xdd\x5b\xe9\x1b\xbe\x29\x70\x4a\xd2\xd1\x84\xa3\xf4\xed\xac\xf1\x5f\x27\x27\x6f\xa3\x4c\x9c\x12\x3d\xdf\xde\xce\x54\xa2\x7f\xb8\x10\x7c\x96\x12\xf3\xd3\x81\x6a\x8f\x98\x99\xdf\x1d\x1c\x68\x77\xc2\x9f\x13\x43\x0f\x84\x2a\x25\xda\x7b\x57\x0f\xd2\x9b\xf0\xa7\xd9\x46\x40\x77\x65\xc2\x7b\x4c\xe4\xaf\x7e\x88\x1c\xf3\x03\xa5\xf0\xe3\x3b\x95\xd6\x2e\xb4\xde\x93\xa2\x9d\x1c\x3a\x53\x15\x75\xbe\x6b\x30\x70\x23\x7d\x96\x56\x25\xed\xb4\xb9\x25\x41\x6b\xa0\x72\x1e\xd2\x49\xe6\x76\x81\xef\xa6\x56\x24\x87\x77\x7e\xc2\x60\xee\xc6\x83\x0b\xe5\x56\x8b\xf3\x3f\xca\x02\x1d\xf3\xa8\xbf\x2c\xf1\x1e\xde\xf2\x10\x2c\xc4\x5a\x6b\x6a\x04\xda\x98\x67\x88\x7f\xcd\x59\xcc\xae\x69\x2d\x18\x32\xf6\x18\x5f\x19\xc8\xb9\xfb\x41\xff\xfd\x3a\x3f\x8e\xb5\xe9\x03\xf7\xe8\x71\xa7\x8f\xef\x69\x4e\x53\x5a\xcb\xb8\x3a\x5a\x65\xc5\xfa\x26\x72\xb6\x37\xc1\xb5\x7a\xe2\x9e\xf3\x22\x57\xdb\xd2\x07\xbd\xdf\x94\xe4\xa1\x9e\xa5\x25\x3c\xde\xb1\xdd\x5b\xa8\x3b\xf7\x5c\xdc\xe7\x0e\xd4\x39\x47\xc7\xbb\xc9\xd0\xbc\x47\x77\x52\xc2\x30\xcd\xb8\xce\x98\xed\x72\x72\xcb\x9b\xb6\x04\xac\x2b\x82\x19\x79\x25\x3f\xff\x59\xe1\x0d\xfc\xda\x47\xa4\x32\x3a\x44\x63\x19\x3f\x4e\xc8\x15\x95\x91\x8f\x4c\x8a\xa7\xb9\x3b\x2f\x07\xa8\xce\x1e\x2e\x87\xe0\xc5\xf2\x9e\xd9\x30\xc4\xea\xfe\x57\x87\xb9\xc9\xa6\x34\xcf\x49\xf5\xcb\xc5\xdb\x37\xbe\x2d\x72\x79\x26\xd1\x13\x9c\x7a\x42\x13\x75\x75\x4c\xd0\x8f\x3e\x7d\x42\xe6\x65\x3b\xef\xde\x40\x7b\xb4\xa1\x27\xaa\xc8\xa8\x3b\x2f\x92\x1d\x71\x94\xd1\xc8\xf2\x76\x32\x6a\xf1\x42\xdc\x02\x8b\x12\x14\xa1\x13\x1f\x63\xdc\xeb\x91\x5c\x18\xa6\xb8\x2c\x49\x9e\xfe\xc4\xcf\xe2\x64\xd4\xbb\xc9\x68\x41\xf1\x76\xa6\x61\x74\x6f\x64\x5c\x17\xb7\x09\x7f\x76\xab\x2a\x98\x80\x84\x3f\x8d\xb2\x94\xe4\x89\xfc\xb5\xbd\x03\xf3\x94\x80\xbe\x47\xdf\xc6\xc2\xc1\x0b\x5d\x9f\x63\xe9\x32\x3e\x91\x5f\xdc\xcc\x0d\xe8\xf6\x09\x6c\x9c\xe8\xf5\xf1\x0c\x1c\x3f\x4c\x66\xe6\x7e\xe0\x61\xa7\x0b\xd5\x75\xbc\xac\x76\xce\x36\xc9\x73\x46\x59\xbd\xf8\x5b\xe8\xd4\xd3\xc4\x95\xe4\x21\x66\xcd\x6c\x66\xb6\x09\xf0\x45\xf3\x39\xec\x73\x65\xc3\x4d\x0c\x55\x77\x84\x3d\xb7\x28\xf9\x88\x78\x9d\x73\x03\x9a\xdb\x84\x2d\xbe\x01\xb7\xb8\x66\x97\x94\x91\x6d\xac\x20\x27\xc0\x9f\x33\xf1\xf3\xcd\x52\x9c\x2a\x72\x6d\xc4\x80\x30\x30\xb4\xff\xfe\x5c\xa9\x99\xba\xbb\xde\x9b\x25\x44\x5a\x2e\x45\x6f\xe0\xdd\x05\x43\xad\x58\x0e\xd9\x13\xe5\x79\x62\xf0\xcc\xd0\x1c\x71\x37\x6d\x43\xd8\x0f\x8c\x55\x74\xd5\x30\x12\x47\x37\x64\x1f\xd9\xa9\x68\x35\x2d\x15\xf5\xb7\x69\x2a\xc7\xa0\xaa\x61\x0b\xe1\x93\x47\xe8\x86\x6d\xf4\xc2\x58\xe5\xb9\x63\xff\x58\x07\xe4\x29\x51\x5f\x92\x0a\xb9\x99\x04\xbe\x6f\x71\x74\x03\x70\x22\x6e\xe0\x8d\x1f\x68\xf8\xef\xa1\x1b\xc7\x56\x08\x9e\xff\x36\x24\x39\x70\xc9\x5e\x3b\x24\xe7\x58\x96\xe1\x4b\xa4\x88\x55\xc4\xc9\x2b\x5d\x1b\x33\x3a\xad\x0d\x49\x58\x83\x9f\x11\xc9\x6e\xc7\x3d\x80\x20\x66\xa1\x93\xba\x7d\xed\x40\xd4\x26\xe2\xbf\x00\xc8\x8b\x1e\xd6\x59\x21\x79\x20\x74\x2e\xaf\x61\xb8\x81\x82\x1c\xc5\x77\x75\x89\x73\xc4\xe9\x9d\xb3\x0a\xaf\x6f\xbe\x8f\x4e\x5c\x72\x8c\x4b\x26\xe3\x93\xe8\xbb\x53\x68\xf6\x7d\x74\xe2\x15\x2a\x13\x29\xb8\x34\x01\xa4\xc2\xb5\xeb\xd0\xcd\x1c\xc7\xc8\xd3\xaa\xf5\x88\xcc\xdb\xb7\x6d\xb5\xfe\x4f\x04\xbc\x56\x88\x0f\xfd\xc4\x1a\xbb\x70\x07\xfd\x74\x2a\x6c\x21\x42\x0f\x43\xc8\xe6\xb3\xc4\x0f\x3d\xeb\x95\xae\x4b\xd5\x82\x0e\xa7\x5d\xee\xb9\xfb\x89\x7f\xc3\x0f\xdd\x1e\x9f\x34\x77\xe6\xc4\x71\xdd\xcb\x9a\x94\xb8\xc2\xac\xa8\xbe\x3f\x1d\x34\x7c\x2f\x89\x02\xd7\x50\x0a\x9d\x00\xd6\x94\x68\x71\xfb\xc8\x2f\xd2\x76\xc7\x60\x15\xfd\xdd\xf2\x0b\x4f\x61\xe1\xf3\x4b\x09\xf4\x1c\x10\x12\x41\xd4\x03\xf0\xf5\x8a\x9e\x2e\xcd\x3d\x0c\xf2\x6b\xb7\xdf\xae\xf8\x6c\x72\x46\x0d\x57\x83\xbf\xcf\x6c\x67\x4f\xf9\x26\x7f\xa9\x7b\x2e\xf7\x3d\x82\xee\xf9\x65\xdd\xac\x1e\xec\x2b\x7b\x36\x4d\x8e\x79\xe9\x86\x93\xfe\x05\x3a\xef\xf1\xd5\xfb\x7a\x3f\xe6\xaf\xb7\x9d\x3f\x9e\xcb\xce\x2f\x75\x1d\xd9\x96\x3e\xb6\x11\x6d\x65\x0c\xf0\x8a\x64\x42\xae\x8d\x6d\x4b\xee\x3f\xbe\x44\xc2\x81\x40\x09\x82\xd6\xe6\x72\xd8\x94\x46\x60\xfb\x7c\x2e\x70\xd9\x36\xc4\x02\x93\x50\x4e\xf6\x2b\x2c\xfe\x30\x05\x49\xfb\x66\xaa\x81\xa8\x53\x6f\xb6\x3a\xb4\xb5\xf2\xfd\x9e\x6a\xa1\x6d\xa8\x79\x55\xa3\x7f\xba\xac\xab\x1c\x6d\xc6\x56\x1c\xe0\x59\x76\x27\x73\x6c\x86\x0d\xd8\xbc\x1b\xb0\x07\xa6\x7b\x7c\x75\xb5\x06\x31\x3f\xc5\x75\x4d\x58\x7d\xca\x73\xf0\xd3\x7a\xb7\x39\x66\xf3\x9e\x9e\x92\x0c\xef\x6d\x42\x0c\xe9\xec\x0e\x9c\xde\x27\x13\x17\x62\x7d\x45\x4a\x82\x99\x7b\x7c\x4f\xa2\xe8\xd9\xc4\xe5\xed\xdc\xd1\x70\xb5\x2e\x4a\xbc\xa6\x6c\x3f\x3f\x9f\x9e\x1d\xe1\xe7\xe3\xf4\x73\x36\xfd\x87\x8f\x5d\xc1\x41\xe3\x3c\x2d\xb6\x0f\x18\xb4\x68\xf7\xf4\x83\x1e\xd4\x8f\x67\xd0\xf7\xb8\xb6\x72\xb0\x34\x5b\x1d\xd9\x0d\x5d\x1c\xe9\xd7\xec\x14\x33\x6c\xe5\x34\x05\xb3\x4d\x09\x1c\x71\x4d\x1f\x21\x9a\x23\xfb\xca\xb5\xea\xa7\xa3\xa3\xdd\xde\x00\xd0\x05\x0f\x30\x2e\x65\x6d\xb4\x44\xff\x6f\x6f\x7e\xba\xfa\x21\x81\x5d\x10\xfb\x7c\xa4\xd5\x93\x51\xdd\xd7\x95\xe4\x48\x4e\x6e\xd1\x2b\x4f\x58\xcc\xf7\x56\x04\xed\xc7\x0c\x9c\x26\x15\xe0\xbd\x01\x62\x90\x8e\x0b\xca\xcf\x6e\xbf\x30\x29\xee\x71\x8b\xbb\xc1\xb7\x63\x52\x45\xa7\xa1\x51\x6c\xf9\x56\xa0\x07\xfe\xdb\xb3\xb1\x03\x5c\x13\xb0\x56\x0a\xe6\xff\xd0\xb7\x67\x1e\xee\x8a\xe5\x13\xf0\x9e\xa0\x51\x32\x42\x27\x28\x8e\xce\x22\x74\x02\xad\xc7\xd3\x3a\xa3\x6b\x12\xbf\xf8\xc6\x45\x0e\x8b\x62\xed\x37\x6c\xa6\x82\x28\x31\xf0\x8c\x86\x9a\x45\x5d\x06\x8b\x23\x0f\xe5\x8b\x78\xe5\x82\x2e\x07\x2d\xdf\xea\xcf\xdb\xc8\x59\xcc\xfd\x13\x65\xff\x7b\x3f\x53\x73\x4d\x85\x75\x56\x61\x95\xa3\x0a\x2a\xeb\xa0\xa4\x6a\xf0\xa0\x92\xcf\xe5\x0c\x7a\x60\x7d\x47\x90\x02\xe6\x28\xe4\x98\xdb\x4e\xfc\xc1\xb9\xd6\x36\xe5\xbb\xda\x80\xfe\x3f\x01\x00\x00\xff\xff\x9e\x5b\x5c\x0c\x3b\x53\x00\x00")

func assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppJs,
		"assets/app.js",
	)
}

func assetsAppJs() (*asset, error) {
	bytes, err := assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.js", size: 21307, mode: os.FileMode(436), modTime: time.Unix(1490617015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsNextSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\xf1\x33\xbd\x5a\x33\x49\x55\xb0\x24\x1e\x7a\xef\x43\x14\xb4\x49\xa8\x5d\xc5\x84\x44\xf6\xe9\x17\x57\x61\x17\x96\x61\x06\xfe\xe1\xe3\xd7\x21\x59\x6c\xff\xd3\x25\x18\x72\x31\x2e\x9f\x42\xe4\x9c\xab\xfc\x51\xcd\xab\x15\x8a\x99\x45\x48\x96\x90\xfd\x10\x9d\x21\xc5\x4c\x70\xa3\xb7\x2e\x9e\x21\xf9\x31\x7f\xcd\x9b\x21\x06\x43\xf1\x7d\xa9\x2f\xb4\x45\x88\xeb\xfc\x37\x1a\x7a\xab\x79\x1f\x3a\x1f\xef\x67\x95\x54\x84\x5f\x3f\x4d\x0f\xd0\x17\x00\xa0\x97\x9f\xe8\x30\x18\xfa\x46\xdd\x94\x2d\x43\xca\xa6\x94\xcc\x7b\x92\x35\xe3\x4a\xe2\x05\x76\x07\x6c\x0f\xd8\x3d\x41\x2d\xec\x7e\x42\xb2\x7d\x71\x0b\x00\x00\xff\xff\x22\xf8\x97\x68\xec\x00\x00\x00")

func assetsNextSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsNextSvg,
		"assets/next.svg",
	)
}

func assetsNextSvg() (*asset, error) {
	bytes, err := assetsNextSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/next.svg", size: 236, mode: os.FileMode(436), modTime: time.Unix(1490506165, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xe1\x4a\x03\x31\x10\x84\xff\xdf\x53\x0c\xeb\xdf\xda\xec\xc6\xd6\x2b\x72\x39\xd0\xff\x3e\x84\xd0\x73\x73\x78\xde\x95\x26\x24\xc5\xa7\x97\x94\xd4\x62\x95\x90\x5d\x32\x7c\x99\x99\x2e\x24\xc5\xe9\x73\x9a\x83\x23\x1f\xe3\xe1\xc9\x98\x9c\xf3\x3a\x3f\xac\x97\xa3\x1a\xcb\xcc\x26\x24\x25\xe4\x71\x1f\xbd\x23\xcb\x4c\xf0\xc3\xa8\x3e\xd6\x47\x1a\x87\xfc\xb2\x9c\x1c\x31\x18\x96\xcf\x97\xfa\xa6\x53\x84\x78\x5c\x3e\x06\x47\x77\x1b\x2e\x87\xaa\x70\x5f\xad\xc4\x12\xde\xc7\x69\xba\x02\x7d\x03\x00\xdd\xe1\x2d\x7a\xec\x1d\xbd\xa2\xdd\xae\x1e\x19\xbb\xcb\x94\x0d\x17\xa9\xac\x2f\x32\x7f\x68\xb1\x67\x50\xe4\x67\x15\xb2\xa8\xbf\x7f\xe8\x4d\x91\xdd\xa5\xc7\xbc\xcc\x43\x2d\x71\x63\x5d\x3c\x98\xf1\x5c\xe2\xdb\x2d\x18\xb2\x12\x48\xfb\x9f\x5a\xd1\x6b\x9c\xd1\xbe\xa9\x23\x24\xed\x9b\xef\x00\x00\x00\xff\xff\x0a\xc1\xa7\x81\x72\x01\x00\x00")

func assetsPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPauseSvg,
		"assets/pause.svg",
	)
}

func assetsPauseSvg() (*asset, error) {
	bytes, err := assetsPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pause.svg", size: 370, mode: os.FileMode(436), modTime: time.Unix(1490523630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xd1\x4a\xc3\x40\x10\x45\xdf\xf3\x15\x97\xf1\x35\x76\xef\xae\x89\x11\xc9\x06\xf4\xdd\x8f\x10\x1a\x67\x83\x31\x29\xdd\x25\x5b\xfc\x7a\x69\x59\x29\x94\x32\xcc\xc0\xbd\x1c\xce\xf4\x71\x53\x9c\x7e\xe6\x25\x7a\x09\x29\x1d\x5e\x8d\xc9\x39\xef\xf2\xd3\x6e\x3d\xaa\x71\x24\x4d\xdc\x54\x90\xa7\x7d\x0a\x5e\x1c\x29\x08\xe3\xa4\x21\x95\xb0\x4d\x63\x7e\x5f\x4f\x5e\x08\xc2\xf1\xb2\x32\x54\xbd\x22\xa6\xe3\xfa\x3d\x7a\x79\x68\x78\x1e\x29\xc5\x63\x51\x59\x27\xf8\x9a\xe6\xf9\x0a\x0c\x15\x00\xf4\x87\xcf\x14\xb0\xf7\xf2\x81\x8e\xf5\x33\x61\x1b\xd6\x96\x3c\x27\xdb\x10\xbf\x62\x0a\xa8\x37\xc6\x97\x7f\xe1\xb2\x2e\x63\xb1\xdd\x18\x5d\x7b\x51\xbd\xa1\x6b\xeb\xae\x05\x61\x6b\x0b\xdb\xdd\x6b\x0b\x7a\x7d\x67\x74\xa8\xca\x89\x9b\x0e\xd5\x5f\x00\x00\x00\xff\xff\x74\x48\x45\x6f\x3b\x01\x00\x00")

func assetsPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPlaySvg,
		"assets/play.svg",
	)
}

func assetsPlaySvg() (*asset, error) {
	bytes, err := assetsPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/play.svg", size: 315, mode: os.FileMode(436), modTime: time.Unix(1490506353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrevSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\x31\x4c\xaf\xd6\xfc\x89\x5a\x4a\x49\x3c\xf4\xde\x87\x28\x68\x93\x50\x77\x15\x13\x12\xd9\xa7\x5f\x94\xc0\x2e\x2c\xc3\x0c\xfc\xc3\xc7\xaf\x43\xb2\xb4\x5f\xe6\x6b\x30\xec\x62\x5c\xbf\x84\xc8\x39\x37\xb9\x6d\x96\xcd\x0a\x05\x40\x84\x64\x99\xb2\x1f\xa3\x33\xac\x00\x26\x37\x79\xeb\x62\x09\xc9\x4f\xf9\x7b\xd9\x0d\x83\x40\x0a\xe7\xf2\x50\x69\x4b\x21\x6e\xcb\xff\x64\xf8\xad\xc3\x31\x5c\x1e\xef\xa5\x4a\x2a\xa6\x3f\x3f\xcf\x0f\x30\x54\x44\x44\x7a\xfd\x8d\x8e\x46\xc3\x3f\x24\xfb\xbe\xfe\x00\x7d\xf6\xb5\x04\xce\x24\x3b\xd0\x8d\xc5\xab\xc4\x29\xdb\x22\xf1\x24\xb5\xb0\xc7\x09\xc9\x0e\xd5\x3d\x00\x00\xff\xff\x27\x39\x48\xbf\xee\x00\x00\x00")

func assetsPrevSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrevSvg,
		"assets/prev.svg",
	)
}

func assetsPrevSvg() (*asset, error) {
	bytes, err := assetsPrevSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prev.svg", size: 238, mode: os.FileMode(436), modTime: time.Unix(1490506308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRandomSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xd1\x6a\xc3\x20\x18\x85\xef\xf3\x14\x87\x7f\xb7\x59\xfd\x75\x9a\x95\x11\x03\xdb\xfd\x1e\x62\xd0\x4c\xc3\xb2\xa4\x54\x89\x65\x4f\x3f\x6c\x2c\xdd\x42\x11\x85\xff\xf8\x9d\x73\xb4\x0d\x8b\xc3\xf9\x7b\x9c\x82\x25\x1f\xe3\xf1\x45\x88\x94\xd2\x2e\x3d\xed\xe6\x93\x13\x8a\x99\x45\x58\x1c\x21\x0d\x87\xe8\x2d\x29\x66\x82\xef\x07\xe7\x63\x19\x96\xa1\x4f\x6f\xf3\xd9\x12\x83\xa1\xf8\xb2\xa9\xab\x5a\x87\x10\x4f\xf3\x57\x6f\xe9\x41\x73\x5e\x54\x84\xc7\x12\x25\x15\xe1\x73\x18\xc7\x1b\xd0\x55\x00\xd0\x1e\x3f\xa2\xc7\xc1\xd2\x3b\xa4\x31\xb5\x32\x90\x7b\x53\x6b\xbe\x4c\xc6\xe0\x87\xc4\x5d\x50\xea\x95\x94\xcd\x8a\xca\xe7\xbf\xac\xdb\xb4\xef\xaf\xe5\xd3\x3c\xf5\xa5\x79\x13\xaa\x39\xb7\xbe\xa2\xe1\xba\xc9\x9f\x93\xb5\xcc\x5a\xce\xbf\xc6\x6e\x9f\xd1\xac\xd7\xff\x3d\x59\xd5\x37\x4f\x2b\x5c\x57\x95\x23\x2c\xae\xab\x7e\x03\x00\x00\xff\xff\xa2\x45\x96\xa5\x83\x01\x00\x00")

func assetsRandomSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRandomSvg,
		"assets/random.svg",
	)
}

func assetsRandomSvg() (*asset, error) {
	bytes, err := assetsRandomSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/random.svg", size: 387, mode: os.FileMode(436), modTime: time.Unix(1490535047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRepeatSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4e\xc3\x30\x10\x44\xef\xf9\x8a\xd1\x72\x2d\xf5\xc6\xad\xa5\x0a\xc5\x39\x70\xe7\x23\x10\x35\xeb\x88\x90\x54\xb1\x15\xa7\x7c\x3d\xb2\x71\x01\x55\x96\x3d\x1a\x6b\xf4\x76\xb6\x0b\xab\x60\xfb\x1c\xa7\x60\xc9\xc7\x78\x79\x52\x2a\xa5\xb4\x4f\x87\xfd\xbc\x88\xd2\xcc\xac\xc2\x2a\x84\x34\x9c\xa3\xb7\xa4\x99\x09\xde\x0d\xe2\x63\x35\xeb\xe0\xd2\xf3\xbc\x59\x62\x30\x34\x97\x4b\x7d\xd3\x09\x42\x5c\xe6\x0f\x67\xe9\xe1\xc8\xf9\x50\xfd\x78\xac\xa8\x56\x13\xde\x87\x71\xfc\x0b\xf4\x0d\x00\x74\x97\xd7\xe8\x71\xb6\xf4\x82\x93\xd9\x69\x83\xb6\x35\xbb\x23\x67\x63\x0c\xbe\x48\xd5\x98\xdc\xf1\x4e\x37\xdc\x34\x4f\xae\xb2\x4a\x70\x71\x6f\x11\x9b\xa5\x5c\xe1\xfa\x23\xbf\x15\xfe\x6d\x53\xcc\xb2\x59\x3a\x64\xbd\x16\xbd\xcd\x52\xd2\x37\xf5\x09\xab\xf4\xcd\x77\x00\x00\x00\xff\xff\x5e\x9e\x3f\xba\x36\x01\x00\x00")

func assetsRepeatSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRepeatSvg,
		"assets/repeat.svg",
	)
}

func assetsRepeatSvg() (*asset, error) {
	bytes, err := assetsRepeatSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repeat.svg", size: 310, mode: os.FileMode(436), modTime: time.Unix(1490535180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/app.css": assetsAppCss,
	"assets/app.html": assetsAppHtml,
	"assets/app.js": assetsAppJs,
	"assets/next.svg": assetsNextSvg,
	"assets/pause.svg": assetsPauseSvg,
	"assets/play.svg": assetsPlaySvg,
	"assets/prev.svg": assetsPrevSvg,
	"assets/random.svg": assetsRandomSvg,
	"assets/repeat.svg": assetsRepeatSvg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{assetsAppCss, map[string]*bintree{}},
		"app.html": &bintree{assetsAppHtml, map[string]*bintree{}},
		"app.js": &bintree{assetsAppJs, map[string]*bintree{}},
		"next.svg": &bintree{assetsNextSvg, map[string]*bintree{}},
		"pause.svg": &bintree{assetsPauseSvg, map[string]*bintree{}},
		"play.svg": &bintree{assetsPlaySvg, map[string]*bintree{}},
		"prev.svg": &bintree{assetsPrevSvg, map[string]*bintree{}},
		"random.svg": &bintree{assetsRandomSvg, map[string]*bintree{}},
		"repeat.svg": &bintree{assetsRepeatSvg, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

