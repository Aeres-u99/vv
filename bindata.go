// Code generated by go-bindata.
// sources:
// assets/app.css
// assets/app.html
// assets/app.js
// assets/back.svg
// assets/main.svg
// assets/next.svg
// assets/pause.svg
// assets/play.svg
// assets/prev.svg
// assets/random.svg
// assets/repeat.svg
// assets/settings.svg
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAppCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\xef\x6e\xa3\x38\x10\xff\xdc\x3c\x85\xb5\xd5\x4a\xdb\x53\x88\x80\x84\xb4\xe5\x74\xa7\xfb\x74\x2f\x71\x3a\xad\x0c\x38\x89\xaf\xc4\x46\xc6\xb4\xe9\x9e\xf2\xee\x27\x63\x63\xfc\x8f\x84\xe4\xa4\x2d\x4a\x55\x1c\xfb\x37\xbf\x19\xcf\x8c\x67\xdc\x82\x56\x9f\xe0\xdf\x05\x00\x00\x44\x1f\xa8\x78\xc3\x3c\xe2\xe8\xc4\xa3\x16\xff\x40\x11\xac\xfe\xe9\x5a\x9e\x83\x24\x8e\xbf\xfe\xda\xcf\x39\x42\xb6\xc7\x24\x07\x71\x73\x92\x03\x05\x65\x15\x62\xc6\x40\x03\xab\x0a\x93\xbd\x1a\x39\x2f\x16\x07\x04\x2b\xc4\x96\x60\x47\x29\x47\x4c\xc9\x6a\x68\x8b\x39\xa6\x24\x07\x3b\x7c\x42\x95\x5c\xfa\x23\xc2\xa4\x42\x27\x21\x4f\xac\x94\x0b\xd5\x82\x1a\xed\xb8\x21\xe5\x03\x57\xfc\x60\x12\xe3\xb4\x31\xbe\x3e\x20\xbc\x3f\xf0\x1c\x3c\x0f\x24\x2c\xe1\x05\xe5\x9c\x1e\xa7\xd0\xce\x8b\x3f\x8e\xa8\xc2\x10\x7c\xa3\x0c\x23\xc2\xa1\xe4\xd9\x50\xc6\x19\xc4\xfc\x49\x81\x58\x88\xa6\xcc\x64\xa3\x71\xcf\x53\x60\x35\x24\x55\x5b\xc2\x06\x5d\x45\x7b\xb5\xc0\x16\x8b\x16\x95\x02\xc2\x33\x23\x2c\x5a\x5a\x77\x1c\x19\xd6\x78\xd1\x4b\x47\xc3\xf6\xc6\x98\xa5\x9f\x2d\x28\xb0\x05\xc1\x6d\x70\x3d\xa0\xff\x24\x99\xa1\x84\xf8\xfd\x58\xe3\x96\x1b\xc8\x15\x6e\x9b\x1a\x7e\xe6\x80\x50\x82\x6e\x35\x9d\x4f\x54\xb1\xca\x2e\x92\x7a\xbd\xc2\xc9\xd1\x56\x4d\x3a\x42\xec\x9b\x44\x0b\xea\xb7\x48\x02\xd1\x7a\x70\x5c\xdc\xf2\xa8\xe5\x9f\x35\x8a\xf8\x67\x83\x4c\x1d\x35\xa7\x44\x8b\x29\x69\x4d\x59\x0e\x1e\x37\xb1\x78\xbc\x98\x03\x49\x3a\x19\x67\x52\xee\xaa\xa9\x47\x8a\xa3\x7b\x30\x54\x43\x8e\xdf\x6d\xc1\x91\x74\x13\x37\x68\xd6\x9a\xcd\x8e\x12\x99\x09\x72\x90\xbc\xd8\x11\x1f\x0d\x41\xd4\xd2\x1a\x57\x20\x69\x4e\xe0\x71\x17\x8b\xc7\x24\xd3\x52\xb2\xbf\xc2\x65\x90\xba\x89\xe7\x0b\x18\xad\xa2\x67\x69\xbb\xa8\xf1\x5e\xb5\x8d\x34\x8d\x49\x66\xc5\x19\x2c\xdf\x96\xc0\x1a\xab\x11\xd9\xf3\x43\x70\xf0\x7b\x8b\x1a\xc8\x20\xa7\xcc\xf9\x1a\xd5\xb0\x69\x51\x75\x25\x10\x07\x7a\xc9\x26\x64\xd3\x74\x8a\x9f\x9f\xf4\x9c\x59\xb6\x74\x26\x4d\xb8\x5d\x0f\x42\x64\x0a\x3f\xc0\x8a\x7e\xe4\xbd\xe9\x12\xe5\xf5\x1f\x07\x2c\xa8\x39\x68\xae\xaa\x36\xec\x18\xbd\x77\xc1\xda\x60\xc9\xbd\x60\x1c\xf3\x1a\x5d\xb1\xb6\xb4\xd7\xe8\x49\xbd\x13\x24\x6e\x9a\x2f\x61\x5d\x7e\x13\x29\x0b\x44\x20\x49\xe3\xe6\xf4\x74\xc1\xdb\x6b\x4c\x50\x34\xa6\xf6\x79\xe4\x97\xc3\xdb\xb4\x3a\x90\xf1\x31\xdf\x5c\x4c\xe3\xa9\x16\xea\xaa\x37\xed\x4a\xb0\x2e\xba\xe3\xcc\xc0\xcb\x6e\x08\x3c\x47\xc0\xaa\x82\xfc\xda\x9e\xc8\x3d\x70\x74\x48\xa6\x75\x30\xb3\xe0\x4b\x2c\x9e\x40\xa1\xe1\xf2\x08\xeb\x1b\x22\x92\xda\x44\x46\xe5\xed\x8d\x9e\x19\x49\xa1\x8d\x76\xb4\x4a\xd3\x60\xa9\x14\xd4\x60\xbe\x53\x8c\x39\x5a\xea\x91\x06\x0d\xba\x99\x10\xbd\x98\x59\x03\xc8\xe3\x4e\x86\xde\x72\x78\x93\x24\xf5\xab\xca\x44\xfa\xbd\x42\x1c\xe2\xda\x38\x23\x83\xa5\x5e\xc8\x15\xe6\x1f\xf9\x3f\x83\x97\x73\xa8\x1b\x12\x15\x86\x53\x63\x79\xa5\x90\xb1\x11\xeb\x74\x38\xa3\x4d\xaa\x0a\x27\x5c\xca\x26\x6b\xaf\x98\x0d\xee\x71\xba\xb5\xa1\xed\x83\xa1\x87\xd2\x9a\x48\xc5\xb6\xc3\xab\x27\x58\x7b\x7f\x48\x87\xcd\x8b\x2d\xc8\xb2\xe7\xe5\x98\x73\x9d\xd5\x88\xb9\xb9\xb5\xd1\x28\xb8\xc6\x4a\xa6\x9b\x24\x46\x6a\x25\x25\x9c\xd1\x6b\xdc\xc6\xa3\x59\xf3\xb1\xce\x28\x81\x87\x18\xa3\x17\x5b\x16\x59\x66\xb8\x00\xb1\x5d\x8c\x98\x4e\xae\xf5\xca\x1c\xc7\x59\xc7\x63\x1e\x86\xe5\xdb\x9e\xd1\x8e\x54\xd1\xa0\xe4\x6e\x97\x6c\x5e\xd7\xf2\x6b\xa7\x5a\x1e\x79\xfe\x0e\x7e\x51\x5c\x6d\xb9\xe7\xc5\xa2\xe8\x38\xd7\x35\x32\xed\xb8\xc8\x76\x39\x88\x43\xa5\x24\x98\xd5\xe6\xf9\x1c\xd9\xbe\x80\xdf\xd2\x2c\x5b\x0e\x9f\xf8\x49\xe6\x9a\xc7\x23\x22\x9d\x88\x43\x44\x3a\x40\xe0\xbb\xf1\x27\xb0\x78\x79\x42\x3c\x1a\x7e\xd1\xdb\x23\x69\x94\x87\xcb\x8e\xa8\x6d\x6e\x5a\xe0\x41\x6d\x80\xdc\xc5\x07\xbb\x1e\x9d\x9f\x91\x04\x8f\x55\x31\xd6\x6e\xe1\x0c\x67\xcc\x15\xbe\xea\x4e\x7d\x0e\x4f\x6d\x11\xe7\x98\xec\x5b\x05\xfd\xe0\xd5\x52\x93\xa9\xd3\xcf\xe8\xd3\x3c\xb3\xaf\x33\x59\xf6\x05\x54\xd6\xd7\x4f\x46\xf9\x34\x87\x71\x66\xe4\x54\x6b\xeb\xf0\x51\xf4\x09\x57\xb6\x62\xb8\x11\x18\x1d\x27\x3f\xd0\xf7\xb1\xad\x9f\x0e\x9b\x73\x60\x29\x2c\x45\x2d\x34\xbd\xf6\xcf\xfe\x47\x7a\x99\x88\x37\xc3\x66\x8a\x66\x9a\x4c\xc7\x87\xdd\xbf\xcf\x76\x23\x47\xd0\x4d\xe7\x27\x08\x5d\x6d\x04\xc3\xe8\x6c\x0b\xfb\xfe\x4e\xeb\xee\x88\xe6\xcb\x4c\x93\xd0\x2d\xc0\xb3\xd9\x6f\x07\x6a\xed\x3e\xc3\x3d\xf9\xb4\x36\x7d\x11\x75\xab\x23\x07\x2c\x35\x00\x8a\xa2\x0e\xc0\x8e\xd3\x11\xf5\x5e\x7d\xf5\x21\x11\xd4\x78\x3c\x28\x7b\x87\xd6\x94\xa4\x87\x2d\x81\x3b\x92\xef\x68\xd9\xb5\xfe\xb8\x72\xff\x9f\x9c\x9b\x43\x6e\xea\x32\x5b\x89\x77\x83\x9e\x52\xfc\x55\xe7\x5f\x6f\x3e\x43\xef\xfe\xfc\xed\xe4\x7c\x82\x4e\xfc\x86\xf9\xf3\x03\xde\x5b\x79\x4f\xbc\x0f\x9e\x82\x49\xd3\xf1\xbf\x44\x8d\xf2\xdb\x17\x06\xc9\x1e\x7d\xf9\x5b\x01\x0d\x06\x7c\x71\x8e\xf3\xd7\xc0\x8d\xa9\x4e\x7f\xc3\x4d\x2b\x6c\x1a\x04\x19\x24\xa5\x55\xfa\x8c\xdc\x9c\x8b\x20\xd5\x9f\x31\x58\xe1\xae\x1d\x7a\x97\x99\x74\xf3\x7c\x10\xda\xd6\x58\xa0\xf0\x43\x77\x2c\x9c\x9b\xdf\x1b\xf9\x0c\x69\x70\xe3\x55\xaa\x4e\xe3\x61\x50\xfe\xea\x30\xee\x9b\x20\x2f\x0a\xee\x3c\x84\x83\xa8\xa1\x28\xb7\x8b\x03\xa0\x5b\xed\x6c\x2a\x43\xca\x5e\x8d\xa1\x06\x41\xf3\x92\xd0\xbb\x21\x99\x58\x07\x49\x45\x8f\xfe\xba\x7b\x0e\xf0\xff\xab\xe3\xf3\xad\x3a\x06\x8b\x83\x99\x0a\x66\x56\x0f\xd5\x76\x45\x7f\xe6\x5f\xa8\xa7\x55\x8b\xb2\x5d\x6d\xb7\x76\x97\xb2\x5e\xaf\xd6\x6b\xb3\x41\xca\x32\x95\xb1\x06\xd4\x9b\x6e\x5c\xa7\xb3\xa9\xf3\xbf\x00\x0d\x6f\x59\x7a\xb2\x75\xda\x5c\x2a\xe2\xab\x58\x3c\x01\x54\x2b\xab\xdd\x87\x5d\xc6\xe2\x11\xd8\xff\x05\x00\x00\xff\xff\x09\xd1\xba\x66\xd2\x19\x00\x00")

func assetsAppCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppCss,
		"assets/app.css",
	)
}

func assetsAppCss() (*asset, error) {
	bytes, err := assetsAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.css", size: 6610, mode: os.FileMode(436), modTime: time.Unix(1490863059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\xa8\x3a\xaf\x57\x19\xec\xa5\x58\xc8\xbe\xf4\xe3\x56\xb4\x40\xb7\x05\x7a\x2a\x68\x99\x13\xab\x23\x4b\x82\x44\x3b\xf1\xbf\x2f\x24\xd9\x19\x3b\x9b\x6c\xf6\x34\xd2\x23\xfd\x48\x3e\x52\x9c\xc8\x1f\x7e\xfe\xfd\xa7\x2f\xff\xfc\xf1\x0b\xeb\x69\x30\xcd\x41\xae\x7f\x10\xba\xe6\x20\x07\x24\x60\xaa\x87\x10\x91\x6a\xfe\xd7\x97\x5f\xab\x1f\xb9\x58\x71\x0b\x03\xd6\x7c\xd2\x78\xf6\x2e\x10\x67\xca\x59\x42\x4b\x35\x3f\xeb\x8e\xfa\xba\xc3\x49\x2b\xac\xf2\xe5\x03\xd3\x56\x93\x06\x53\x45\x05\x06\xeb\x97\x0f\x6c\xd0\x56\x0f\xe3\xb0\x02\x7c\xcf\x0a\xde\x1b\xac\x06\xd7\x6a\x83\xd5\x19\xdb\x0a\xbc\xaf\x14\x78\x68\x0d\x6e\x22\xcd\x18\xbf\xe7\xc3\x48\x40\x63\xac\x5a\x08\x55\xa4\x79\xc7\xd0\x1a\x50\x6f\x89\xc3\x68\xfb\xc6\x02\x9a\x9a\x67\x97\xd8\x23\x12\x67\x34\x7b\xac\x39\xe1\x85\x84\x8a\x91\xb3\x3e\xe0\x6b\xcd\x05\xc4\x88\x14\x05\x78\xff\x31\xc1\xcd\x41\x46\x15\xb4\x27\x16\x83\xda\x9b\xff\x8b\xbc\x91\xa2\x58\x9b\x83\x24\x4d\x06\x9b\x69\x92\xa2\x9c\x0e\x52\x2c\x52\xb7\xae\x9b\x17\xe1\x31\x34\x07\xc6\x18\x93\x16\x26\xa6\xbb\x9a\x0f\x68\x47\x5e\xb0\x8c\xb7\x23\x91\xb3\x4c\x19\x88\xb1\x6e\x41\xbd\x2d\x79\x16\x9c\x37\x52\x0f\xa7\x7d\x2a\xc9\xe9\x63\x9c\x4e\x9c\x81\x49\x55\xe7\xa2\xa5\x28\x1f\x3c\x62\x1e\x40\xdb\xa7\xcc\xc9\x69\xc3\x9c\xae\xcf\x99\x23\x12\x69\x7b\x8a\x4f\xd9\x57\xc7\x4d\x84\x15\xba\x8d\x22\x85\x85\xe9\x46\xb8\x38\xb6\x59\x3b\x96\x7b\x5a\xf3\x4e\x47\x6f\x60\xfe\xcc\xac\xb3\xb8\x55\xd4\x99\xf7\x4b\x06\x8c\x6e\xf6\x29\x07\x34\x0e\xba\x9b\x84\x0b\x78\xcd\x43\x0a\xa3\x9f\xf1\x28\x67\x5f\xf5\xe9\x86\xa7\x80\x77\x78\x96\xa2\xca\x94\xa4\xb9\x90\x11\x15\x69\x67\x73\x79\x46\x47\x5a\xaa\xb8\x56\x20\x45\x3a\x49\xb1\xf8\xdd\x7c\x51\xda\x53\x1c\x95\x26\x5c\x92\xe2\x79\x1a\x79\x63\x1d\xcb\x27\x29\x92\x71\xf1\x8b\x1e\xd6\xe4\x39\x04\xca\x31\xad\x63\xe5\x28\x45\x32\xdf\xf1\x44\x03\x3e\x62\x97\x5d\x93\xe6\xda\x9e\x76\xbe\xa3\x59\x3d\x3b\x24\xd0\x26\xb5\x73\xfc\x46\xe6\x45\xa2\x6f\x76\x52\xf6\x9f\x9a\xbf\x9d\x19\x07\x94\xa2\xff\x74\x8d\xb3\x69\x73\xea\x86\xb6\x7e\xa4\x45\x7f\xd5\xa3\x7a\x6b\xdd\x85\x97\x69\xe9\xdd\xf9\xdf\x29\x13\xf0\xe6\xcf\xde\x9d\x59\xb9\x30\xeb\xda\x7d\x6b\x13\xd1\x6f\x70\x59\xec\x9f\xd9\x8e\xd4\x8e\x43\x8b\x81\x2f\x7a\x5f\x56\xc6\xb4\xf1\x6a\xfe\x72\xe4\x6c\x80\x4b\x3a\x1c\x53\x31\xe8\x0b\x36\x81\x19\xb1\xa0\xbb\xf6\xdf\x4a\x92\x54\x57\x06\x33\x39\x86\xe0\xc2\x7b\xed\x37\xbd\xcc\xd6\xb5\x9d\x57\x39\xb6\x2d\xea\xb0\xec\x25\x9d\x46\xb0\xb8\x6f\xa0\xb5\x5b\x52\x2c\x31\x9b\xc3\x2e\x93\x57\xe7\xe8\xab\x4d\x95\x7a\x52\x96\xcb\x83\x97\xef\x03\x4e\xfb\xe1\x5f\x4b\x4f\x96\x7b\x2b\x20\xe1\x9b\xe7\xbf\xb8\x5d\x9f\xca\x9e\xdd\xc0\xfc\x80\xdd\xc0\x2c\x3c\x8c\x11\xef\xc6\x30\x30\x6f\x63\x18\x98\x1f\xc6\xb0\x78\xa1\xfb\x31\x92\xe5\x1e\x7b\xc2\x37\xec\x8b\xdb\xd3\xe5\xb5\x6a\x79\x1d\xc9\x77\x49\xb7\xe3\x16\xc0\x9e\x96\xe9\x3a\xe6\xd1\x7a\x39\x1e\xcb\x60\xbd\x7c\x07\xf7\x66\x85\x7c\xdd\xac\x80\x1e\x81\xee\x54\x54\x0c\x9b\x9a\x0a\xf0\x7c\xf1\x07\xb0\x9d\x1b\xee\x31\x66\xc3\x96\x31\x03\x0f\x74\x92\x62\x9d\x3e\x29\xca\x3f\xce\xb4\x22\xf3\x4f\x97\xff\x03\x00\x00\xff\xff\xf4\x3b\xc1\xf9\xd2\x08\x00\x00")

func assetsAppHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppHtml,
		"assets/app.html",
	)
}

func assetsAppHtml() (*asset, error) {
	bytes, err := assetsAppHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.html", size: 2258, mode: os.FileMode(436), modTime: time.Unix(1490861558, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x8f\xe3\x36\x92\xef\xf3\x2b\x38\x02\x6e\x2d\x5f\x7b\xdc\xee\xdc\xed\x3e\xc8\x71\x82\xdd\x64\x6e\x93\xc3\x4c\x12\x64\xe6\xe1\x00\xc3\x68\xd0\x12\x6d\x73\x2c\x4b\x0a\x49\xbb\xc7\xe8\xf8\xbf\x1f\xf8\x25\x51\xfc\x90\xd4\x9e\xee\xc1\xdd\xe1\xfa\x41\xd6\x47\xb1\xaa\x58\x55\x2c\x56\x15\xc9\x3e\x41\x02\x4e\x27\xb0\xe0\x97\x3f\xff\x04\x8f\xaf\x00\x00\xa0\x5c\x7f\x4a\xc0\xe3\x65\x22\x1e\x68\x59\x6c\xdb\x4f\xd4\x78\x64\x25\x81\x5b\xd4\xbc\x38\x94\x19\xca\x13\xf0\x98\x63\xca\xf8\x5b\xf5\xfa\x84\xd1\x43\x02\x1e\x11\x21\x25\x11\xc0\xe0\x00\x71\x21\xef\x34\xe8\x04\xa4\x65\xb1\xc1\x5b\xf5\x1d\x15\x47\x79\x57\xe5\xf0\xbc\x86\xe9\x5e\x3e\xa1\x1c\x56\x14\x65\xf2\x21\x23\x65\x95\x95\x0f\x85\x41\x29\x2d\x0b\x46\xca\x1c\x48\x96\x2e\xf3\x57\xa7\xd3\xb4\x5c\x7f\x02\x0b\x10\x6f\x8e\x45\xca\x70\x59\xc4\x63\xd9\x4d\xfd\x0c\xb6\x88\xfd\x4a\xde\xe6\x14\xc5\x87\x09\xd8\x4f\xc0\x69\xac\x04\xc1\xff\x08\x62\x47\x52\x80\x3d\xc0\x05\x38\x7c\x0f\x0e\xcb\xfd\x0a\x24\xe0\x34\x17\x00\x97\x57\x06\xc8\x63\x8d\x27\x69\x50\x5e\xe6\xaf\x2e\xe3\x78\x2c\xf8\xe0\xc2\xf3\x31\xc2\x95\xc0\x20\xff\x54\x7f\xe1\xa0\x13\xb0\x47\x67\x3a\x01\x25\xdb\x21\x62\xb2\xc4\xe1\xf1\xbc\x7e\xdc\x94\x04\xc4\x98\xf3\xc7\xe1\x4d\x40\x0d\xbc\x47\x67\xb0\x10\x5f\x97\x78\x35\x6f\x7d\xc6\x1b\x10\xf3\xcf\xb8\x10\xba\xb5\x5b\x1b\xdd\xe3\x9f\x97\x7b\x74\xb6\x10\x5c\x5e\xb9\x77\xaa\x85\x60\xdc\x14\x14\xe7\xa5\x96\x8c\xb7\xbb\x6e\x6f\xbb\x19\x0c\xf2\x76\x01\x88\xd3\xd0\xad\x17\x0b\x10\xfd\x3d\x5f\x1f\x0f\x1f\x4a\xc2\x22\x3f\x12\x06\xb7\x8a\x91\xa5\x84\x8d\x56\x9a\x9d\x4e\xb4\x84\x61\xca\x86\xe2\x15\xc0\x03\x11\x73\x1e\x54\x83\x17\xc3\xfc\x14\x79\x28\x12\x13\xf0\x74\x62\xcf\x23\x76\x5f\x73\xc3\xc8\x6a\x3b\x6b\x59\x9b\xd7\xce\x3c\x23\xbc\xf1\x02\x86\x35\x8e\x96\x45\x09\x46\xe0\x46\x0c\xa1\x1b\x30\x5a\x8d\xc6\xb6\x41\x53\x46\xfc\x23\xd7\x1e\xb2\xb4\x24\x4c\x8e\xc4\xd1\x68\x7e\xdd\x60\xd6\x28\x6e\x16\x3e\x76\xf9\xe8\x9e\x80\x11\x18\x8d\xc3\x63\x52\x61\xf0\xb9\xaf\x1a\xd4\xe7\xc7\x26\xe6\x57\xf1\xbe\x79\x43\x19\x49\xf8\x45\xbe\xe1\x1e\x2f\x1e\x37\x1e\x8f\x86\x5c\x1e\x67\xc5\x96\x1c\x75\x45\x67\x0c\x71\x3a\x3d\xc0\x2a\x6e\x35\xb0\x25\xa4\xa0\x97\x52\x28\x8a\x85\x29\x65\xc4\x54\xcc\xaa\x91\xcf\x78\xca\xd9\xa8\x71\x82\x18\x4e\xc0\xda\x46\xca\xcd\x19\x2e\xef\x56\xe0\x5b\xb0\x5e\xde\xad\xc6\xe0\x51\xd3\x79\x73\x37\xaf\x8d\x53\xbf\xe3\xaf\x4c\x02\x6d\x9e\x8d\xc6\x74\x39\x5b\xcd\xc1\xc5\xb1\xa8\x63\x81\xff\xf0\x0b\x26\x28\x97\x0d\xce\x19\x22\x46\x37\x64\x6f\x31\x98\x00\x8a\xf2\x8d\xaf\x43\x98\x8f\xce\x59\x87\xc3\x67\xe4\x88\x2c\x5f\xdf\x8c\x6e\x2d\x59\xff\xa8\x01\xa3\x31\x78\xbd\x00\x1e\x20\x94\x6f\x96\x18\xbc\x01\x77\x2b\x03\xf6\x1a\x26\x82\x2d\x36\x30\xa7\x76\x13\x43\x1d\xb6\xb0\xa5\xe4\x3c\xe2\x96\x1f\xc2\xa6\x68\x89\xdc\x6b\x8d\x82\x40\x9b\x17\x31\xc0\x37\x7c\x80\x7b\x08\x98\xfa\x31\x84\xa7\x64\xbb\x11\x42\x55\xcd\x96\x9b\x95\xaf\x65\xb7\x20\xda\xc2\x70\x9f\xbc\x42\x6f\xcb\xcc\xf1\x16\x7c\xfc\x24\xe2\xda\x78\x04\x6e\xc1\x89\xb8\x36\xef\x24\xdf\x89\xfa\xf5\xf8\x0a\x19\x4b\x06\x03\x24\x82\xf8\xb7\xa5\x9a\xe2\xf9\xab\xf4\x48\x08\x2a\x98\xff\xed\x7d\x0e\x29\xbb\x3f\x94\x19\xde\x60\x94\x81\x05\x88\x22\x03\x46\x45\x89\x56\x4b\xf9\xb6\xb3\x65\x8e\xd7\x04\x12\xee\xc4\x1b\x09\xb4\x66\xc7\x04\x2c\x57\x4d\xa7\x41\xf4\x4f\x54\x10\x64\xbc\xbd\xd8\xa8\xfa\x18\xdd\x60\x1e\x19\x3e\x46\xa7\x32\x3f\x1e\x38\xa6\xc7\x88\xee\xca\x87\x28\x11\x6a\x9a\x80\xe8\x00\x3f\x47\x09\xb8\x9b\xcd\x2e\x97\x57\x8d\x73\x85\xa7\x56\x84\x65\xda\x0a\x23\x67\xcb\x72\xf2\x32\x85\xf9\x07\xa9\x80\xa9\x92\xf4\x7f\x7e\xf8\xf5\x17\xee\x38\x71\xb1\xc5\x9b\x73\xcc\xdf\x8e\xe7\xe1\x56\x35\xa7\x56\x3b\xf9\xde\x68\x79\x01\x29\x64\xe9\x0e\xc4\xc8\xb6\xdf\xdb\x5b\x50\x11\x7c\x82\x0c\x81\x35\x29\x1f\x28\x2e\xb6\xd6\x44\x66\x08\xaf\x84\xd9\xf0\xfe\xf1\xf1\xe4\xf4\xd1\x37\x7c\xcc\xbe\x57\x90\x50\xe4\x69\x16\xf2\x2d\x5e\x42\xaa\xfb\x1e\x52\x6d\x81\x79\x88\x39\x92\x6b\x93\xfb\x72\x39\x72\x19\xc6\x0a\xbf\x33\xac\x79\x57\x13\x71\x6d\xac\x59\x0d\xad\x44\xdf\x38\x5f\xda\xb6\x9c\xf8\x5f\x1b\xad\xe4\x80\x4b\xf4\x8d\xf3\xc5\xc1\xe7\x7b\xdd\xb4\x52\x23\x2a\xd1\x37\xce\x17\x1b\x9f\xf7\x75\x8b\x0b\x91\x90\xca\x5f\x23\xe0\x81\x27\x94\x88\xab\x41\xa1\x84\x1c\x61\x09\x33\xcb\xb5\x71\xdf\x26\xd2\xe2\x29\xcf\x74\xdb\xee\x0d\x34\xfe\xed\xe3\xef\x6f\xdf\x76\x79\x95\xb6\x8a\x23\xee\x6f\xa3\xc4\x31\x2a\x27\x52\xff\x11\x32\x24\x22\x76\x11\x59\xf3\x17\x98\xa6\xbf\x1c\x0f\x6b\x44\xf8\xd3\x47\x02\xd3\xbd\xf1\x88\x59\x2e\xc0\x37\x38\x47\x91\xe9\xc7\x38\x4d\x6e\x0c\x3e\x9a\x0e\xd1\x2a\x87\xb8\xb0\x9b\x9b\xfc\x71\x20\xa8\x62\x7d\x1f\x50\xcd\x07\x9f\xf8\xa2\x95\x03\x62\xb4\xba\x34\xb7\xb5\xaf\x1d\x2a\x2b\x09\xff\xe2\xd2\xa9\xc9\x3c\xb7\x5c\x5c\x98\x95\x57\x2e\xc2\x08\x86\x8b\xe5\xeb\xd8\x8c\xa6\xf2\x55\x85\x62\x47\xda\x55\xc6\xbd\xa4\x31\x8f\x64\x90\x41\x3b\x71\xab\xf3\x25\xa0\xe3\x37\x55\x90\xe0\x63\xd6\x09\xf9\xea\x48\x66\xaa\xbc\x8b\x28\x4c\x80\x3a\x1a\xa6\x32\xe3\xe0\x84\x26\x02\x83\xf8\xbe\x94\xea\x58\x99\x13\xa5\xf6\x23\x9a\x0f\x52\x96\xac\x80\x87\xe0\xbc\x2e\x60\x78\x00\xc1\x01\xa3\x06\x91\x8e\x26\x8d\x49\x6c\x9a\xa3\x62\xcb\x76\x3c\x9e\x74\x52\x00\xa2\x78\x35\xc0\x97\xb3\xd5\xf2\x6e\x65\xb3\x06\x9a\x79\x43\x97\x79\xe6\xad\xec\x8e\x27\x5b\x7d\xcc\xea\x4e\xc5\xe3\x36\xc3\x44\x14\x0f\x44\x4f\x42\x39\x5e\x17\x43\x42\xb0\xa4\x16\xab\x93\x62\x55\x21\xbe\x04\xed\x9a\x27\x2e\x20\x3f\x13\xb6\x40\xab\xb2\x8a\xad\xb9\xda\x00\xe1\x73\x45\xdc\xa5\xdb\xac\x7c\x28\x4c\x96\x4e\x30\x3f\xa2\xa1\xf2\x6a\x6a\x7c\x3e\xd5\x93\x70\x27\x64\xa3\x5a\x56\x62\xb0\xae\x96\x01\x5b\xe1\x49\x1b\xcf\x58\x3d\x42\x77\x84\x71\xa4\xbb\x78\x29\xf2\x3b\xd1\x11\xd3\xac\x03\x52\x31\x64\x01\xd7\xd4\xce\xc7\x9c\xf2\xe7\x44\x08\x42\xe5\x90\x14\xe5\x28\x65\x28\x9b\x7f\xa9\x16\x79\x42\xe0\x9a\xbe\x55\xf1\xe4\x88\xfa\x87\x08\xff\xd3\x7c\xd5\x32\x2e\x4b\x56\x8b\xd9\x93\x16\x8a\xba\x8f\x6e\x14\xca\x0b\x45\xde\xae\x81\x0c\xdd\x84\xb2\xc1\x35\x41\x70\xdf\x97\x06\x36\xc6\xa0\x31\x2f\x71\x5b\xd9\x43\x54\xed\x64\xac\x7b\x74\x1e\xaf\x3a\x03\xe6\xa7\x8c\x11\x15\x3f\x0d\x19\xb6\x7d\xbe\x83\xa3\xba\xe7\x00\x2d\x82\xbe\xca\x82\xd9\x20\xdd\xe1\x3c\xeb\x65\x51\x82\x75\xfa\x3d\x69\x41\x0d\xbf\xed\x39\xab\xc9\x31\x3d\x93\x89\xb0\xa1\x36\xbc\xaa\x08\xf0\xe8\xf1\x32\x09\x8e\x6f\xd3\xf6\x7a\x86\x78\x1b\x09\x65\xe7\x1c\x3d\x1d\xcd\x9d\x85\x86\x9d\x2b\x8e\x25\xca\x30\x19\x36\x37\x2d\x7c\x24\xd5\x47\x5b\xad\x1a\xb9\x88\x41\xbc\x1e\x8a\x2b\x07\xa1\x8d\x35\x91\xf3\x57\x7c\xd0\x59\x2c\xf8\xea\x65\x02\x54\x95\xcc\x44\x22\x82\x8b\x23\x9a\x5b\xe6\xac\x8b\x33\xb6\x73\xe0\x8d\xb9\x64\x57\x1e\xc7\x21\xbf\xf9\xa7\xd7\xb6\x29\x98\x75\x27\x9d\xe2\xd4\x65\xa4\x79\x57\xa3\x63\x81\xff\x68\x9a\xf0\x61\x39\xb7\x67\x4c\x39\x86\x6b\x18\xa1\xf5\x89\x10\xec\xca\xf1\xd0\xf5\xf0\xe9\xb4\x72\x64\x96\x66\x80\x1b\xc4\x44\x91\xa5\x8d\xfa\x5b\x20\xb6\x22\x88\x49\x7f\xf3\x28\x07\x77\x52\x63\xbb\x38\x83\xd2\xec\x99\x84\x9e\xf0\xe7\x3a\xe0\x9c\x48\x4b\x5c\x75\xd6\xb6\x64\x7c\x98\xa8\xdf\xc6\x9e\x35\xd9\x86\x01\x23\x39\x54\x81\x4f\x52\xdf\x19\x75\xb1\x8a\xe3\x6a\x9e\xe5\xe2\x25\xbf\x36\xef\xe0\x9a\x26\xfc\x62\x26\xaf\x94\x25\xe2\xea\x56\xcd\x9a\x4a\x96\x3f\xad\xe4\xad\x50\x21\x0a\x9c\x8f\x91\x02\x96\xd5\x28\x10\xc9\xb4\x56\x3f\x29\xcd\xeb\xc7\x2a\x87\xe7\xbc\x2e\x68\x81\x48\xa5\xf2\xfa\x91\x32\x48\xea\x87\xaa\xcc\x25\xd2\x26\xc0\x82\x59\xf6\xf6\x84\x0a\xf6\xae\xa1\x5f\xf3\x87\x4e\x13\xf1\x60\xaa\x57\xf3\xb9\x44\xa7\x95\xd4\xb1\x80\x70\x2c\x8f\x40\x4c\x91\xc0\xdc\xc6\x38\x68\x7d\xd4\x24\x62\xdb\x96\xf9\x6d\x89\x57\x5e\x2f\x5f\x73\xb1\x45\xec\x9e\xa0\x3f\x8e\xa8\x3d\x21\x55\x90\xed\x26\x00\x6f\xea\x4a\x02\x48\x61\x9e\xaf\x61\xba\xb7\xd9\xfb\xbc\xe3\x12\x29\xd0\x03\xf8\xaf\xf7\xef\x7e\x62\xac\xfa\x5d\x62\x33\xc9\x7e\xde\x91\x69\x59\x10\x04\xb3\x33\x65\x90\xa1\x74\x07\x8b\x6d\x30\xf8\x07\xca\x4d\xf1\x56\xa2\xcd\x07\x26\x52\x9b\x05\xf8\xf7\x50\x24\xc1\x41\x39\xe6\x23\xe5\x60\xdf\xcc\x66\xe0\x2f\x7f\xf1\x72\x6c\xfe\xa5\x65\x41\xcb\x1c\x4d\xf3\x72\x2b\xfa\x3b\x76\x43\x04\x1b\x4c\xb2\x44\xab\xb2\xa0\xe8\x23\xfa\xcc\x42\x4d\x14\xe5\xd8\x28\x88\x39\x4d\x27\x42\x2c\x5b\xc4\x7e\x57\x6f\x7f\x42\x30\x43\x24\x8e\xde\x41\xca\xde\xbc\x57\x82\x8f\xc6\x1e\x1a\xa1\xc2\xf7\xc5\x12\x79\x85\x8a\x38\xfa\xe7\xdb\x8f\xd1\x04\x48\x85\x32\x72\x44\x56\x76\xd2\xe8\x58\xc4\x96\x4e\x98\x21\x44\xcb\x99\x14\x5a\xd5\x3c\xfe\xbc\xa9\x39\x7c\xf3\x01\x17\x29\xcf\x5a\x1b\x4c\x5e\x17\x26\x11\x15\x75\xd4\x61\x94\x78\xab\x92\x76\x58\x61\xb9\xfe\xf4\x7f\xd2\xfc\x86\x18\xc9\x97\x2a\xff\xb7\x5f\x3f\x04\xb5\xef\xd7\xec\x0f\x65\xc1\x50\xc1\xde\x7c\x3c\x57\xa2\x14\x01\xab\x2a\xc7\x29\xe4\x62\xba\xfd\x44\xcb\x22\x72\x30\x14\x59\x6c\x55\xca\xcb\xf5\xa7\xb1\xab\x65\x39\xf5\xdc\xab\xbd\x23\x5e\xd9\x1b\xde\x28\x8e\x60\x85\x6f\xc5\x9c\x7f\xab\x3d\xf6\xc4\x8c\x38\xfc\x15\xd9\x06\xaf\x98\x22\x6b\x8b\xf4\x28\x98\x20\xb6\x8c\xc4\x46\x1e\x1a\xad\xb8\xe2\x8a\x63\x9e\xfb\xb4\xe5\x12\xe5\x21\x2f\x6f\x9d\x41\x06\xed\xfc\xc7\xdf\xc2\x59\x1b\xd1\xb7\x6e\x63\x15\x48\x36\x95\xd6\xe9\x90\xfc\xcf\x20\x6d\xb4\x84\x6b\x1a\x1b\x9c\xf6\x9a\x13\xff\x6b\x26\xa6\xb8\x9e\x2b\xc7\x21\xa3\x6b\xe6\x35\x47\xcf\x6a\x40\x0c\xd4\xb4\x9e\xd1\xdb\x3a\xf6\x56\xc9\x5f\x5a\xc7\x75\x20\x32\x58\xc7\x81\xe5\xb6\xb0\x8e\x5b\x32\x56\x3d\x0f\xaf\x8f\x84\x85\xdc\x04\xc8\xc3\xa4\xac\x43\xa3\x89\x27\x21\xfb\x3a\x52\x36\x8c\x53\xf6\xa1\xc7\x3e\xfb\xf8\x1c\x2c\x66\xdd\xf5\x27\x89\xb9\x22\xe8\xf4\x54\x13\xfe\x1e\x0a\xd8\x05\x6f\xcb\x3d\x68\xe4\x99\xf0\x72\x78\xbe\xaf\xe0\x91\x76\x56\x40\xa9\x9c\x78\x80\xdc\xf8\x67\xec\x3d\x70\x4d\x4f\xc6\xb1\xb2\x0c\x4d\x59\x59\x55\x3c\x72\x68\xa7\x2b\x92\x2b\xb0\xd0\x68\x17\x32\x32\x8e\xc0\xf7\x20\x12\xac\x44\x20\x51\xaf\xe6\x83\xfb\x18\xdd\xc8\x1b\x7f\x37\x0b\xf4\x39\x98\x57\xf5\x61\xe6\x6d\x3b\xa4\x67\xa2\x3d\x12\xfc\x62\x61\x41\xd7\xac\xda\xcc\x50\xd1\x57\x9c\x5c\x5b\xd6\xfb\x18\x49\x71\x45\x89\x5a\x05\xb1\xd6\x0c\x22\x9e\xb5\x45\x89\x35\xf0\x74\x3a\x67\x97\x6b\x40\x74\x24\x38\x4a\xc0\x91\xe0\xc0\x18\xf1\x4c\xeb\x72\x35\xdf\x14\x5b\x71\x3c\x98\xfa\x30\xa3\xbb\x38\xba\x6d\x3b\x7b\x63\x37\x40\x71\x3c\x5c\xc6\x36\x76\x5c\xe0\xce\xd4\x9c\x27\x6c\x38\x1c\x50\x00\xe9\x41\x14\xbd\xa9\x11\x82\x78\x4a\xdc\x36\x94\x98\xc0\xfa\xe1\x94\x63\xb1\x01\x4d\xdf\x23\xd2\xca\xb1\x5d\x52\x65\x1f\xf1\x01\x95\x47\x16\xab\x4e\x4c\xc0\xdd\x6c\x36\xf3\xe7\xff\x06\x32\x99\xb0\x1a\x60\xaa\x79\xec\xf1\x5f\x02\xb6\xab\xd2\x98\x95\xe9\xf1\x80\x0a\x66\x86\xba\xaf\x17\x0b\x30\xca\x4b\x98\xe1\x62\x3b\x72\xfc\x7d\x81\xfb\x4b\x8d\x35\x56\x3b\x79\x8e\x47\x3f\xfe\xfa\x5e\x8d\x82\x77\x25\xcc\x50\x36\x9a\x08\x94\xc1\x24\xd5\xa9\x64\xd8\x28\x13\xe7\xcd\xc4\x23\xb6\xc4\xb8\x9f\x58\x55\x91\x7b\xb9\x33\xdc\x78\x70\x21\x84\x2d\x24\xed\x47\x07\xaa\x5e\xb5\x6f\x3f\x37\x70\x7c\x4a\x48\xc4\xd5\x78\x57\xcf\x05\x89\x71\xdf\x7c\xe7\x8e\x30\x11\xd7\x76\x1b\x09\xdd\xbc\x93\xe3\x28\x51\xbf\xe6\x9e\x46\x28\xb6\x35\xf1\x1f\xcf\x82\xfe\x09\xa3\x87\xa9\x98\xbb\x83\x95\x97\x1d\xce\x3a\xe7\x29\xfe\xb1\xd6\xf8\x16\xb1\xb7\x39\xe2\xb7\xff\x38\xff\x9c\xc5\x32\x2c\x30\xad\x15\x4d\x45\x55\x99\xa0\x62\x79\xb7\x9a\x32\xf4\x99\x29\x7b\xb0\xea\x68\x68\x9a\x61\xaa\x5c\x7d\x54\x94\x85\xae\x86\x1a\xfb\x55\x77\xe5\x43\x6b\xc5\x13\xd1\x94\xe0\x8a\xdf\xbf\x1c\x8b\xe1\x6f\x37\xc0\x60\x20\xd0\x8f\x75\x5e\xa6\x7b\xa3\x93\x86\x13\xf8\xeb\x6c\x36\x9b\x08\x59\x77\xef\x52\xe3\x10\x89\xb8\x1a\x3a\xde\x95\x0f\x89\xb8\xea\xad\x59\x96\x82\x0f\x10\x17\xa1\xfd\x68\x7c\xa4\xdf\x4b\xab\xb9\xaf\xb7\xf2\x04\x95\x9d\x76\x49\x52\x9f\x70\x50\xe8\xa2\x71\x23\x2c\x73\x05\x26\x9d\x1e\xe0\xe7\x76\xfd\x58\x12\x5e\xea\xd9\x60\xb5\x14\x9b\xc1\x56\xc1\xf2\xba\x0b\x2f\xb6\x92\x39\xc5\xb0\x74\x2a\xca\xbf\x5d\x3a\xf0\x7a\x30\x4f\x3b\xc3\x06\x81\xb3\x62\xd2\xcc\x0a\x8e\xcb\x8b\x9a\xd9\xce\x2b\xd5\xeb\xa4\x39\x15\xcb\x91\x0b\x37\x14\x6c\x64\x22\x19\x1c\x0f\xe3\x70\x83\xb7\xd1\xc4\x63\x0b\xe3\xf9\xa0\xb9\xf8\xca\x4e\x78\x58\x11\x51\x58\x48\x56\x56\x4f\x24\xce\x58\x14\x4f\x7e\x2e\x58\xcc\x76\x98\x4a\xc1\x98\x95\x13\xb3\xa4\xee\x76\xd0\x5a\xb6\x75\x5d\x20\xf8\x1f\x3f\x55\x8e\x63\x43\x4b\xb6\x57\x7c\x92\x2b\xe4\x7e\xa2\xed\x09\x3b\x87\x8f\x51\xce\xfe\xa2\x49\x62\x00\x59\xef\x0c\xb0\xc3\x59\x86\x8a\x10\x59\xe5\x3a\x7b\xa8\xda\xa4\x42\xb4\xdc\x1d\x36\x5f\xd4\x45\x67\x3b\x8e\xa0\x91\x8b\x19\xa6\x69\x4b\xff\x71\xfe\x21\x87\x94\xfe\x02\x0f\x28\x8e\x32\xc4\x20\xce\xa3\x71\xcb\x99\xca\x44\xeb\x41\x34\xad\xa9\xa7\x04\x41\x86\x7e\x54\x8f\xff\x41\xe0\x96\xff\xda\x3b\x2d\x72\x6c\x8a\x3c\x44\x95\x89\x5d\x49\x9c\xa8\x35\x15\xba\x55\x2e\xbd\x85\x69\x35\x04\x2f\x54\x07\x82\x86\x21\xd6\x07\x75\x1a\xcc\xc7\x7c\x8a\x8b\x02\x91\x9f\x3e\xbe\x7f\xe7\x5b\x83\x53\x5b\x9b\x5c\x64\xbe\x12\x86\x3e\xe3\x23\xf9\x07\x7f\xfe\x09\xda\xa7\xa2\xbc\xf5\xb6\x7a\xed\x34\x90\x2d\x01\xb1\x1a\xe3\xea\x45\x89\x23\x8e\x72\x6c\x67\x05\x39\xb6\x64\x21\x8f\xeb\xf0\xfc\x0e\xdc\xf8\x04\xe3\x9e\x63\x13\xc6\x30\x85\x55\x85\x8a\xec\x07\xb1\xce\x9f\x63\x6f\x52\x61\x41\x89\x76\xd6\x3a\x55\xe7\xa4\x51\x57\x65\xe5\xd0\x08\xed\xbf\xb5\x83\x13\x10\x08\x62\xe4\x60\x4e\xd4\xaf\x1d\x5c\xb7\x97\x2e\xcd\x85\x43\x11\xe0\xb8\x3b\x52\x1f\x9f\xc7\x23\x8a\x95\xc3\xaf\xef\x11\x07\x90\x7d\x01\x8f\x28\xa9\x3e\x9f\x47\xcc\xa9\x1c\xcd\x46\xed\x81\x5f\xec\xba\x83\x3e\x5c\x95\xd3\xd0\x5e\x8b\x9c\x2e\xff\xcd\xfa\x32\xd8\xe7\xb5\x9b\xb5\xdb\x04\x04\x60\x84\x28\xf6\x86\x96\x41\xfe\x27\xb8\x6e\x2b\x7a\xea\x2e\xd8\x82\x05\x38\xc0\x3d\x4f\x18\x29\xbb\xc7\x0c\x1d\xe4\xd1\x1d\x71\x0a\x2e\xa7\x9c\x0b\xfe\xf3\x8d\x5d\x1f\xcd\xb1\x27\x6a\x48\x73\x9c\xee\x47\x1d\xf1\x13\x50\x2e\xef\xb5\x1e\x3b\xfa\xf0\xf1\x54\x1a\x4f\xec\x3d\xc5\x04\xa4\x3b\x70\x1a\x20\xbb\xee\xa1\xff\xa4\xad\x0d\x59\x70\x10\x55\x24\x1e\xb4\x81\x05\x10\x11\xdc\x16\xb1\xbf\x33\x46\xf0\xfa\xc8\x50\x1c\xed\xd1\x39\xb2\x0b\x55\x5a\x05\x04\xfb\xdb\x1c\x89\xe3\x59\x75\xb7\xa5\x45\xa9\xed\x3b\xc3\x56\x51\x78\x5f\xd5\x3e\x46\x7f\x5f\x4d\x2f\xa4\xcb\xda\xbe\xb5\x96\xd0\x81\x2f\xd0\xf6\xb5\x7c\xd8\x89\xaa\x66\xef\xea\xdf\x44\x9e\x8d\x1a\x5f\x39\x03\x3c\x61\x1c\xf4\x4e\x15\x90\x58\x36\x1c\x38\x16\x2d\x9c\x8b\xe3\x28\x86\xcf\x92\x32\x13\x91\x1b\x31\xcc\x31\x97\xe3\x29\x6d\xd9\x40\xca\x43\x8d\x48\x13\xec\x00\xe4\x06\x16\xda\xf3\xd7\xd5\x8e\x1b\xd9\x44\x9e\xd8\x56\x5b\xc6\xad\xb5\x75\xb5\xdf\x6c\xa1\x36\x74\xbb\xf9\x81\xea\xc5\xb7\xb4\x82\x05\x10\xfc\x2e\x18\x81\xe9\xfe\xbb\xe8\xc6\x65\xa7\xb5\x5d\x7d\x7c\x13\x7d\x7b\xcb\x9b\x7d\x17\xdd\x78\xcd\xa9\x8d\x94\x47\x35\x01\xa4\x32\xba\x6b\xd0\xcd\x9d\xd8\xc8\xd3\xaa\x0e\x8a\xda\x67\x23\xeb\xcf\xe6\x81\x6f\xaf\xff\x11\x5d\xbf\xb1\xfa\x2e\x23\x42\x3f\x9f\x1a\x5b\x88\x51\xf7\xf4\x92\x07\x89\xd0\x92\xd8\x53\x69\x7e\x74\xa3\xaa\x1a\x74\x38\xef\xea\xdf\x39\xf8\x99\x7f\x27\xb6\xfa\xf5\x2b\xcd\xd5\x9c\xdc\x24\x78\x4f\x51\x05\x09\x64\x25\xf9\xee\x76\x50\xf7\xbd\x2c\x4a\x5c\x43\x39\x74\xf2\xd6\xb6\x45\xcb\x73\x0c\x7e\x93\xb6\x09\x73\x7f\xe8\x27\x2b\x8e\x4e\x84\x8d\xcf\x6f\x25\x9c\x72\xc0\x48\x24\x53\x57\xe0\xeb\x34\x3d\xd3\x9a\x3b\x04\xe4\x1f\xdd\x7e\xbf\xe2\xf3\xc6\x39\x6e\x05\x14\xe2\x7e\x6e\xc7\x6e\x3a\x02\x19\x12\xa1\x37\xab\xbd\xad\x08\x9d\x7b\xd0\x92\x60\x54\x30\xa8\x96\x04\x83\x35\x8f\x3a\x46\x90\xb5\x92\x60\x84\x60\x4f\xf6\x97\x16\x96\x03\x64\xe9\xee\x3d\xca\x30\x8c\xa3\xd8\xa0\x9c\x80\xaa\x24\x8c\x40\xcc\xc6\xd1\x78\x2a\xa0\x90\x13\x1d\xd9\x31\x86\x57\xd8\x3c\xc4\xf7\x6c\x74\x13\xd7\x07\x5c\x64\xe5\xc3\x74\x18\x13\x30\xcb\x6a\xf9\x19\x40\x0a\x75\x2f\xaa\x1c\x16\x19\x4d\x61\x85\xfa\x71\xfd\xef\xc9\xad\xea\xa2\xb0\x37\xbb\xea\x5b\xa1\xe3\xcc\xdd\xd7\x8b\x84\xc1\x88\xc3\x00\x33\x67\x7b\xe3\xf5\x34\xdd\xa1\x74\x2f\x56\xfc\x9d\x42\xb0\xaa\x04\x4e\x39\xb8\xbf\xf1\x95\x95\xc6\x30\x19\x1d\x78\x2a\xae\x9c\x55\xc2\xd0\x61\x00\x4b\xf7\xd6\x4e\x90\x0d\xde\x46\x81\xd2\xa5\x8c\xb0\x3e\x0f\x90\x65\x03\x65\xe2\x6a\xde\x4e\x75\xb4\xfd\x41\xac\x2a\xbb\x75\x75\xdd\xcf\x03\xfc\xec\x47\xf0\xac\xd2\x94\x8b\x01\xbe\x22\xee\xcb\x0a\xf5\xff\x2b\xbe\x99\x4f\x3c\x5f\xa9\xc2\x31\x88\xf0\x0b\xd4\x38\x34\xdd\x21\x55\x8e\x67\xf5\xb7\x8e\x5f\x3d\xa0\xe2\x78\x8d\x57\xad\xbb\xb6\x2e\xb3\xf3\x35\x15\x00\x93\x01\x91\xc3\xdf\xd3\xe3\x3a\xee\x72\x3b\x92\xd3\xb0\xc3\x41\xc5\xb1\xe5\x6a\x38\xe2\x50\xdd\x77\x0d\xd3\xbd\xac\xfa\x0e\x60\xdd\x7b\x80\xe5\x75\x2b\xdf\xee\xaa\x5a\xd8\x1b\xce\x6c\x9f\x11\xcc\xc8\xdd\x6d\x94\x9e\x3a\x72\x5f\x06\xf2\xda\x8d\x17\x46\xa1\x78\x61\x14\x0c\x80\x5a\x1a\x83\xd8\x5f\x75\xe9\xea\x48\xd3\xd2\x0e\x93\x5c\xb6\xdd\x78\xcf\xe7\x67\xfb\x8a\x1d\x2d\x10\x1f\xd1\x96\x05\xfa\x71\x70\x6f\x50\x56\xbf\x91\xb2\x82\x5b\x28\xcd\xd8\x6f\xa0\x9d\xc6\x26\x97\x5d\xbe\xc8\xd8\x9e\x5d\x89\xda\x6a\x9f\xae\xc4\xa0\x3c\xaf\x56\x62\xd0\x2c\xbe\x9a\x86\x28\x62\x0c\x17\x5b\xfa\x65\x5a\xb2\x5d\x5a\x86\x0a\xe9\xd4\x3a\x47\x13\x07\x16\x41\xa2\xe5\xff\x06\x29\x23\xe8\x3d\x5d\x85\x0c\x96\x94\x98\xce\x8f\xeb\x3e\x7f\xab\x40\x5a\x81\xb2\x7c\x15\x14\x33\x41\x3c\x68\x19\x2c\x64\xa7\x46\x5d\xca\x6d\x8a\x53\x89\x27\xc4\x7f\x1f\x17\x7a\xf2\xbd\x92\x8b\x5e\x37\xd8\x3b\xc4\xac\xa1\xe1\xe4\x8d\x6e\x51\x53\xdb\xc7\xd5\x81\x8e\x47\x59\x4f\x0b\xb1\xbe\x02\x75\x33\xf2\x99\x5b\x81\x56\x17\xf9\xbe\x60\xab\xa6\xde\x13\x6d\x35\x34\xfb\x17\x95\xc4\x7f\x3c\xe8\x09\x45\x82\x06\x78\xac\x3c\xcb\xe7\x39\x5c\xa3\x5c\xa6\x95\x6e\x58\xf1\x3d\x90\xd5\x70\x90\x00\xde\xba\x5d\xe1\x3d\x56\xad\xe5\xda\xd7\x0b\x89\xcb\xb6\x5b\x0b\x4c\x41\xf9\xcb\x15\x9d\x75\x01\xb9\xf7\xb3\x95\x15\x78\x63\x54\xae\xb3\xa4\xbe\x6b\xc7\xaa\xf2\x9b\xbe\xb3\x63\xd6\xfa\xab\xba\x7f\x62\xad\x40\x6f\xf7\xb9\xb6\x5a\x60\xb4\xef\xdd\x52\xd4\xda\x03\xab\xde\x05\x15\x2f\x76\xe3\x5f\x3d\xc5\x98\x8b\x33\x04\x9d\xae\x9e\x09\xfb\xd9\xcc\xe1\xf9\x79\xd8\xac\xb7\x92\xbe\x1c\xb3\x62\x8f\xfe\x73\x30\xcb\x11\x5d\xc5\xa6\x7b\x24\xa6\xab\x9a\xe9\xdb\x2c\x27\x8f\x4d\xac\x9a\xf3\x10\x36\x9b\x03\xcc\x70\x80\x36\xcd\x95\x34\x4a\x52\xee\x73\x6f\x21\xa5\x88\xd1\x5b\xa1\xa4\x29\x3d\x6d\xfb\x2a\xca\x2f\xcf\x49\x0e\xcf\x36\x23\xad\xd1\xd9\x1c\x7f\xeb\xdf\xef\x67\xef\x60\x08\x29\x80\xa0\x0a\x41\xe6\xd9\xb9\x29\x69\x75\x04\x34\xa2\x9d\xdb\x27\x31\xd1\x94\x15\x4c\x31\x3b\x2f\xee\xa6\xb3\x1e\xa9\x3e\x0f\x9d\xd9\xf4\xaf\xa1\xea\xb7\xb7\xd3\xb0\xc8\xca\xc3\x15\x9d\x96\xed\x5e\xbe\xd3\x83\xe8\x78\x3a\x7d\xdd\x1c\x36\x70\xfb\x6c\x77\x2d\xdc\x3b\x3f\x59\xd3\x93\x5a\xa5\x0b\x6e\x75\xef\x8f\x3e\x32\xc8\xa0\x53\x81\xe6\xfc\xb5\x2d\x7d\x24\xfc\xca\x08\xe0\x02\xd8\xff\x88\x4b\x63\x6a\x78\xa9\x4b\x9f\x1c\x74\x29\x16\x8b\xef\xd5\xd7\x68\x05\xfe\xd5\x3e\x16\xe2\x8e\x46\x05\xec\x82\xd8\x47\xe5\x2c\x4a\xad\xcf\x5d\xa4\x94\x54\x0a\xf4\x00\x7e\xf4\x64\x82\xa2\x58\x2a\x79\xef\x73\xa7\x86\xf5\x81\x9b\x85\x40\xcc\xad\xf0\x23\x16\xc7\x5b\xdf\xb4\x39\xee\x48\xa9\x9a\xce\xd7\x7d\xd2\xaf\x6e\x43\xbd\x38\x88\x4d\xf0\x1e\xf8\xbf\xcd\xc6\x0e\x30\x45\xdc\x37\x6a\x98\x7f\x01\x7f\x9b\x79\xa4\x2b\xe3\x46\x8e\xf7\x06\x8c\x92\x11\xb8\x01\x71\x34\x8b\xc0\x0d\x6f\x3d\x9e\xd2\x1c\xa7\x28\x7e\xf3\x8d\x8b\x9c\x47\x83\xd4\xef\x46\xdb\x03\x51\x9b\x81\xa7\x37\xb8\xfd\xaa\xd9\x64\x24\x90\x87\x76\xfd\x88\x8f\x4b\xbc\x1a\x14\xb7\xea\x3f\x6f\x23\x27\x8a\xf5\x2b\xca\xfe\xb7\xfa\x03\x3c\x44\x60\xc4\x77\xb6\x11\x47\xac\x02\x2e\xa2\xed\x19\x9c\x98\x55\x6f\x67\xea\x3a\x00\xd3\x5f\x70\x0e\x56\x20\x3c\xe5\xeb\xb0\x87\xe9\xaa\x2d\x84\x0f\x84\x78\xd7\xf6\xec\xba\xf4\xc5\xf9\x5f\x2b\x53\xe1\x8a\x39\xfa\xff\x0e\x00\x00\xff\xff\x12\x64\xba\xc4\x3e\x63\x00\x00")

func assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppJs,
		"assets/app.js",
	)
}

func assetsAppJs() (*asset, error) {
	bytes, err := assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.js", size: 25406, mode: os.FileMode(436), modTime: time.Unix(1490861928, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBackSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xcd\x6a\x03\x21\x14\x85\xf7\x3e\xc5\xe1\x76\x9b\xc6\xe3\x4c\x21\x50\xd4\x45\xf7\x7d\x88\x42\xac\x4a\xa7\x63\x88\xa2\xa1\x4f\x5f\x26\x0c\xc3\xe5\x9e\x9f\x6f\x71\x6c\xed\x11\x8f\xdf\x65\xad\x4e\x52\x6b\xb7\x77\xad\xc7\x18\xe7\x31\x9f\xcb\x3d\xea\x89\xa4\xae\x3d\x0a\x46\xbe\xb6\xe4\x64\x22\x05\x29\xe4\x98\xda\x5e\x7a\x0e\xe3\xa3\x3c\x9c\x10\xc4\xc4\xe7\x8b\x57\x36\xa2\xb6\x7b\xf9\x09\x4e\x5e\xde\xb8\x9d\xec\xe0\xf5\x98\x12\x7c\xe7\x65\x71\xb2\x96\x35\x88\x57\x00\x60\x6f\x5f\x2d\xe1\xea\xe4\x13\x33\x4f\x86\x84\x21\x4f\x33\x61\x2e\x87\x99\x0b\xf1\xc4\x5b\xf8\x13\xed\x95\xd5\x71\x93\xda\xa3\x57\xff\x01\x00\x00\xff\xff\xc0\x07\xee\x15\xd1\x00\x00\x00")

func assetsBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsBackSvg,
		"assets/back.svg",
	)
}

func assetsBackSvg() (*asset, error) {
	bytes, err := assetsBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/back.svg", size: 209, mode: os.FileMode(436), modTime: time.Unix(1490861399, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMainSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\xc1\x4a\xc4\x30\x18\x84\xef\x79\x8a\xe1\xf7\xba\x6e\xa6\xad\xb0\x20\x49\x0e\xde\x7d\x08\x61\x63\x12\xac\x4d\x69\x42\x52\x7c\x7a\xa9\x14\x97\x61\xe6\x63\xe6\x30\xa6\xb4\x80\xfd\x7b\x5e\x8a\x95\x58\xeb\xfa\xaa\x75\xef\xfd\xda\xa7\x6b\xde\x82\x1e\x49\xea\xd2\x82\xa0\xa7\x7b\x8d\x56\x46\x52\x10\x7d\x0a\xb1\x9e\xa5\x25\xdf\xdf\xf2\x6e\x85\x20\x46\xfe\x59\x9c\x32\x01\xa5\x6e\xf9\xcb\x5b\x79\x7a\xe1\x21\x39\x87\xe7\xff\x2b\xc1\x67\x9a\x67\x2b\x4b\x5e\xbc\x38\x05\x00\x66\xfd\xa8\x11\x77\x2b\xef\x18\xc8\xcb\x44\x0c\x37\x5e\x06\x9e\xbc\x11\xd3\x03\x24\x7e\x44\x3b\x65\x74\x38\xa2\xb4\xe0\xd4\x6f\x00\x00\x00\xff\xff\xd3\xed\x09\x4f\xd0\x00\x00\x00")

func assetsMainSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsMainSvg,
		"assets/main.svg",
	)
}

func assetsMainSvg() (*asset, error) {
	bytes, err := assetsMainSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/main.svg", size: 208, mode: os.FileMode(436), modTime: time.Unix(1490861491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsNextSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\xf1\x33\xbd\x5a\x33\x49\x55\xb0\x24\x1e\x7a\xef\x43\x14\xb4\x49\xa8\x5d\xc5\x84\x44\xf6\xe9\x17\x57\x61\x17\x96\x61\x06\xfe\xe1\xe3\xd7\x21\x59\x6c\xff\xd3\x25\x18\x72\x31\x2e\x9f\x42\xe4\x9c\xab\xfc\x51\xcd\xab\x15\x8a\x99\x45\x48\x96\x90\xfd\x10\x9d\x21\xc5\x4c\x70\xa3\xb7\x2e\x9e\x21\xf9\x31\x7f\xcd\x9b\x21\x06\x43\xf1\x7d\xa9\x2f\xb4\x45\x88\xeb\xfc\x37\x1a\x7a\xab\x79\x1f\x3a\x1f\xef\x67\x95\x54\x84\x5f\x3f\x4d\x0f\xd0\x17\x00\xa0\x97\x9f\xe8\x30\x18\xfa\x46\xdd\x94\x2d\x43\xca\xa6\x94\xcc\x7b\x92\x35\xe3\x4a\xe2\x05\x76\x07\x6c\x0f\xd8\x3d\x41\x2d\xec\x7e\x42\xb2\x7d\x71\x0b\x00\x00\xff\xff\x22\xf8\x97\x68\xec\x00\x00\x00")

func assetsNextSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsNextSvg,
		"assets/next.svg",
	)
}

func assetsNextSvg() (*asset, error) {
	bytes, err := assetsNextSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/next.svg", size: 236, mode: os.FileMode(436), modTime: time.Unix(1490506165, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xe1\x4a\x03\x31\x10\x84\xff\xdf\x53\x0c\xeb\xdf\xda\xec\xc6\xd6\x2b\x72\x39\xd0\xff\x3e\x84\xd0\x73\x73\x78\xde\x95\x26\x24\xc5\xa7\x97\x94\xd4\x62\x95\x90\x5d\x32\x7c\x99\x99\x2e\x24\xc5\xe9\x73\x9a\x83\x23\x1f\xe3\xe1\xc9\x98\x9c\xf3\x3a\x3f\xac\x97\xa3\x1a\xcb\xcc\x26\x24\x25\xe4\x71\x1f\xbd\x23\xcb\x4c\xf0\xc3\xa8\x3e\xd6\x47\x1a\x87\xfc\xb2\x9c\x1c\x31\x18\x96\xcf\x97\xfa\xa6\x53\x84\x78\x5c\x3e\x06\x47\x77\x1b\x2e\x87\xaa\x70\x5f\xad\xc4\x12\xde\xc7\x69\xba\x02\x7d\x03\x00\xdd\xe1\x2d\x7a\xec\x1d\xbd\xa2\xdd\xae\x1e\x19\xbb\xcb\x94\x0d\x17\xa9\xac\x2f\x32\x7f\x68\xb1\x67\x50\xe4\x67\x15\xb2\xa8\xbf\x7f\xe8\x4d\x91\xdd\xa5\xc7\xbc\xcc\x43\x2d\x71\x63\x5d\x3c\x98\xf1\x5c\xe2\xdb\x2d\x18\xb2\x12\x48\xfb\x9f\x5a\xd1\x6b\x9c\xd1\xbe\xa9\x23\x24\xed\x9b\xef\x00\x00\x00\xff\xff\x0a\xc1\xa7\x81\x72\x01\x00\x00")

func assetsPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPauseSvg,
		"assets/pause.svg",
	)
}

func assetsPauseSvg() (*asset, error) {
	bytes, err := assetsPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pause.svg", size: 370, mode: os.FileMode(436), modTime: time.Unix(1490523630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xd1\x4a\xc3\x40\x10\x45\xdf\xf3\x15\x97\xf1\x35\x76\xef\xae\x89\x11\xc9\x06\xf4\xdd\x8f\x10\x1a\x67\x83\x31\x29\xdd\x25\x5b\xfc\x7a\x69\x59\x29\x94\x32\xcc\xc0\xbd\x1c\xce\xf4\x71\x53\x9c\x7e\xe6\x25\x7a\x09\x29\x1d\x5e\x8d\xc9\x39\xef\xf2\xd3\x6e\x3d\xaa\x71\x24\x4d\xdc\x54\x90\xa7\x7d\x0a\x5e\x1c\x29\x08\xe3\xa4\x21\x95\xb0\x4d\x63\x7e\x5f\x4f\x5e\x08\xc2\xf1\xb2\x32\x54\xbd\x22\xa6\xe3\xfa\x3d\x7a\x79\x68\x78\x1e\x29\xc5\x63\x51\x59\x27\xf8\x9a\xe6\xf9\x0a\x0c\x15\x00\xf4\x87\xcf\x14\xb0\xf7\xf2\x81\x8e\xf5\x33\x61\x1b\xd6\x96\x3c\x27\xdb\x10\xbf\x62\x0a\xa8\x37\xc6\x97\x7f\xe1\xb2\x2e\x63\xb1\xdd\x18\x5d\x7b\x51\xbd\xa1\x6b\xeb\xae\x05\x61\x6b\x0b\xdb\xdd\x6b\x0b\x7a\x7d\x67\x74\xa8\xca\x89\x9b\x0e\xd5\x5f\x00\x00\x00\xff\xff\x74\x48\x45\x6f\x3b\x01\x00\x00")

func assetsPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPlaySvg,
		"assets/play.svg",
	)
}

func assetsPlaySvg() (*asset, error) {
	bytes, err := assetsPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/play.svg", size: 315, mode: os.FileMode(436), modTime: time.Unix(1490506353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrevSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\x31\x4c\xaf\xd6\xfc\x89\x5a\x4a\x49\x3c\xf4\xde\x87\x28\x68\x93\x50\x77\x15\x13\x12\xd9\xa7\x5f\x94\xc0\x2e\x2c\xc3\x0c\xfc\xc3\xc7\xaf\x43\xb2\xb4\x5f\xe6\x6b\x30\xec\x62\x5c\xbf\x84\xc8\x39\x37\xb9\x6d\x96\xcd\x0a\x05\x40\x84\x64\x99\xb2\x1f\xa3\x33\xac\x00\x26\x37\x79\xeb\x62\x09\xc9\x4f\xf9\x7b\xd9\x0d\x83\x40\x0a\xe7\xf2\x50\x69\x4b\x21\x6e\xcb\xff\x64\xf8\xad\xc3\x31\x5c\x1e\xef\xa5\x4a\x2a\xa6\x3f\x3f\xcf\x0f\x30\x54\x44\x44\x7a\xfd\x8d\x8e\x46\xc3\x3f\x24\xfb\xbe\xfe\x00\x7d\xf6\xb5\x04\xce\x24\x3b\xd0\x8d\xc5\xab\xc4\x29\xdb\x22\xf1\x24\xb5\xb0\xc7\x09\xc9\x0e\xd5\x3d\x00\x00\xff\xff\x27\x39\x48\xbf\xee\x00\x00\x00")

func assetsPrevSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrevSvg,
		"assets/prev.svg",
	)
}

func assetsPrevSvg() (*asset, error) {
	bytes, err := assetsPrevSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prev.svg", size: 238, mode: os.FileMode(436), modTime: time.Unix(1490506308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRandomSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xd1\x6a\xc3\x20\x18\x85\xef\xf3\x14\x87\x7f\xb7\x59\xfd\x75\x9a\x95\x11\x03\xdb\xfd\x1e\x62\xd0\x4c\xc3\xb2\xa4\x54\x89\x65\x4f\x3f\x6c\x2c\xdd\x42\x11\x85\xff\xf8\x9d\x73\xb4\x0d\x8b\xc3\xf9\x7b\x9c\x82\x25\x1f\xe3\xf1\x45\x88\x94\xd2\x2e\x3d\xed\xe6\x93\x13\x8a\x99\x45\x58\x1c\x21\x0d\x87\xe8\x2d\x29\x66\x82\xef\x07\xe7\x63\x19\x96\xa1\x4f\x6f\xf3\xd9\x12\x83\xa1\xf8\xb2\xa9\xab\x5a\x87\x10\x4f\xf3\x57\x6f\xe9\x41\x73\x5e\x54\x84\xc7\x12\x25\x15\xe1\x73\x18\xc7\x1b\xd0\x55\x00\xd0\x1e\x3f\xa2\xc7\xc1\xd2\x3b\xa4\x31\xb5\x32\x90\x7b\x53\x6b\xbe\x4c\xc6\xe0\x87\xc4\x5d\x50\xea\x95\x94\xcd\x8a\xca\xe7\xbf\xac\xdb\xb4\xef\xaf\xe5\xd3\x3c\xf5\xa5\x79\x13\xaa\x39\xb7\xbe\xa2\xe1\xba\xc9\x9f\x93\xb5\xcc\x5a\xce\xbf\xc6\x6e\x9f\xd1\xac\xd7\xff\x3d\x59\xd5\x37\x4f\x2b\x5c\x57\x95\x23\x2c\xae\xab\x7e\x03\x00\x00\xff\xff\xa2\x45\x96\xa5\x83\x01\x00\x00")

func assetsRandomSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRandomSvg,
		"assets/random.svg",
	)
}

func assetsRandomSvg() (*asset, error) {
	bytes, err := assetsRandomSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/random.svg", size: 387, mode: os.FileMode(436), modTime: time.Unix(1490535047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRepeatSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4e\xc3\x30\x10\x44\xef\xf9\x8a\xd1\x72\x2d\xf5\xc6\xad\xa5\x0a\xc5\x39\x70\xe7\x23\x10\x35\xeb\x88\x90\x54\xb1\x15\xa7\x7c\x3d\xb2\x71\x01\x55\x96\x3d\x1a\x6b\xf4\x76\xb6\x0b\xab\x60\xfb\x1c\xa7\x60\xc9\xc7\x78\x79\x52\x2a\xa5\xb4\x4f\x87\xfd\xbc\x88\xd2\xcc\xac\xc2\x2a\x84\x34\x9c\xa3\xb7\xa4\x99\x09\xde\x0d\xe2\x63\x35\xeb\xe0\xd2\xf3\xbc\x59\x62\x30\x34\x97\x4b\x7d\xd3\x09\x42\x5c\xe6\x0f\x67\xe9\xe1\xc8\xf9\x50\xfd\x78\xac\xa8\x56\x13\xde\x87\x71\xfc\x0b\xf4\x0d\x00\x74\x97\xd7\xe8\x71\xb6\xf4\x82\x93\xd9\x69\x83\xb6\x35\xbb\x23\x67\x63\x0c\xbe\x48\xd5\x98\xdc\xf1\x4e\x37\xdc\x34\x4f\xae\xb2\x4a\x70\x71\x6f\x11\x9b\xa5\x5c\xe1\xfa\x23\xbf\x15\xfe\x6d\x53\xcc\xb2\x59\x3a\x64\xbd\x16\xbd\xcd\x52\xd2\x37\xf5\x09\xab\xf4\xcd\x77\x00\x00\x00\xff\xff\x5e\x9e\x3f\xba\x36\x01\x00\x00")

func assetsRepeatSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRepeatSvg,
		"assets/repeat.svg",
	)
}

func assetsRepeatSvg() (*asset, error) {
	bytes, err := assetsRepeatSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repeat.svg", size: 310, mode: os.FileMode(436), modTime: time.Unix(1490535180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsSettingsSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xc1\x6e\x84\x20\x10\x86\xef\x3e\xc5\x64\x7a\x65\x97\x19\x44\xcd\x36\x6a\xd2\xde\xfb\x10\x4d\xd6\xa2\xa9\xd5\xcd\x42\x64\xd3\xa7\x6f\x14\x6a\xd3\xa4\xec\xa9\x31\x32\x01\xbe\xf9\xf8\xa1\xb6\x8b\x81\xdb\xc7\x38\xd9\x06\x7b\xe7\x2e\x8f\x52\x7a\xef\x8f\x3e\x3f\xce\x57\x23\x15\x11\x49\xbb\x18\x04\x3f\x9c\x5d\xdf\xa0\x22\x42\xe8\xbb\xc1\xf4\x2e\x4e\x96\xa1\xf3\xcf\xf3\xad\x41\x02\x02\x45\xdb\x8f\x6d\x56\x1b\xb0\xee\x3a\xbf\x77\x0d\x3e\x68\x5a\x3f\x8c\x0b\x87\xa8\x62\x85\xf0\x36\x8c\xe3\x0f\xd0\x66\x00\x00\x7b\xe7\x61\x3f\xf3\x1b\x9c\xe6\xa9\x8b\xd4\x46\x5e\x5e\x5d\x0f\xe7\x06\x5f\x80\x89\x44\x4e\x5b\x29\x09\x3e\x51\x26\x29\xae\x02\xc6\x3a\xcd\xe5\x24\x98\x08\xca\x50\x92\xb6\x2a\xec\xb3\xfe\x27\x2e\x84\x7f\x02\x4d\x42\xaf\xaf\xc9\x82\xf7\xa8\xf7\x6e\xa4\xff\x6a\x2a\x93\x3d\x05\x89\x82\xa0\x62\x51\x71\x32\x4b\x41\x82\x03\xc4\xea\x94\x4e\x1c\x54\xac\x4e\xf7\x5c\x1c\x65\x2b\xf6\xcb\x56\x4b\xd3\x66\x71\xb0\x8b\x69\xb3\xaf\x00\x00\x00\xff\xff\x38\xf2\x81\x5c\x8d\x02\x00\x00")

func assetsSettingsSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsSettingsSvg,
		"assets/settings.svg",
	)
}

func assetsSettingsSvg() (*asset, error) {
	bytes, err := assetsSettingsSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/settings.svg", size: 653, mode: os.FileMode(436), modTime: time.Unix(1490712532, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/app.css": assetsAppCss,
	"assets/app.html": assetsAppHtml,
	"assets/app.js": assetsAppJs,
	"assets/back.svg": assetsBackSvg,
	"assets/main.svg": assetsMainSvg,
	"assets/next.svg": assetsNextSvg,
	"assets/pause.svg": assetsPauseSvg,
	"assets/play.svg": assetsPlaySvg,
	"assets/prev.svg": assetsPrevSvg,
	"assets/random.svg": assetsRandomSvg,
	"assets/repeat.svg": assetsRepeatSvg,
	"assets/settings.svg": assetsSettingsSvg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{assetsAppCss, map[string]*bintree{}},
		"app.html": &bintree{assetsAppHtml, map[string]*bintree{}},
		"app.js": &bintree{assetsAppJs, map[string]*bintree{}},
		"back.svg": &bintree{assetsBackSvg, map[string]*bintree{}},
		"main.svg": &bintree{assetsMainSvg, map[string]*bintree{}},
		"next.svg": &bintree{assetsNextSvg, map[string]*bintree{}},
		"pause.svg": &bintree{assetsPauseSvg, map[string]*bintree{}},
		"play.svg": &bintree{assetsPlaySvg, map[string]*bintree{}},
		"prev.svg": &bintree{assetsPrevSvg, map[string]*bintree{}},
		"random.svg": &bintree{assetsRandomSvg, map[string]*bintree{}},
		"repeat.svg": &bintree{assetsRepeatSvg, map[string]*bintree{}},
		"settings.svg": &bintree{assetsSettingsSvg, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

