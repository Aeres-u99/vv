// Code generated by go-bindata.
// sources:
// assets/app.css
// assets/app.html
// assets/app.js
// assets/next.svg
// assets/pause.svg
// assets/play.svg
// assets/prev.svg
// assets/random.svg
// assets/repeat.svg
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAppCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdd\x6e\xeb\x36\x0c\xbe\xf7\x53\x08\x27\x28\x70\x0e\x50\x07\xb6\xe3\x64\x89\x87\xdd\xee\x25\x86\xe1\x40\xb6\x95\x58\xab\x22\x19\x32\x9d\xa6\x1d\xf2\xee\x83\xe3\x3f\xfd\x26\xee\x06\xac\x41\x80\x46\x36\xc9\x8f\xe4\x47\x8a\xcc\x45\xf9\x81\xfe\x0e\x10\x42\x28\x7c\x27\xf9\x1b\x85\x10\xc8\x15\xc2\x86\x7e\x92\x10\x97\x7f\xb5\x0d\x64\x28\x8e\xa2\x97\x5f\xef\xef\x9c\xb1\x3c\x51\x9e\xa1\xa8\xbe\xf6\x07\xb9\x90\x25\x91\xca\x41\x8d\xcb\x92\xf2\xd3\x70\x72\x0b\x82\x8a\xe0\x92\xc8\x57\x74\x14\x02\x88\x1c\x6c\xd5\xa2\xa1\x40\x05\xcf\xd0\x91\x5e\x49\xd9\x8b\x7e\x86\x94\x97\xe4\xda\xd9\xeb\x24\x7b\xc1\x41\x80\x91\x23\x28\x56\xde\x69\x09\x95\x0a\x0c\x44\xad\xa2\xc2\xc5\xdb\x49\x8a\x96\x97\x19\x5a\x95\xf9\x2f\xd1\x61\xd3\x3f\xa8\x08\x3d\x55\x90\xa1\x74\x44\xa7\xa1\xca\x05\x80\x38\x2b\x7a\xc6\xd7\x0f\x6e\xc3\xb7\x20\x58\x35\x6d\x7e\x26\xbc\x7d\xe4\x57\x8f\x7d\xb7\x5b\xef\x76\x2f\x9a\x96\xcd\x66\xbd\xd9\xa8\x0e\x4c\xb0\x26\xb5\x82\x8d\x01\xa0\x0d\x84\x0d\x7c\x30\x12\xc2\x47\x4d\x32\xc4\x05\x27\xae\x90\x3b\xd3\xe4\x85\x9d\xb7\x00\x82\x0f\x36\xcc\xb7\x1a\x52\x74\xce\x58\xbe\xe1\xbc\x11\xac\x05\x62\x21\x77\x64\x6a\x4e\xaa\x27\x73\x2a\xfa\xfb\xf7\x30\x05\xa1\xf3\xf9\x6b\x11\x88\x27\xbb\x85\x60\x42\x66\x68\x95\x46\xdd\xc7\x0a\x0b\x8a\x13\x2f\x63\x7b\xbb\xeb\x9a\x61\x6a\xfb\x2e\x09\xc3\x40\x2f\xba\xe1\xf0\x1e\x83\xbd\x49\x9b\xcd\x84\xe6\x28\x78\x5f\x53\x19\x8a\xf7\x7a\xed\x84\x23\xeb\x1a\xc1\x68\x89\xe2\xfa\x8a\x56\xc7\xa8\xfb\xa8\x60\x1a\xc1\x4f\x4f\xb0\xe8\xdc\x5e\x66\x60\x8e\xca\xf4\x56\xa2\x93\xa8\x77\x2d\xed\x43\xa3\x82\x59\x83\xc4\xc5\xdb\x2b\xd2\xce\x18\xe1\x27\xa8\x9c\x87\x3f\x1b\x52\x63\x89\x41\x48\xe3\x31\x61\xb8\x6e\x48\xf9\x84\x65\x23\xbc\x38\x75\xc5\x34\xf1\xe1\xb3\xdb\x87\xf1\x96\x6e\x5d\xf6\x21\xdc\x6d\x46\x23\x7d\x33\xac\x70\x29\xde\xb3\x7b\xe8\xe2\x81\xa5\xef\x15\xed\xa0\x19\xda\x4c\x57\x75\xb5\xdb\xe8\x3f\xa9\xd5\x95\xc5\xff\x56\x19\x50\x60\xe4\x49\xb4\xfb\x78\xcd\x4c\xba\x93\x20\x36\xdb\x49\x81\x59\xf1\xbd\xab\x64\x14\xa2\x38\x89\xea\xeb\x8f\x07\x6c\x67\x94\x93\x70\xe4\xe8\x9c\xc5\xc7\xe0\x5f\xc7\x5f\x7e\x77\xb0\x84\xee\xd7\x82\x1e\x95\xa4\x7a\x8f\x4a\x9d\xe5\xa9\x53\x09\xb3\xbc\x3d\x2f\x2c\xbc\xed\x17\x0a\xcf\x30\xb0\x2e\x31\x3c\xcb\x49\x9f\x03\xc3\x87\xd8\xef\x83\xda\x05\xf7\x51\xf7\x71\x5c\xd9\x26\x0e\xb7\xbf\x2e\x20\x89\x0e\x64\x76\x5e\x4f\xf4\xc2\x4a\x72\x25\xda\xf0\x2a\x49\x9c\x43\x87\xd3\x83\xe5\xa4\xd8\x18\x17\x57\xe2\x0c\x68\xea\x31\x1d\x04\xc1\xaa\x68\xa5\x24\x1c\x7c\x85\x65\x0d\x02\xb1\x5e\x55\x5b\xff\x50\xa3\x20\xd8\x24\xe3\xe5\x34\x99\xd3\x7c\xb4\xaf\x55\x17\x80\xbb\xc1\x43\xe4\xa3\xd0\x98\x34\x67\x0c\x92\x9d\x85\xc0\xd7\xb9\x4d\x8b\xdb\x11\xd4\x30\x09\x45\x2f\x1e\x87\x27\xd6\xb8\x42\x90\xee\x2d\x00\x25\x01\x4c\xd9\x53\xfb\xb1\x99\x64\x85\xab\x4b\x67\x0a\xcd\x30\xa3\x83\x4d\xb3\xbe\x34\x74\x85\xe0\x20\xc5\x43\x78\xf3\xad\x36\x41\xd2\xda\xfb\x2d\x08\xb4\x09\x4d\xb4\xd0\x95\x57\x86\xa2\xc5\xa3\x9f\x35\xa1\xcf\xc3\x71\x38\xc0\x97\xa7\x1c\x7f\x4f\xb6\xdb\xd7\xf1\x1b\xfd\xf0\xb8\x32\x80\xa1\xe7\x71\x18\xb1\x06\x6a\x4b\xe6\xe7\x45\xb0\xf6\xfc\xb0\x2e\xa6\x28\x24\xde\x81\xd5\xaf\x97\xf2\xba\x85\x3f\xba\xec\xfd\xf6\x4d\x62\x7e\x22\xdf\xfe\x34\xb0\xed\x0d\xa5\x07\xc7\x36\x83\xb6\xc3\xd9\xb8\x05\xe1\xba\x26\x58\x62\x5e\x68\xa4\xd0\x16\x0b\x75\xb4\x1c\x3a\xbe\xc4\x25\x6d\x9b\xb1\xa8\x1f\x85\xc3\x01\x3b\xcb\x46\xe3\x0d\xa3\x9d\x36\xa8\xda\x73\x6e\x6c\x67\x5f\xc4\x35\xb8\x3c\x5f\x7d\x53\x8d\x1b\x2d\x4d\x81\xfe\xa2\xed\x6d\xc3\x1a\xc6\xf1\x45\xfd\x5f\x5f\x1c\x2c\x8e\x59\x2c\xf4\xac\x85\xb6\x2a\x93\xe1\x36\x5b\xb5\x85\x4e\xdd\xa4\xa6\x5d\xca\x22\xa5\x65\x2c\xab\xc4\x65\x5e\xfb\x6c\x13\xc7\x63\x9c\x76\x26\x6e\x0e\x51\x5c\x74\x57\xbf\x5f\xf6\xf7\xfb\x9f\xba\x5d\x76\xc2\x5a\x9b\x4e\x62\x3b\x52\x08\xb7\x20\xdc\x97\x8c\xa2\xa6\xc7\x30\x6d\xd3\x0a\xac\xa3\x28\xda\xc6\xf1\x40\x29\xd6\xff\xb1\x7b\x20\x6b\x7b\xbe\xd9\x6e\x74\x2b\xd6\x87\x82\x6f\xaa\x4f\x9f\xdf\xeb\x5a\x92\x8b\x2d\xb0\xf3\x0b\x70\x72\x85\xaf\x08\x2c\x27\x86\x2d\xba\x9c\x18\xff\x04\x00\x00\xff\xff\xec\xb8\xd2\xfa\x76\x11\x00\x00")

func assetsAppCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppCss,
		"assets/app.css",
	)
}

func assetsAppCss() (*asset, error) {
	bytes, err := assetsAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.css", size: 4470, mode: os.FileMode(436), modTime: time.Unix(1490622751, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\xcf\xe4\x26\x13\xbc\xcf\xaf\xe0\xe5\xbc\x5e\x66\xb4\x97\x57\x2b\xec\x4b\x3e\x6e\x51\x22\x65\x13\x29\xa7\xa8\x8d\xfb\x19\x93\x07\x03\x82\xb6\x67\xe6\xdf\x47\x80\x3d\x6b\x3b\x9e\x4d\x4e\x86\xea\xa6\xba\x0b\x0a\x2c\xff\xf7\xfd\xcf\xdf\x7d\xf9\xe3\x97\x1f\x58\x4f\x83\x69\x4e\x72\xf9\x20\x74\xcd\x49\x0e\x48\xc0\x54\x0f\x21\x22\xd5\xfc\xb7\x2f\x3f\x56\xff\xe7\x62\xc1\x2d\x0c\x58\xf3\x49\xe3\xcd\xbb\x40\x9c\x29\x67\x09\x2d\xd5\xfc\xa6\x3b\xea\xeb\x0e\x27\xad\xb0\xca\x93\x0f\x4c\x5b\x4d\x1a\x4c\x15\x15\x18\xac\x2f\x1f\xd8\xa0\xad\x1e\xc6\x61\x01\xf8\x96\x15\xbc\x37\x58\x0d\xae\xd5\x06\xab\x1b\xb6\x15\x78\x5f\x29\xf0\xd0\x1a\x5c\x55\x7a\x60\xfc\x2f\x0b\x23\x01\x8d\xb1\x6a\x21\x54\x91\x1e\x1b\x86\xd6\x80\x7a\x4f\x1c\x46\xdb\x77\x16\xd0\xd4\x3c\xa7\xc4\x1e\x91\x38\xa3\x87\xc7\x9a\x13\xde\x49\xa8\x18\x39\xeb\x03\xbe\xd5\x5c\x40\x8c\x48\x51\x80\xf7\x1f\x13\xdc\x9c\x64\x54\x41\x7b\x62\x31\xa8\x6d\xf8\xaf\xc8\x1b\x29\x4a\xb4\x39\x49\xd2\x64\xb0\x99\x26\x29\xca\xe8\x24\xc5\xbc\xd5\xad\xeb\x1e\xf3\xc6\x63\x68\x4e\x8c\x31\x26\x2d\x4c\x4c\x77\x35\x1f\xd0\x8e\xbc\x60\x19\x6f\x47\x22\x67\x99\x32\x10\x63\x3d\xfa\xb9\xcb\x82\xf2\xc6\xe8\x48\x52\x94\x59\xb3\xcd\x6d\x41\xbd\xef\xb2\xad\xbb\x31\x6f\xe0\xa1\xed\xf5\xc5\xa2\x54\x7d\xb7\x28\x41\xcf\xec\xd2\xab\xb0\x30\xed\xda\x8e\x63\x9b\x3b\x67\x79\x47\x6b\xde\xe9\x98\x2a\x7d\x66\xd6\x59\x5c\xeb\x71\xe6\xeb\x24\x03\x46\xef\x7a\x08\x68\x1c\x74\xbb\x2e\x0a\xf8\xb5\x6b\x61\xf4\xbf\xf1\x28\x67\xdf\xf4\x75\xc7\x53\xc0\x03\x9e\x59\x54\x39\xa3\x74\x2a\x32\xa2\x22\xed\x6c\x96\x97\xf6\xf9\x9b\xda\x9e\xba\xa4\x48\x23\x29\xe6\xd5\x3b\x1e\x35\x86\x80\x96\x96\x45\x8a\x34\xce\xdd\xf2\x6c\x92\x74\x46\x2c\x8f\xa4\x48\xc1\x39\x2f\x7a\x58\x54\x71\x08\x94\x9a\x49\x89\x65\x28\x45\x0a\x1f\x64\xa2\x01\x1f\xb1\xcb\xa9\xcf\x63\x5f\xe5\xa6\xb3\x9b\x53\xd3\x1d\x09\xce\xbc\x34\x5e\x40\x8f\x40\x8d\xd4\xc3\x75\xeb\xfb\x12\xf8\x18\xa7\x2b\x67\x60\xa8\xe6\x05\x48\x17\x61\x6d\x99\x03\x46\xb0\x9d\x1b\x8e\x18\x73\x60\xcd\x98\x81\x3d\xe3\xda\x84\xa3\x59\x74\x74\x48\xa0\x4d\xca\x1d\xcd\x4b\x95\x7f\x4e\xce\x8c\xc3\xc6\x95\xda\xfa\x91\x66\xab\x04\xb0\x57\xe4\xe9\xd1\xaa\xcf\x6c\x80\x7b\x7d\x39\x9f\x59\x24\xf4\xf5\x65\x67\x95\x17\x67\x9c\x2d\xf6\x6d\xb7\xf4\x9f\x9a\xdf\x73\x13\x52\xf4\x9f\x9e\x2a\x56\x0d\x25\x37\xaf\x9b\x52\x3d\xaa\xf7\xd6\xdd\x79\xb9\x6d\xbd\xbb\x3d\x55\xfc\xda\xbb\x1b\x2b\x13\x66\x5d\xbb\xbd\x1a\x89\xe8\x27\xb8\xcf\xf1\xcf\x5b\xa5\x76\x1c\x5a\x0c\x85\x72\x80\xfb\xc2\x98\xa5\xf3\xcb\x99\x67\xf5\xfc\x72\x3e\xf3\xa2\x3f\x63\x13\x98\x11\x0b\xba\xb9\x3e\xe3\xce\xf6\x6f\xce\xd1\x3f\x5e\xb7\xb4\x13\x6d\x79\x85\x8f\x6d\xe1\x03\x4e\xdb\x2b\xbb\x14\x4c\x11\x7e\xe0\x97\x84\xaf\xdc\x32\xa7\x1d\x3f\x6f\xa9\xfc\x0b\x76\x03\x0f\xe1\x61\x8c\x78\x58\xc3\xc0\x63\x5d\xc3\xc0\xe3\x65\x0d\x8b\x77\x3a\xae\x91\x22\x47\xec\x09\x5f\xb1\xcf\x69\x47\x6e\x97\x62\xd9\x55\x29\xca\x4f\x24\x3d\x58\xf9\x37\xfe\x77\x00\x00\x00\xff\xff\xa3\x07\xd6\xbb\xde\x07\x00\x00")

func assetsAppHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppHtml,
		"assets/app.html",
	)
}

func assetsAppHtml() (*asset, error) {
	bytes, err := assetsAppHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.html", size: 2014, mode: os.FileMode(436), modTime: time.Unix(1490625054, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x6f\xe3\x38\x92\xcf\xdb\xbf\x82\x23\xe0\xd6\xf2\xc5\xed\x24\x7b\x77\xfb\x20\x8f\x67\xb0\x3b\xdd\xb7\x33\x87\x9e\xe9\xc5\x74\x1e\x0e\x30\x8c\x80\xb6\x18\x87\x1d\x59\xd2\x48\x94\x13\x23\xe3\xff\x7e\x60\x91\x94\xf8\x29\x29\xe9\xa4\xe7\x80\xbb\x3c\x38\x96\x58\x2c\x16\x8b\x55\xc5\xaa\x62\xd1\x07\x5c\xa1\xc3\x01\x2d\xf9\xc7\xef\xbf\xa3\xc7\x37\x08\x21\x54\x6c\x3e\x27\xe8\xf1\x34\x83\x87\xba\xc8\x77\xe6\x53\xad\x3d\xb2\xa2\xc2\x3b\xd2\xbd\xd8\x17\x29\xc9\x12\xf4\x98\xd1\x9a\xf1\xb7\xf2\xf5\x81\x92\xfb\x04\x3d\xee\x31\xcd\x01\x16\xa9\xf6\x19\xda\x16\xf9\x0d\x15\x23\xa0\x3d\xc9\x1b\xf1\xad\xcc\xf0\x71\x83\xb7\x77\xe2\x89\x64\xb8\xac\x49\x2a\x1e\xd2\xaa\x28\xd3\xe2\x3e\xd7\xd0\x6f\x8b\x9c\x55\x45\x86\x04\x1d\xa7\xc5\x9b\xc3\x61\x5e\x6c\x3e\xa3\x25\x8a\x6f\x9a\x7c\xcb\x68\x91\xc7\x53\x31\x37\xf5\x8c\x76\x84\x7d\xac\xde\x67\x35\x89\xf7\x33\x74\x37\x43\x87\xa9\x9c\x3d\xff\xab\x08\x6b\xaa\x1c\xdd\x21\x9a\xa3\xfd\xf7\x68\xbf\xba\x5b\xa3\x04\x1d\x16\x00\x70\x7a\xa3\x81\x3c\xb6\x78\x92\x0e\xe5\x69\xf1\xe6\x34\x8d\xa7\x40\x07\xe7\x98\x8f\x10\xce\x79\x86\x79\x53\xdb\xc2\x41\x67\xe8\x8e\x1c\xeb\x19\x2a\xd8\x2d\xa9\x74\x92\x6e\x8a\x0a\xc5\x94\x13\xc4\x01\xf4\x16\x85\xed\x8e\x1c\xd1\x12\x5a\x57\x74\xbd\x30\x9a\xe9\x0d\x8a\x79\x33\xcd\x61\x05\xed\xde\xda\x7c\x78\xf3\xea\x8e\x1c\x2d\x04\xa7\x37\xee\x37\xd9\x03\x28\xd5\x39\xc3\x69\x69\x59\xe1\x9d\x9f\x3b\xbd\x7e\x02\x83\xb4\x9d\x10\xe1\x63\xa8\xde\xcb\x25\x8a\xfe\x96\x6d\x9a\xfd\xa7\xa2\x62\x91\x1f\x09\xc3\x3b\x49\xc8\x4a\xc0\x46\x6b\x45\x4e\x2f\xda\x8a\xd1\x9a\x8d\xc5\x0b\xc0\x23\x11\x73\x1a\x64\x87\x57\xc3\xfc\x14\x7e\xc8\x21\x66\xe8\xe9\x83\xbd\x0c\xdb\x7d\xdd\x35\x21\x6b\xe5\xcc\x90\x36\xaf\x9c\x79\x54\xba\x53\x7b\x4d\x1a\x27\xab\xbc\x40\x13\x74\x06\x2a\x74\x86\x26\xeb\xc9\xd4\x16\xe8\x9a\x55\x7e\x55\xd5\xc7\x00\xc0\xa2\x62\x42\x13\x27\x93\xc5\x48\xed\x55\x7d\xce\x96\x3e\xfa\xb8\x3a\xcf\xd0\x04\x4d\xa6\x61\x25\x94\x18\x7c\x06\xaa\x05\xf5\x59\xaa\x99\xde\x0a\xef\xbb\x37\x35\xab\x12\xfe\x21\xde\x70\x9b\x16\x4f\x3b\x9b\x56\x87\x8c\x1a\x27\xc5\x66\x55\xed\xf2\x4a\xd3\xe9\x7a\xbe\xc7\x65\x6c\x74\xb0\x39\x24\xa1\x57\x82\x29\x92\x84\x79\xcd\x2a\x7d\x25\xd6\x1d\x7f\xa6\x73\x4e\x46\x8b\x13\xc5\x78\x86\x36\x36\x52\x2e\xbf\x78\x75\xb9\x46\xdf\xa2\xcd\xea\x72\x3d\x45\x8f\x6a\x9c\xb7\x97\x8b\x56\x1a\xd5\x3b\xfe\x6a\xa1\x8f\x60\x12\xad\xf5\xae\x57\x17\xeb\x05\x3a\x39\x32\xd4\xe4\xf4\x37\x3f\x67\x82\x8c\xb9\xa1\x19\x23\x95\x36\x0f\x31\x5d\x8a\x66\xa8\x26\xd9\x8d\x6f\x46\x94\xeb\xe3\x45\x8f\x89\x67\x55\x43\x2c\xeb\xde\xe9\xb3\x62\xad\x5f\x4f\xd0\x64\x8a\xbe\x59\x22\x0f\x10\xc9\x6e\x56\x14\xbd\x45\x97\x6b\x0d\xf6\x39\x44\x04\x7b\xdc\xe0\xac\xb6\xbb\x68\xcb\x61\x33\x5b\x70\xce\xc3\x6e\xd1\x10\x96\x45\x8b\xe5\x8a\xe3\x7e\x86\x83\x5e\xdf\x70\xbd\xf6\xa0\xd5\x57\x45\x63\x99\xc4\x78\x03\xac\x94\xdd\x56\x37\x6b\x5f\xcf\xfe\xe9\x9b\x2c\x70\x9f\xbc\xac\x36\x39\xe5\x18\x09\xae\x36\x09\x7c\x76\x86\x80\xcb\x6d\x02\x9f\xdd\x3b\x41\x77\x22\xff\x7b\x4c\x84\xf0\x0c\x83\x9e\x4f\x45\x78\xdb\x4a\x6e\xe5\xfc\xd5\xb6\xa9\x2a\x92\x33\xff\xdb\xeb\x0c\xd7\xec\x7a\x5f\xa4\xf4\x86\x92\x14\x2d\x51\x14\x69\x30\xd2\xfd\xb3\x7a\x8a\xb7\xbd\x3d\x33\xba\xa9\x70\xc5\x8d\x75\xc7\x01\x63\x17\x4c\xd0\x6a\xdd\x4d\x1a\x45\xff\x20\x79\x45\xb4\xb7\x27\x1b\x95\x77\xb8\xce\x36\xe2\x83\xe1\x11\xe9\x6b\xce\xaa\xa3\x25\x01\x59\xb1\xc5\xd9\x27\xc1\xc8\xb9\xe4\xd8\x7f\x7d\xfa\xf8\x0b\xb7\x7b\x34\xdf\xd1\x9b\x63\xcc\xdf\x4e\xb5\xc5\x45\x5b\xcc\xb6\xb7\x28\x26\x53\xf4\x68\xef\x92\x59\x81\xd3\xf1\x83\x73\xa1\x75\x08\xf0\xc9\xa8\x4e\x58\x89\xab\x9a\x78\xba\x05\xd5\x36\x44\x2f\xa7\x35\x96\xdd\x1c\x19\xe5\x28\x13\xf8\xec\x96\x46\xca\x49\xa2\xbe\x38\x2d\xe6\xc2\x24\xfe\xd7\x5a\x2f\x21\x3d\x89\xfa\xe2\xb4\x38\xf8\x7c\xaf\xbb\x5e\x52\x3c\x12\xf5\xc5\x69\xb1\xf1\x79\x5f\x6b\x9b\x33\x3e\x90\x04\x3e\x35\x4c\x05\xe6\x1d\x0b\x9c\x5a\xfa\xf8\x86\x6b\x24\x84\x66\x73\x1e\x78\x99\x4a\x89\x3a\xad\xbc\xfa\xf5\xfd\xfb\x3e\x5d\x30\x17\x3f\xe2\x56\x22\x4a\x1c\x81\x70\xfc\xc8\x77\x98\x11\xf0\x27\xc1\xef\xe3\x2f\x68\xbd\xfd\xa5\xd9\x6f\x48\xc5\x9f\xae\x2a\xbc\xbd\xd3\x1e\x29\xcb\x00\xfc\x86\x66\x24\xd2\xb5\x8f\x8f\xc9\x57\xdd\x37\xa6\x33\x68\x99\x61\x9a\xdb\xdd\x75\xfa\x38\x10\x96\x9e\xa8\x0f\xa8\xa5\x83\x9b\xeb\x68\xed\x80\x68\xbd\x4e\xdd\xd7\xd6\x42\x8c\xe5\x95\x80\x7f\x75\xee\xb4\xc3\xbc\x34\x5f\x5c\x98\xb5\x97\x2f\x20\x04\xe3\xd9\xf2\x75\x64\x46\x8d\xf2\x55\x99\x62\x7b\x85\x65\x8a\x99\xb1\x2b\xa4\x98\x61\x3b\xac\x68\x9d\x7b\xa4\xbc\x0e\x19\x2e\x73\x9d\x75\xb2\x01\xed\xfe\x3b\x97\x66\x04\xc2\x66\xd4\x7a\x6e\xb5\x70\x8f\xf9\x40\x33\xc0\x00\xed\x2b\xb1\x1c\x6b\x7d\x43\x51\x86\x44\xd1\x51\x15\x05\xcb\xf1\x3e\xb8\x8b\x01\x0c\xdf\xf6\x38\x60\xd4\x21\x52\x3e\x90\xb6\x2b\xcc\x33\x92\xef\xd8\x2d\xf7\x82\x1c\x77\xb5\x92\xb4\x6a\xe0\xab\x8b\xf5\xea\x72\x6d\x93\x86\xba\x0d\x42\x25\x21\x16\x46\x28\xc2\x23\x83\x21\x62\xd5\xa4\xe2\xa9\x49\x70\x05\xa1\x2d\xcc\x24\x14\x90\xf4\x11\x04\x8c\xad\x5a\xb6\x3a\xe1\x40\x19\xa2\x0b\xc6\x6e\x69\xe2\x0c\xf2\x13\x61\x33\xb4\x2c\xca\xd8\xda\x6b\x35\x10\xbe\x59\xc4\x7d\x6b\x9b\x16\xf7\xb9\x4e\xd2\x01\x67\x0d\x19\xcb\xaf\x2e\x03\xe5\x5b\xfa\x2a\x3c\x09\xd1\xa9\xe5\x15\x28\xeb\x7a\x15\x90\x15\x1e\x60\xf0\xe8\xca\xc3\x74\x87\x19\x4d\x7d\x1b\xaf\x20\x16\x81\x89\xe8\x62\x1d\xe0\x8a\xc6\x0b\xbc\xa9\xed\xd8\xc1\xe6\x04\x9d\x01\x23\x64\xbc\x53\x93\x8c\x6c\x19\x49\x17\x5f\xba\x8a\xdc\x8d\x75\x45\xdf\xca\xc7\x71\x44\xc3\x2a\xc2\xff\x14\x5d\x2d\x8f\x8b\x82\xb5\x6c\x5e\xb8\xc1\x0c\x24\x29\x54\xa7\x50\x34\x03\x31\xa6\x02\xd2\xd6\x26\x14\xc3\x6c\x2a\x82\xef\x86\x82\x97\x4e\x18\x14\xe6\x15\x35\x17\x7b\xcc\x52\x3b\x71\x16\x0f\xaf\xd7\x41\x0f\x14\x3d\x51\x47\xa4\xff\x14\x34\x27\x59\xad\x85\x21\xc8\x95\x82\x21\x83\xc2\xf1\x5f\x73\x00\x83\x0a\x5f\x68\xac\x77\xd8\xde\xd2\x2c\x1d\xa4\x5b\x80\xf5\x1a\x43\x21\x56\x1d\xbd\xe6\x46\xd6\x85\x4b\x9e\x1d\x06\x04\xcb\x84\x97\xc1\x2d\x77\x29\x4f\xb3\xa0\xd2\xeb\x02\x39\xa0\xf7\x26\x92\x9a\x1d\x33\xf2\x74\x34\x97\x36\x1a\x91\xa1\x7f\x3c\x99\x32\xc2\x8e\x25\x47\x1e\xa5\xb4\x1a\xb7\x8f\x2d\x7d\x94\xc8\x46\x7b\xb5\x15\x72\xf0\x57\x7c\xd6\x0c\x74\x31\x23\x04\x72\x0b\xd6\x80\xbe\xac\x0f\x80\xca\xc4\x0f\xc4\x22\x34\x6f\xc8\xc2\x12\x74\x95\x6c\xb0\xcd\x06\xef\xcc\xd9\xbb\xf6\x98\x14\xd1\xe6\xdf\x78\x4d\x79\xd0\xb3\x27\x2a\xca\x69\xd3\x22\x8b\xbe\x4e\x4d\x4e\x7f\xeb\xba\x70\x85\x5d\xd8\x7b\xa9\xd0\xee\x16\x06\x96\x7e\x06\x6c\x5c\x3b\xb6\xbb\xd5\xa1\x5e\x51\x27\xcc\xd2\x54\xcb\xbd\x89\x22\xcb\xe1\x6a\xdb\x02\x5e\x57\x45\x98\xb0\x44\x8f\x42\xc3\x93\x16\xdb\xc9\xd1\x4c\x7d\x66\x02\x7a\xc6\x9f\x5b\x57\x74\x26\xe4\x6e\xdd\x9b\xab\x11\x9e\x63\x22\xff\x77\x42\xad\x86\xed\x08\xd0\xe2\x46\xe9\x12\x25\xed\x37\x2d\xcf\x53\x72\x5c\xdd\xb3\x38\x65\xe3\x9f\xdd\x3b\xbc\xa9\x13\xfe\xa1\xc7\xaf\x35\x4b\xe0\xd3\xcd\x02\x75\x99\x19\x7f\xc0\xc9\x7b\x91\x1c\xd2\x74\x8f\x91\x04\x86\xec\x4a\xe7\x25\xe1\x34\x7d\x7f\x20\x39\xfb\xd0\x81\xb6\xa8\xc8\x61\x06\x0f\xfa\x4a\x28\x94\x2b\x72\x58\x8b\xe5\x00\x88\x56\x48\x5a\xc4\x3b\xc2\xae\x2b\xf2\x5b\x43\x4c\x83\x5e\x62\x76\x3b\x43\xf4\xa6\x0d\xb9\xd1\x16\x67\xd9\x06\x6f\xef\x6c\x09\x7a\xb8\xe5\xc4\xe4\xe4\x1e\xfd\xf7\xcf\x1f\x7e\x64\xac\xfc\x55\x60\xd3\xed\xf0\xc3\x6d\x35\x2f\xf2\x8a\xe0\xf4\x58\x33\xcc\xc8\xf6\x16\xe7\xbb\xa0\xf3\x8c\xa4\x32\xf3\x5e\xd0\xe7\x13\x83\xd0\x60\x89\xfe\x3d\xb4\x13\x73\x50\x8e\xb9\xa9\x39\xd8\x5f\x2e\x2e\xd0\x9f\xff\xec\xa5\x58\xff\x53\xed\xb1\x96\xb4\x11\x63\xd6\x65\x91\xd7\xe4\x8a\x3c\xb0\xe9\x0c\x88\xdf\x11\xf6\xab\x7c\xfb\x23\xc1\x29\xa9\xe2\xe8\x03\xae\xd9\xdb\x9f\x25\x7b\xa2\xe9\x74\x7c\x52\xf2\x64\x31\xa6\x24\x79\x1c\xfd\xe3\xfd\x55\x34\x43\x82\xed\xac\x6a\x88\xe5\x83\x77\x2b\x01\x1e\x94\xb3\x6f\x02\x03\x38\x91\xc0\x7b\x45\xe3\x4f\x37\x2d\x85\x6f\x3f\xd1\x7c\xcb\x63\xb3\x0e\x93\x57\x1d\x05\xa2\xbc\xdd\x46\x4f\x9d\xa8\x94\x45\xdd\x23\x2b\xc5\xe6\xf3\xff\x59\x21\xf9\xd2\xc5\xff\xe7\xc7\x4f\xc1\xd5\xf7\xaf\xec\x0f\x45\xce\x48\xce\xde\x5e\x1d\x4b\x08\xb8\x71\x59\x66\x74\x8b\x39\x9b\xce\x3f\xd7\x45\x1e\x39\x18\xf2\x34\xb6\xb2\xa6\xc5\xe6\xf3\xd4\x5d\x65\x61\x46\xaf\xa5\x3b\xe0\xe5\xbd\x66\x33\xe2\x08\x97\xf4\x1c\xf6\xaf\x73\x99\x4b\x8c\x66\xfa\xee\xe9\x4f\x30\x76\x78\xc1\xdc\xb7\x12\xe9\x59\xe0\x8a\xb0\x55\x44\xaa\xaa\xa8\xea\x68\xcd\x17\x2e\x6f\xb2\xcc\xb7\x5a\xee\xa0\xdc\x87\xe3\xbd\x79\x80\x6f\x7b\xf9\xfe\x1e\x4e\xde\x5a\x7d\xf5\x76\x3e\x50\x72\x3f\xdf\x63\x9a\xcf\x05\xd3\xec\xa8\x13\x75\x9e\x52\x97\x76\x9c\x8f\x09\x86\xb4\x41\xb4\x9e\x78\x53\xc7\xda\x84\x06\xa5\x8e\xff\x9d\x9f\xab\xd4\x8a\x2c\x1f\x41\x0c\xef\x82\x93\x81\x61\xfc\x93\xf1\x9c\x32\x2d\x5c\xa9\x91\xea\x35\x52\x6e\xd4\x5e\x67\x4a\x8c\x37\x85\xfc\xda\x12\xd3\x6e\xd1\xa3\x25\x26\x70\xb0\x32\x2c\x31\x72\x21\x7a\x84\x46\x41\xaa\xfa\x9f\x1e\xd0\x2e\x5a\x6d\xb7\xfc\xd6\x85\x08\x1e\xa6\x79\x40\x57\x74\xed\x43\x1f\x34\x63\x66\x1a\xa1\x67\x5e\x1e\x29\xe9\x7c\xdf\x71\x62\x22\xe1\x4d\x31\xf1\x9f\x0c\xbc\x92\x98\x68\x4a\x28\x67\xd7\xaf\x87\x43\x74\x06\xe5\xa4\x5f\xcb\xca\x8a\x1c\x9e\xaa\x5c\xdf\x63\x80\x5d\xf2\xbe\x7c\xa7\x88\x3c\x1b\x7b\x86\x8f\xd7\x25\x6e\xea\xde\x7c\x66\x2d\x36\x58\x24\xaa\xca\xb4\x53\x6f\x57\x29\x66\x28\x02\x68\x48\x05\xb3\xa2\x2c\xb9\x87\x64\x86\x18\x82\x2a\xb4\x54\x68\x97\xe0\xf3\x1f\x23\xf4\x3d\x8a\x80\x94\x08\x25\xf2\xd5\x62\xf4\x1c\xa3\x33\xf1\xc5\x3f\xcd\x9c\x3c\x04\x63\xa1\x21\xcc\xbc\x6f\x0f\xf7\x74\xb4\x4d\x45\x5f\xcd\xfd\xe9\xf3\x1e\xba\x9d\x38\xfa\x8a\x4e\x84\x21\xbd\x8f\x91\x60\x57\x94\xc8\x33\x0d\xeb\x04\x20\xe2\x91\x56\x94\x58\x1a\xa5\x42\x30\x3b\xcf\x82\xa2\xa6\xa2\x51\x82\x9a\x8a\x06\x74\xc4\xe3\xbe\x1c\x8a\xac\x31\xf3\xf2\x79\xb3\xd7\xd7\x43\xf7\x62\xe3\xe8\xdc\xdc\x86\x1e\x23\xd1\x3f\x4a\x50\xde\xec\x4f\x53\x1b\x3b\xcd\x69\x50\x84\xd2\x62\xdb\xec\x49\xce\xe6\x9b\x22\x3d\xce\xed\x80\x2d\x9e\x6c\x33\xba\xbd\x9b\x68\x16\xca\xc9\x60\xb4\x2e\x05\xc9\x9b\xf9\x2d\x4d\xc9\x75\xdd\x6c\x8c\x7c\x96\xa5\x44\x1c\x10\x2d\xbb\x91\x77\x84\xbd\xcf\x08\xff\xfa\xf7\xe3\x4f\x69\x1c\xf1\x76\x7d\x11\x01\x71\x07\x54\xff\xfd\xf8\x43\x86\xeb\xfa\x17\xee\x8d\x44\x4d\x19\x4d\x57\x17\xeb\x67\x51\x2e\xbd\x9c\xce\x21\xba\xa5\x69\x4a\xf2\xd8\x5b\xfb\x62\xdb\x53\xc7\xd3\x08\x95\xc0\xb8\xde\x90\xeb\xc1\x0d\xa5\x38\x0d\x12\x9d\x1d\x55\x01\x88\x72\xdc\x5e\x90\x1e\x57\xc9\x00\xa9\x6f\x8b\xfb\x10\x00\xac\x87\x1f\x07\xe1\x13\x2b\xff\x59\x15\x25\xde\x61\x21\x6b\x7e\x39\xe8\x5d\x53\xee\x3c\x3c\x7f\x55\x8d\x79\x7c\x21\xbb\x80\xe5\x7f\x28\x2f\x84\x32\xbc\x88\x84\x4b\xfd\x4c\x49\x2e\x34\x34\x20\xe5\x1d\x30\x9f\xb8\xad\xcc\x68\x40\xd4\xfb\x4d\x01\x72\x84\x7b\x34\x97\x60\x33\x6f\x36\x43\xc6\x43\x82\xe8\xf6\x43\xbe\x0a\xb2\xb8\x22\x59\x81\xd3\xe7\x33\x39\x2b\xc4\xee\x33\x17\x88\x42\x13\x18\x22\x43\x88\xe3\x97\xcb\xfd\xa0\x99\x18\xab\x18\xb6\xdc\xdb\xab\xa1\xfc\xfc\xbe\xe5\x50\x30\xfa\x7a\xb4\xf1\x41\x88\x13\xe0\xf4\x7d\x09\x1f\xe4\xd6\x38\xe7\x88\x9e\xad\x96\xc3\x64\x72\x37\xef\x45\xc8\x6c\x3d\xd9\xd7\x23\x16\x5c\xc1\x97\x20\x96\x23\x7a\x32\x99\xa6\xdc\x14\x59\x46\xc3\x79\x1a\x6b\x3c\x2d\xb3\xe3\x91\x57\x1b\x0a\x22\xf9\x61\x38\x19\xde\x70\xc0\x3f\x71\x88\x3f\xd5\x84\x5d\xd1\x3d\x29\x1a\x16\x4b\xf2\x66\xe8\xf2\xe2\xe2\xc2\xc8\x36\x02\xa8\x6c\xf6\x05\x8a\x35\xc3\x55\xd0\xd1\xe2\xa6\xb8\x55\x13\x2d\xf7\xf7\xcd\x72\x89\x26\xdc\x6e\xd0\x7c\x37\x71\xec\x77\x4e\x87\x0f\x13\x5b\xac\xee\xca\xbe\xfb\xf8\xb3\x74\x97\x3f\x14\x38\x25\xe9\x64\x06\x28\x7d\x87\x8d\xf0\xdf\x39\xa6\xb0\x51\x26\xce\x1b\xfd\x08\xa2\x5d\xa9\x44\x7f\x70\x21\x60\x95\x12\xf3\xd1\x81\x6a\xab\xee\xcc\xe7\x0e\x8e\x6b\x77\x02\x9f\x33\x43\x0f\x84\x2a\x25\xda\xf7\xae\x9d\x4b\x6f\x02\x9f\x66\x1f\x01\xdd\xbd\x13\x0e\x75\x22\xff\xeb\x75\xf5\x18\x6a\x6c\xf9\x3f\x5f\xa1\x5e\x6b\x81\xbd\xc5\xb3\x9d\x1c\x3a\x4b\x15\x75\xee\x7c\x30\x96\x25\x7d\x96\x56\xe5\x31\xb5\xb5\x25\x7d\x7b\x0d\xa4\x81\x64\xdc\x00\x76\x01\x0e\x98\x2b\x92\xf3\xef\x50\x74\xb1\x74\x43\xe4\x95\x8a\x34\x44\x49\x94\xb2\x40\x43\x41\xc6\xd7\x25\xde\xc3\x5b\x88\x4a\x43\xac\xb5\x96\x46\xa0\x8d\x21\x69\xfe\x53\xce\x62\x76\x4b\x6b\xc1\x90\xa9\xc7\xf8\xca\xd8\xd6\x3d\x22\xfb\xdf\xaf\xf3\xd3\x58\x5b\x3e\xbe\xd9\xbf\xec\xf2\xc1\x31\xef\x3c\xa5\xb5\x4c\x35\x44\x9b\xac\xd8\xde\x45\xce\x89\x2f\xf7\x44\x5e\x79\xe4\xbc\xc8\xd5\x49\xfd\x49\x1f\x37\x25\x79\x68\x64\x69\x09\x87\x07\xb6\x47\x0b\x0d\xe7\x96\x0a\x7e\xe9\x44\x9d\xd2\x42\x18\x26\x43\xcb\x1e\xdd\x49\x09\xc3\x34\x03\x9d\x31\xfb\xe5\xe4\x1e\xba\xb6\x04\x6c\x2b\x82\x19\x79\x27\x1f\xff\xb3\xc2\x3b\xfe\xdf\xae\x1a\xcb\xe8\x18\x8d\x65\x50\x61\x09\x8a\xca\xc8\x03\x93\xe2\x69\x16\x2c\xc8\x09\xaa\x72\xcc\xf5\x18\xbc\x58\x5e\xbd\x1b\x87\x58\x5d\x89\xeb\x30\x37\xd9\x9c\xe6\x39\xa9\x7e\xbc\xfa\xf9\x83\xaf\x6a\x40\x96\x69\x7a\xe2\x75\x4f\x9c\xa5\x6e\xd3\x09\xfa\xd1\xef\xbf\x23\xf3\xfe\xa1\xf7\xb8\xa4\xad\xf6\xe8\x09\x91\x32\xea\xae\x8b\x64\x47\x1c\x65\x34\xb2\xbc\x9d\x8c\x5a\xbc\x10\x17\xe3\xa2\x04\x45\xe8\xcc\xc7\x18\xf7\xc6\x28\x08\xc3\x1c\x97\x25\xc9\xd3\x1f\xa0\x3c\x29\xa3\xde\x73\x57\x0b\x0a\xfa\x99\x86\xd1\xbd\xa4\x72\x5b\xdc\x27\xf0\xd9\xed\xaa\xdc\x04\x24\xf0\x69\xbc\x4b\x49\x9e\xc8\xff\xb6\x77\x60\x16\x4e\xe8\x65\x0b\x6d\x88\x13\xbc\xe3\xf6\x25\x96\x2e\x83\x85\xfc\xea\x66\x6e\xc4\xb0\xaf\x60\xe3\xc4\xa8\x2f\x67\xe0\xa0\xbe\xce\x4c\x87\xf1\x0f\x3b\x83\xaa\x6e\x28\x66\xb5\x53\xee\x25\x4b\xaf\xb2\x7a\xf5\x6f\xa1\x42\xb0\x99\x2b\xc9\x63\xcc\x9a\xd9\xcd\xec\x13\xe0\x8b\xe6\x73\xd8\xa5\x76\xe3\x4d\x0c\x55\xd7\xa6\x3d\x17\x4b\x61\x46\xd0\xe6\x5c\x0a\x07\x9b\xb0\xc7\x77\xdc\x2d\xae\xd9\x35\x65\x64\x1f\x2b\xc8\x19\xe7\xcf\x85\xf8\xf7\x97\xb5\x28\xb4\x72\x6d\xc4\x88\x30\x30\x54\x92\xf0\x8d\x52\x33\x75\x9d\xbf\x37\x71\x8a\xb4\xcc\x82\xde\xc1\x7b\x30\x88\x5a\xb1\x1c\x73\x4c\x0c\xa9\x73\xee\x99\xa1\x25\x02\x37\x6d\x47\xd8\xdf\x18\xab\xe8\xa6\x61\x24\x8e\xee\xc8\x31\xb2\xb3\xf3\x6a\x59\x2a\xea\xef\xd3\x54\x8e\x41\x55\xd3\x16\xc2\x27\xab\x0a\xc7\x9d\x7d\xf3\xb9\xca\x52\x6c\xff\x5c\x47\xe4\x65\x51\x5f\xc6\x0d\xb9\x99\x04\x38\xca\x19\x3c\x13\x9d\x89\x4b\x89\xd3\x67\x1a\xfe\x27\xe8\xc6\xd0\x0e\x01\x47\x02\x86\x24\x07\x7e\x77\x40\xab\x1b\x74\x2c\xcb\xf8\x2d\x52\xc4\x2a\xa2\x18\x4d\xd7\xc6\x8c\xce\x6b\x43\x12\xb6\xdc\xcf\x88\xe4\xb0\xd3\x1e\x40\x2e\x66\xa1\xe2\xe5\xbe\x7e\x5c\xd4\x66\xe2\x87\x11\xe4\xdd\x17\xab\x7c\x4a\xd6\xc8\x2e\xe5\xcd\x14\x37\x50\x90\xb3\xf8\xb6\x2e\x71\x8e\x80\xde\x25\xab\xf0\xf6\xee\xbb\xe8\xcc\x25\xc7\xb8\x77\x33\x3d\x8b\xbe\x3d\xe7\xdd\xbe\x8b\xce\xbc\x42\x65\x22\xe5\x2e\x4d\x00\xa9\x70\xed\x3a\x74\x0b\xc7\x31\xf2\xf4\x6a\x3d\x22\xf3\x42\x72\xdb\xac\xff\xae\x82\xd7\x0a\xc1\xd4\xcf\xac\xb9\x0b\x77\xd0\x4f\xa7\xc2\x16\x22\xf4\x34\x86\x6c\x58\x25\xa8\x03\xd7\x1b\x5d\x97\xaa\x05\x1d\x4f\xbb\x2c\x43\xf0\x13\xff\x01\xea\x90\x87\x17\xcd\x5d\x39\x51\xc1\x7c\x5d\x93\x12\x57\x98\x15\xd5\x77\xe7\xa3\xa6\xef\x25\x51\xe0\x1a\x4b\xa1\x13\xc0\x9a\x12\x2d\x2e\x64\xf9\x45\xda\x1e\x98\x5b\x45\xff\xb0\x70\x07\x2c\x2c\x7c\x7e\x29\xe1\x23\x07\x84\x44\x10\xf5\x0c\x7c\xbd\xa2\xa7\x4b\x73\x0f\x83\xfc\xda\xed\xb7\x2b\x3e\x9b\x9c\x51\xc3\xd5\x80\xef\x0b\xdb\xd9\x53\xbe\xc9\x1f\xea\x9e\x8b\x03\x86\x90\x83\x3e\x94\x49\xf2\x5c\xba\xf3\xfd\xa4\xce\x53\xc3\x69\xd5\x6f\xdb\x1b\x40\x0f\x24\x9f\x4c\x74\xdb\xf9\x1e\x3f\x70\x32\xba\xbc\xd9\x2a\xda\xe3\x07\xbb\x48\x0b\xf2\x44\x3a\x0c\xe7\xbf\xbf\x10\x6a\xdb\x1f\x70\xf4\x8a\x54\xa0\xbf\xe6\xcd\xbb\x42\x75\x32\x77\xce\x14\x33\x0c\x05\xdf\x6d\xc5\xc1\xa3\x20\x36\x81\xe2\x8d\x19\x82\xe9\x25\xe8\xf2\xe2\xe2\x74\xea\xd2\xfe\xe7\xe7\xe8\xea\xe3\xbb\x8f\x09\xda\x17\x07\x82\x58\xa1\x7e\x7c\x0a\x15\x95\xf8\xd9\x29\x63\xdf\x33\xee\xa0\x0b\x59\xb1\x59\x21\xe9\x08\x5d\x5c\x97\x9d\x06\x54\xcc\xd3\xc5\xbd\xa5\x0f\x17\x3a\x7d\xea\xa6\x62\xc9\xeb\xb6\x78\x23\x7c\x28\xd9\x81\x19\x07\x93\xdd\xeb\xf9\xf6\x96\x6c\xef\xa0\xc4\x8a\x0f\xe8\xca\x82\xbf\xd7\xb3\x52\x9d\xdd\x32\x8e\x66\x9f\x62\xb9\x4b\x97\xf2\xa2\x25\xfd\x8b\x2f\x66\x30\x6a\x8d\x88\xc3\x7a\xbb\x8e\x04\x3f\x8c\xe0\x7d\x07\xa5\xb3\xbe\x15\xc8\x1b\xfa\x20\xa2\x4a\x10\xca\xaa\x05\xe8\xba\xcd\x55\x84\x61\x33\xc0\x52\x64\xad\xc7\x1f\xb9\x2c\x40\x15\x5a\x22\x5f\xfe\xfa\x6b\xad\x8e\x0b\xf1\xff\x69\xf2\xb4\x3b\xe1\xff\xfa\x59\xf2\x31\x03\xbf\x46\x92\x5c\x8e\x3b\x26\x85\xf4\xa2\x9e\x88\xe3\x71\xc8\xb2\x91\x60\x42\xf0\xba\x6e\x36\xcf\x66\xaf\xa7\xe6\x64\x68\x61\x8d\x75\xfd\x0a\x83\xf7\x2c\x6e\xdf\xe8\x43\x0b\xdc\x0e\xfe\x72\x49\x42\xb8\x59\x3f\x50\x1b\x38\x54\x0d\x68\x9d\x51\xe0\x0d\xc9\x84\x27\x6d\xd4\xbf\x40\xc6\xea\x7b\x24\x52\x16\x28\x41\xbc\xb7\x19\x80\x37\xa5\x91\x4a\xff\x66\x29\x70\xd9\xa6\xc8\x02\x93\x50\x8e\x21\x09\x8b\x39\x5f\x82\xa4\xfd\x66\x8a\xbb\x68\x53\xdf\x6c\xb1\x6f\x5b\xe5\xf7\x27\x3a\xe2\x5a\x09\x8f\x57\x35\xfa\x97\xcb\xba\x4f\xdb\x9e\x11\x8b\x2a\xea\x75\x57\x1e\xed\x78\x6f\xc3\xe5\x42\x23\xaa\x6e\xf4\x1c\x53\x5d\x71\xb7\x3d\x3a\xc7\x75\x4d\x58\x7d\x0e\xa7\xfe\xf3\xfa\xb0\x1b\x8a\xb2\x5e\x9f\x92\x0c\x1f\x6d\x42\x0c\xe9\xec\x6e\xfd\x3c\x25\x58\x09\xb1\xbe\x22\x25\xc1\xcc\x0d\x1d\x24\x8a\x9e\x1a\x38\xe8\xe7\xce\x06\xd4\xba\x28\xf1\x96\xb2\xe3\xf2\x72\x7e\x31\xc0\xcf\x97\x19\xe7\x62\xfe\x1f\x3e\x76\x05\x27\x8d\xf3\xb4\xd8\x3f\x63\xd2\xa2\xdf\xeb\x4f\x7a\xd4\x38\x9e\x49\x3f\xe1\xee\xf0\xc9\xd2\x6c\x75\x6f\x2a\x74\x7b\xb7\x5f\xb3\xa5\x23\xea\x32\xdb\x94\xc0\x09\x68\xfa\x04\xd1\x1c\xd9\xbf\x7b\xa3\xc6\xe9\xe8\x68\x1d\x52\xe1\xb1\xd6\x45\xbe\xbb\x96\xad\xd1\x1a\xfd\xab\x5d\x6e\xe5\xea\x87\x04\x76\x41\xec\x4b\x2a\xd6\x48\x46\x73\xdf\x50\x92\x23\x39\xb9\x47\xef\x3c\x89\x78\x70\x53\x05\xed\x43\x06\x4e\x93\x0a\x74\x06\x91\x03\x64\x14\xae\x28\x5c\xa0\x7b\x6b\x52\x1c\x88\xbc\x75\x1c\xda\x9c\xd4\xab\xf3\xd0\x2c\xf6\x50\x7c\xe4\x81\xff\xeb\xc5\xd4\x01\xae\x09\xb7\x56\x0a\xe6\x5f\xd0\x5f\x2f\x3c\xdc\x15\xdb\x27\xc7\x7b\x86\x26\xc9\x04\x9d\xa1\x38\xba\x88\xd0\x19\xef\x3d\x9d\xd7\x19\xdd\x92\xf8\xed\x5f\x5c\xe4\x7c\x53\xac\xfd\x86\xcd\x54\x10\x25\x06\x9e\xd9\x50\xf3\x55\x77\x66\x06\xc8\x43\x27\x54\xd0\xb8\xa2\xeb\x51\xdb\xb7\xfa\xf3\x76\x72\x36\x73\xff\x42\xd9\xbf\xb1\x6c\x6a\xae\xa9\xb0\xce\x2e\xac\x4e\xc5\x82\xca\x3a\xca\x0b\x0f\xd6\x79\xfb\x5c\xce\xa0\x07\xd6\x57\xc1\x1d\x30\x47\xa1\x54\xa0\xed\xac\x9f\x9c\xdf\x16\x98\x43\x1d\x1d\x47\xff\x3f\x01\x00\x00\xff\xff\xb0\xd5\xec\x58\xcc\x5c\x00\x00")

func assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppJs,
		"assets/app.js",
	)
}

func assetsAppJs() (*asset, error) {
	bytes, err := assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.js", size: 23756, mode: os.FileMode(436), modTime: time.Unix(1490625097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsNextSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\xf1\x33\xbd\x5a\x33\x49\x55\xb0\x24\x1e\x7a\xef\x43\x14\xb4\x49\xa8\x5d\xc5\x84\x44\xf6\xe9\x17\x57\x61\x17\x96\x61\x06\xfe\xe1\xe3\xd7\x21\x59\x6c\xff\xd3\x25\x18\x72\x31\x2e\x9f\x42\xe4\x9c\xab\xfc\x51\xcd\xab\x15\x8a\x99\x45\x48\x96\x90\xfd\x10\x9d\x21\xc5\x4c\x70\xa3\xb7\x2e\x9e\x21\xf9\x31\x7f\xcd\x9b\x21\x06\x43\xf1\x7d\xa9\x2f\xb4\x45\x88\xeb\xfc\x37\x1a\x7a\xab\x79\x1f\x3a\x1f\xef\x67\x95\x54\x84\x5f\x3f\x4d\x0f\xd0\x17\x00\xa0\x97\x9f\xe8\x30\x18\xfa\x46\xdd\x94\x2d\x43\xca\xa6\x94\xcc\x7b\x92\x35\xe3\x4a\xe2\x05\x76\x07\x6c\x0f\xd8\x3d\x41\x2d\xec\x7e\x42\xb2\x7d\x71\x0b\x00\x00\xff\xff\x22\xf8\x97\x68\xec\x00\x00\x00")

func assetsNextSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsNextSvg,
		"assets/next.svg",
	)
}

func assetsNextSvg() (*asset, error) {
	bytes, err := assetsNextSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/next.svg", size: 236, mode: os.FileMode(436), modTime: time.Unix(1490506165, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xe1\x4a\x03\x31\x10\x84\xff\xdf\x53\x0c\xeb\xdf\xda\xec\xc6\xd6\x2b\x72\x39\xd0\xff\x3e\x84\xd0\x73\x73\x78\xde\x95\x26\x24\xc5\xa7\x97\x94\xd4\x62\x95\x90\x5d\x32\x7c\x99\x99\x2e\x24\xc5\xe9\x73\x9a\x83\x23\x1f\xe3\xe1\xc9\x98\x9c\xf3\x3a\x3f\xac\x97\xa3\x1a\xcb\xcc\x26\x24\x25\xe4\x71\x1f\xbd\x23\xcb\x4c\xf0\xc3\xa8\x3e\xd6\x47\x1a\x87\xfc\xb2\x9c\x1c\x31\x18\x96\xcf\x97\xfa\xa6\x53\x84\x78\x5c\x3e\x06\x47\x77\x1b\x2e\x87\xaa\x70\x5f\xad\xc4\x12\xde\xc7\x69\xba\x02\x7d\x03\x00\xdd\xe1\x2d\x7a\xec\x1d\xbd\xa2\xdd\xae\x1e\x19\xbb\xcb\x94\x0d\x17\xa9\xac\x2f\x32\x7f\x68\xb1\x67\x50\xe4\x67\x15\xb2\xa8\xbf\x7f\xe8\x4d\x91\xdd\xa5\xc7\xbc\xcc\x43\x2d\x71\x63\x5d\x3c\x98\xf1\x5c\xe2\xdb\x2d\x18\xb2\x12\x48\xfb\x9f\x5a\xd1\x6b\x9c\xd1\xbe\xa9\x23\x24\xed\x9b\xef\x00\x00\x00\xff\xff\x0a\xc1\xa7\x81\x72\x01\x00\x00")

func assetsPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPauseSvg,
		"assets/pause.svg",
	)
}

func assetsPauseSvg() (*asset, error) {
	bytes, err := assetsPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pause.svg", size: 370, mode: os.FileMode(436), modTime: time.Unix(1490523630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xd1\x4a\xc3\x40\x10\x45\xdf\xf3\x15\x97\xf1\x35\x76\xef\xae\x89\x11\xc9\x06\xf4\xdd\x8f\x10\x1a\x67\x83\x31\x29\xdd\x25\x5b\xfc\x7a\x69\x59\x29\x94\x32\xcc\xc0\xbd\x1c\xce\xf4\x71\x53\x9c\x7e\xe6\x25\x7a\x09\x29\x1d\x5e\x8d\xc9\x39\xef\xf2\xd3\x6e\x3d\xaa\x71\x24\x4d\xdc\x54\x90\xa7\x7d\x0a\x5e\x1c\x29\x08\xe3\xa4\x21\x95\xb0\x4d\x63\x7e\x5f\x4f\x5e\x08\xc2\xf1\xb2\x32\x54\xbd\x22\xa6\xe3\xfa\x3d\x7a\x79\x68\x78\x1e\x29\xc5\x63\x51\x59\x27\xf8\x9a\xe6\xf9\x0a\x0c\x15\x00\xf4\x87\xcf\x14\xb0\xf7\xf2\x81\x8e\xf5\x33\x61\x1b\xd6\x96\x3c\x27\xdb\x10\xbf\x62\x0a\xa8\x37\xc6\x97\x7f\xe1\xb2\x2e\x63\xb1\xdd\x18\x5d\x7b\x51\xbd\xa1\x6b\xeb\xae\x05\x61\x6b\x0b\xdb\xdd\x6b\x0b\x7a\x7d\x67\x74\xa8\xca\x89\x9b\x0e\xd5\x5f\x00\x00\x00\xff\xff\x74\x48\x45\x6f\x3b\x01\x00\x00")

func assetsPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPlaySvg,
		"assets/play.svg",
	)
}

func assetsPlaySvg() (*asset, error) {
	bytes, err := assetsPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/play.svg", size: 315, mode: os.FileMode(436), modTime: time.Unix(1490506353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrevSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\x31\x4c\xaf\xd6\xfc\x89\x5a\x4a\x49\x3c\xf4\xde\x87\x28\x68\x93\x50\x77\x15\x13\x12\xd9\xa7\x5f\x94\xc0\x2e\x2c\xc3\x0c\xfc\xc3\xc7\xaf\x43\xb2\xb4\x5f\xe6\x6b\x30\xec\x62\x5c\xbf\x84\xc8\x39\x37\xb9\x6d\x96\xcd\x0a\x05\x40\x84\x64\x99\xb2\x1f\xa3\x33\xac\x00\x26\x37\x79\xeb\x62\x09\xc9\x4f\xf9\x7b\xd9\x0d\x83\x40\x0a\xe7\xf2\x50\x69\x4b\x21\x6e\xcb\xff\x64\xf8\xad\xc3\x31\x5c\x1e\xef\xa5\x4a\x2a\xa6\x3f\x3f\xcf\x0f\x30\x54\x44\x44\x7a\xfd\x8d\x8e\x46\xc3\x3f\x24\xfb\xbe\xfe\x00\x7d\xf6\xb5\x04\xce\x24\x3b\xd0\x8d\xc5\xab\xc4\x29\xdb\x22\xf1\x24\xb5\xb0\xc7\x09\xc9\x0e\xd5\x3d\x00\x00\xff\xff\x27\x39\x48\xbf\xee\x00\x00\x00")

func assetsPrevSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrevSvg,
		"assets/prev.svg",
	)
}

func assetsPrevSvg() (*asset, error) {
	bytes, err := assetsPrevSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prev.svg", size: 238, mode: os.FileMode(436), modTime: time.Unix(1490506308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRandomSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xd1\x6a\xc3\x20\x18\x85\xef\xf3\x14\x87\x7f\xb7\x59\xfd\x75\x9a\x95\x11\x03\xdb\xfd\x1e\x62\xd0\x4c\xc3\xb2\xa4\x54\x89\x65\x4f\x3f\x6c\x2c\xdd\x42\x11\x85\xff\xf8\x9d\x73\xb4\x0d\x8b\xc3\xf9\x7b\x9c\x82\x25\x1f\xe3\xf1\x45\x88\x94\xd2\x2e\x3d\xed\xe6\x93\x13\x8a\x99\x45\x58\x1c\x21\x0d\x87\xe8\x2d\x29\x66\x82\xef\x07\xe7\x63\x19\x96\xa1\x4f\x6f\xf3\xd9\x12\x83\xa1\xf8\xb2\xa9\xab\x5a\x87\x10\x4f\xf3\x57\x6f\xe9\x41\x73\x5e\x54\x84\xc7\x12\x25\x15\xe1\x73\x18\xc7\x1b\xd0\x55\x00\xd0\x1e\x3f\xa2\xc7\xc1\xd2\x3b\xa4\x31\xb5\x32\x90\x7b\x53\x6b\xbe\x4c\xc6\xe0\x87\xc4\x5d\x50\xea\x95\x94\xcd\x8a\xca\xe7\xbf\xac\xdb\xb4\xef\xaf\xe5\xd3\x3c\xf5\xa5\x79\x13\xaa\x39\xb7\xbe\xa2\xe1\xba\xc9\x9f\x93\xb5\xcc\x5a\xce\xbf\xc6\x6e\x9f\xd1\xac\xd7\xff\x3d\x59\xd5\x37\x4f\x2b\x5c\x57\x95\x23\x2c\xae\xab\x7e\x03\x00\x00\xff\xff\xa2\x45\x96\xa5\x83\x01\x00\x00")

func assetsRandomSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRandomSvg,
		"assets/random.svg",
	)
}

func assetsRandomSvg() (*asset, error) {
	bytes, err := assetsRandomSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/random.svg", size: 387, mode: os.FileMode(436), modTime: time.Unix(1490535047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRepeatSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4e\xc3\x30\x10\x44\xef\xf9\x8a\xd1\x72\x2d\xf5\xc6\xad\xa5\x0a\xc5\x39\x70\xe7\x23\x10\x35\xeb\x88\x90\x54\xb1\x15\xa7\x7c\x3d\xb2\x71\x01\x55\x96\x3d\x1a\x6b\xf4\x76\xb6\x0b\xab\x60\xfb\x1c\xa7\x60\xc9\xc7\x78\x79\x52\x2a\xa5\xb4\x4f\x87\xfd\xbc\x88\xd2\xcc\xac\xc2\x2a\x84\x34\x9c\xa3\xb7\xa4\x99\x09\xde\x0d\xe2\x63\x35\xeb\xe0\xd2\xf3\xbc\x59\x62\x30\x34\x97\x4b\x7d\xd3\x09\x42\x5c\xe6\x0f\x67\xe9\xe1\xc8\xf9\x50\xfd\x78\xac\xa8\x56\x13\xde\x87\x71\xfc\x0b\xf4\x0d\x00\x74\x97\xd7\xe8\x71\xb6\xf4\x82\x93\xd9\x69\x83\xb6\x35\xbb\x23\x67\x63\x0c\xbe\x48\xd5\x98\xdc\xf1\x4e\x37\xdc\x34\x4f\xae\xb2\x4a\x70\x71\x6f\x11\x9b\xa5\x5c\xe1\xfa\x23\xbf\x15\xfe\x6d\x53\xcc\xb2\x59\x3a\x64\xbd\x16\xbd\xcd\x52\xd2\x37\xf5\x09\xab\xf4\xcd\x77\x00\x00\x00\xff\xff\x5e\x9e\x3f\xba\x36\x01\x00\x00")

func assetsRepeatSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRepeatSvg,
		"assets/repeat.svg",
	)
}

func assetsRepeatSvg() (*asset, error) {
	bytes, err := assetsRepeatSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repeat.svg", size: 310, mode: os.FileMode(436), modTime: time.Unix(1490535180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/app.css": assetsAppCss,
	"assets/app.html": assetsAppHtml,
	"assets/app.js": assetsAppJs,
	"assets/next.svg": assetsNextSvg,
	"assets/pause.svg": assetsPauseSvg,
	"assets/play.svg": assetsPlaySvg,
	"assets/prev.svg": assetsPrevSvg,
	"assets/random.svg": assetsRandomSvg,
	"assets/repeat.svg": assetsRepeatSvg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{assetsAppCss, map[string]*bintree{}},
		"app.html": &bintree{assetsAppHtml, map[string]*bintree{}},
		"app.js": &bintree{assetsAppJs, map[string]*bintree{}},
		"next.svg": &bintree{assetsNextSvg, map[string]*bintree{}},
		"pause.svg": &bintree{assetsPauseSvg, map[string]*bintree{}},
		"play.svg": &bintree{assetsPlaySvg, map[string]*bintree{}},
		"prev.svg": &bintree{assetsPrevSvg, map[string]*bintree{}},
		"random.svg": &bintree{assetsRandomSvg, map[string]*bintree{}},
		"repeat.svg": &bintree{assetsRepeatSvg, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

