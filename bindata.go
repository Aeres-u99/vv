// Code generated by go-bindata.
// sources:
// assets/app.css
// assets/app.html
// assets/app.js
// assets/back.svg
// assets/main.svg
// assets/next.svg
// assets/pause.svg
// assets/play.svg
// assets/prev.svg
// assets/random.svg
// assets/repeat.svg
// assets/settings.svg
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAppCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\xfd\x6e\xea\x38\x16\xff\xbb\x3c\x85\x75\xab\x4a\xed\x2e\x41\x09\x90\x7e\xa4\xda\xd5\xbe\xc7\x6a\x74\x65\x12\x03\x9e\x86\x38\xb2\x1d\x4a\x6f\xc5\xbb\x8f\xfc\x11\xc7\x76\x1c\x08\xb4\x33\xd2\xcc\xa0\x8e\x2e\x89\x7d\xce\xef\x7c\x9f\x63\xb3\x22\xc5\x07\xf8\x9c\x00\x00\x40\xf4\x8e\x56\x6f\x98\x47\x1c\x1d\x78\xc4\xf0\x2f\x14\xc1\xe2\xf7\x86\xf1\x0c\x24\x71\x7c\xf7\x2a\xd7\xec\x20\xdd\xe0\x2a\x03\x71\x7d\x50\x0f\x56\x84\x16\x88\x5a\x0f\x6a\x58\x14\xb8\xda\xe8\x27\xc7\xc9\x64\x8b\x60\x81\xe8\x14\xac\x09\xe1\x88\x6a\x5e\x35\x61\x98\x63\x52\x65\x60\x8d\x0f\xa8\x50\x5b\x7f\x45\xb8\x2a\xd0\x41\xf0\x13\x3b\xd5\x46\xbd\xa1\x44\x6b\x6e\x71\x79\xc7\x05\xdf\xda\xc0\x38\xa9\xad\xd7\x5b\x84\x37\x5b\x9e\x81\xa7\x0e\x27\xcc\xdf\x36\x94\x34\x55\x91\x81\x12\x57\x08\xd2\x68\x43\x61\x81\x51\xc5\xef\xe5\x02\x45\x04\xac\x08\xe7\x64\x37\x35\x8f\xe8\x66\x05\xef\xe7\x69\x3a\x6d\xff\x92\x59\xfc\x00\x9e\xe3\xbb\x13\x4b\x62\xb1\x44\x40\x93\x4b\x1e\xa4\x16\x1c\xe9\x15\x93\x53\xe2\x8c\x85\xcb\x49\xfd\xed\x58\xff\xb7\x43\x05\x86\xe0\x9e\x50\xc1\x0e\x2a\x33\xd5\x84\x72\x0a\x31\x7f\xd0\x22\x38\xf2\xd8\x2a\x4f\x96\x46\xaa\xe3\x10\xb1\x12\x56\x05\xcb\x61\x8d\xce\x52\x7b\x71\x88\x4d\x26\x0c\xe5\x82\x44\xcf\x8b\xe0\x8a\x91\xb2\xe1\xc8\x72\x86\x67\xb3\xb5\xf3\x2b\x69\x8a\x51\xf2\xb9\x8c\x02\x1e\x18\x34\x9b\x1f\x00\xf2\x2f\x49\x2d\x21\xc4\xff\x6f\x4b\xcc\xb8\x45\xb9\xc0\xac\x2e\xe1\x47\x06\x2a\x52\xa1\x4b\x55\xd7\x07\xaa\x51\xa5\x27\x41\xbd\x9c\xc1\xe4\x49\xab\x17\xed\x20\xee\xab\xc4\x61\x64\xdc\xc0\xe8\x44\x6f\xcd\x49\xb5\xc6\x9b\x3e\x4c\x7b\xe1\x71\x32\x51\x38\x48\xd9\x86\x3d\x66\x3c\x62\xfc\xa3\x44\x11\xff\xa8\x91\xad\x22\x23\x52\x62\x50\xe6\xa4\x24\x34\x03\xb7\xcb\x58\x7c\x7a\x19\x0b\x24\xf3\xc1\x2c\xa5\xf8\xce\xea\xb2\x93\xb0\xf3\x2e\x8a\x4a\xc8\xf1\xde\x65\x1c\x29\x2f\xf3\x53\xce\xc2\xa0\x59\x93\x4a\xe5\xd1\x0c\x24\xcf\x6e\xbe\x8c\xda\x0c\xc0\x48\x89\x0b\x90\xd4\x07\x70\xbb\x8e\xc5\xc7\x06\xc3\x48\xb5\x39\x83\xa5\xe5\xba\x8c\xc7\x33\xe8\xb4\x62\x56\x19\xbd\xe8\xe7\x52\xb4\xa5\x52\x8d\x0d\x66\xc6\x29\xcc\xdf\xa6\xc0\x79\x56\xa2\x6a\xc3\xb7\xc1\x87\x3f\x19\xaa\x21\x85\x9c\x50\xef\x35\x2a\x61\xcd\x50\x71\x26\x8e\x5b\x78\xc9\x32\xa4\xd3\xf9\x10\xbe\x7e\xc9\xf0\x56\xb9\xdc\xa9\x52\xe1\xe3\xa2\x65\xa2\x0a\xe0\x16\x16\xe4\x3d\x93\xaa\x4b\x74\xd0\xbc\x6f\xb1\x80\xe6\x51\xf3\x45\x75\xc9\x76\xc1\x7f\x15\x59\x97\x58\x72\x2d\x31\x8e\x79\x89\xce\x68\x5b\xe9\xab\xf3\x24\xe9\x04\x89\x5f\xa3\x72\x58\xe6\xf7\x22\x68\x41\x04\x92\x79\x5c\x1f\x1e\x4e\x78\xbb\x28\x5d\x51\x57\x19\xc6\x81\x9f\xb6\xdf\x86\xc5\x81\x94\x77\xe9\xea\x64\x15\x98\x1b\xa6\xbe\x78\xc3\xae\x04\xcb\x55\xb3\x1b\x19\x78\xe9\x05\x81\xe7\x31\x98\x15\x90\x9f\xb3\x89\xb2\x81\x27\x43\x32\x2c\x83\x9d\x05\x9f\x63\xf1\x09\xb4\x69\x3e\x8e\xb0\xbc\x21\x20\x73\x17\x48\x27\xbc\x6b\xe8\x91\x91\x14\x32\xb4\x27\xd5\x7c\x1e\x6c\x34\x83\x12\x8c\x77\x8a\x2e\x47\x2b\x39\xe6\x41\x85\x2e\x07\x58\x4f\x54\x19\x64\x35\x6c\x2b\x05\xd9\x23\xba\x2e\x85\x8c\x5b\x5c\x14\xa8\xb2\x84\xef\x5e\xa1\xb2\xc4\x35\xc3\x4c\x47\x93\x10\x37\x62\x35\xcc\x65\x51\x7b\xa7\xb0\x1e\xdf\x9c\x28\x00\x2a\xa8\xa7\xed\x37\x25\xbe\xf9\x5a\x20\x0e\x71\x69\xbe\xea\x94\xf7\x13\xef\xec\x1a\x1c\x6c\xc3\x43\x8e\x36\xd8\xed\x04\xb2\x82\x4e\x0a\xbd\xbe\xc1\xc6\x10\xc4\xc5\xf6\x9b\xd3\xfd\x96\x34\xde\xd3\x79\x50\xad\x23\x3a\xb9\x6a\xd9\xe5\xaa\x21\x54\x1e\x82\x50\x2f\x33\xb6\x2d\xbb\xde\x44\x5f\x33\x59\x1a\x30\x4e\xaf\x17\x3b\x45\x3f\xa0\xe3\x6f\x52\x67\xa8\x2f\x0d\xab\x78\x62\x6b\x4f\x53\x90\xb8\x5e\x42\x81\x3a\x6f\x53\x82\xad\x64\x7b\x57\x12\x8c\xef\xb9\x1b\xce\xda\x1a\xce\x3e\x3b\xbf\x5d\xd2\x87\x9a\x81\x23\xb6\x18\x94\x58\xd3\xf6\xf3\x73\x07\x21\x27\x15\xa7\xa6\xf7\x3d\xdf\x15\x19\x86\x4e\x7b\x20\xe8\xe9\x6e\x7b\x9b\x4c\x4d\xe7\xbd\x5d\x68\xba\x6d\x47\xdc\x5b\xdd\x5c\xd2\x75\xc7\x9d\xde\xbb\xed\x46\xc6\xf1\xfd\xaa\xdd\x71\x26\x03\xb5\xb4\x80\x6c\x8b\xfa\xc5\xd4\xe1\x3b\x2b\x10\xcb\x29\xae\xc7\x8e\x87\x5e\x09\x38\xdd\xb5\x87\x06\x0b\xc7\xee\xfd\xa3\x87\xce\xe7\xbe\xaf\x3a\xb4\xa9\x67\x87\xab\x48\x47\xd3\x63\x2c\xe2\x10\x7c\x82\xb3\xda\xb0\xc3\xef\x68\xd1\x82\x87\xab\x69\x39\x09\x21\x56\x09\xe1\xe8\x3a\x94\xd8\xbf\x87\x65\x33\xaa\xd1\x49\x95\x43\x5d\x20\xa6\x4d\xda\x4a\x80\x97\xc9\x67\x13\xd1\x91\xa4\x5c\xfb\x38\x99\xcc\xd8\x3b\xe6\xf9\xd6\x95\x5b\xca\x1a\x1a\xfb\x8e\x66\x3d\xae\xea\xa6\x4d\x42\xde\x7c\xdf\x2d\x2a\xe1\x0a\x95\x53\xe0\xec\xc9\xf2\x2d\xca\xdf\x50\x01\xfe\xad\x5e\x9f\x09\x28\x43\x7b\x55\x92\xfc\xcd\x3f\x4d\x1a\x1e\x4e\x75\x84\x51\x58\xe0\x86\x39\x2f\xcc\xc9\x53\xd4\x7a\x7d\x11\x8b\x4f\x4f\xba\x01\xa4\x01\x02\x6d\xd8\x78\x92\x67\x2b\xb4\x26\x14\x75\x0a\x50\x4f\xe1\x9a\x23\x7a\x46\x2b\xbd\xad\xe1\x55\x92\xd4\x45\xd9\x40\xa4\x60\x54\xf1\x0c\xfc\xf8\x11\x54\x70\xaf\x8a\x99\x78\x5f\x0e\xa8\x76\xbe\x74\x3d\xc3\xc6\x1f\x3e\xdc\x6c\xfb\x4d\x35\x42\x2c\x44\xd6\xb3\x13\x4f\x40\xc1\x6b\xf9\x5f\x9f\x8b\x2d\xbf\x9e\x7f\x96\xc3\x86\xe6\x14\x56\xac\x86\x14\x55\xfc\xac\xb1\x5d\x01\x5a\xc4\x5d\x9d\xf8\x22\x75\x1b\xf8\x57\xd4\x61\x52\x11\x43\x25\xca\xdb\x80\x24\x0d\x17\x03\x8b\xac\xcf\xc0\x3a\xf9\x86\x75\x8d\x20\x85\x55\xee\x94\xbc\x68\x47\x7e\x0d\xbc\x0a\x3f\x1d\x1f\x7f\x8e\xc6\x2e\x88\x48\x5b\xfe\x93\x05\xab\xd5\x84\x53\xb0\xd2\xfa\x20\xff\x44\xdd\x4a\xdb\x26\x60\x72\x8b\x28\x25\x27\xcf\xe7\xd5\xa9\x90\xdf\x74\x78\x95\xdc\xee\x83\x6c\x8e\x8e\x6a\x16\xf1\x29\xe9\xd6\xeb\x64\xf9\xb2\x78\x0d\xe7\xce\x16\xe7\x7f\xc1\xbf\x86\xfa\x99\x55\xc3\xb9\x29\x55\xbe\xad\xdd\x93\x3f\x30\xea\x4e\xa3\x8f\xb1\x7f\x8e\xfe\xa0\xb5\xb8\x43\x55\x23\x5a\x78\x54\x35\xa0\x82\x7b\xeb\x9f\xc0\xc1\xd5\x63\xd2\x83\xd1\x3f\xa3\x94\x94\x0c\x95\x9b\xd3\xb3\xba\xd1\xb9\xad\x81\x1b\x6d\x00\x65\xc5\x1b\xb7\x1d\x1b\x3f\xdb\x08\x1c\xb3\x55\x77\xd4\x06\x02\x23\xe3\xd1\x5e\x2b\xfa\x5b\x7f\xe9\x53\x78\x29\x43\x9c\xe3\x6a\xc3\x34\xe9\x9b\xde\xd1\xd7\xe0\x10\xd6\x1f\x93\x87\x71\xa6\x77\x23\x51\xca\x1e\x27\xb5\x07\xdb\xb1\x88\x53\x6b\xa2\x71\x4c\xa7\x06\xae\x33\xa6\x98\xdc\x0a\xbf\xb7\xb0\xeb\xe5\xf3\x64\xd8\x4f\xdd\x5b\x93\xd1\xe6\xf4\x18\x0d\xc6\x7f\xc8\xca\x20\x74\x9d\x15\x74\xe7\xa3\xcb\xec\xe7\x9e\x94\xcd\x0e\x8d\xe7\x39\x0f\x9e\x46\x3c\x9d\x39\x8c\x58\xc4\x9d\xd1\x6c\x58\x4b\x79\xf6\x74\xa9\x43\x05\x34\xd5\x12\x14\x89\x14\xc0\x86\x93\x8e\xea\xb5\xf2\x9a\x01\xef\xcc\xf9\x8b\x74\x2c\x03\x49\x39\xd7\x14\xf8\x4f\xb2\x35\xc9\x1b\xd6\x7f\x0e\xba\xb9\xff\x2f\xcc\x91\x21\x37\xf5\x91\xcd\xc4\x77\x0b\x9e\x16\xfc\xa5\x1f\x19\xed\x7a\x8a\xf6\xfd\xf5\x8f\x83\xeb\x2b\x74\xe0\x63\xd6\xb7\x36\x93\x3d\xca\xff\xc5\x28\xfc\x1f\x0a\xab\x0d\xfa\x4d\x6f\x6c\x05\x79\xf6\xca\xdb\x4b\xe0\xba\xdc\xa4\x83\x6f\x6e\x36\xec\x9b\x62\xb7\x2f\x72\xfb\x89\xd4\x57\xf6\xa0\x70\x59\x26\x41\xc8\x2f\x91\x7d\xa1\xf2\x8f\x15\x57\x43\x64\x25\x16\x24\xf8\xb6\xd9\xad\xbc\xdf\x44\xfc\xd9\xe8\xdb\xe4\xbe\xec\x1d\x23\x0c\x8d\x15\x6a\xce\xbd\xd8\x9c\x7f\x27\xd9\x2c\xe1\xe4\x69\x7f\x2f\x6f\x5d\xd9\xbe\x04\xa9\x86\xf2\xb2\xdb\x56\x01\x73\xa7\x94\x0e\xd5\x34\x75\x29\x41\x51\x8d\xa0\x7d\x99\xde\xbb\x0a\x1c\xd8\x07\xab\x82\xec\xfa\xfb\xae\x69\x7d\xbe\x2a\xe3\xd3\xa5\x32\x06\xdb\xaa\x91\x02\xa6\xce\xd9\x2f\x6b\x56\xb2\x5b\x3a\x31\x89\x28\x66\x8f\x8f\xb3\xc7\xc7\x3b\x77\xb0\x58\xcc\x16\x0b\xfb\x27\x41\xa9\x3e\x53\x32\x54\x2f\xfa\x69\xc1\x70\xfd\x73\x8a\xb1\x45\xde\xd1\x74\xf0\x36\xa9\x57\xc6\x03\x77\xf8\xa7\xce\x60\x3c\x56\xd9\x96\xec\xcd\xa8\x7c\x1d\xed\x3c\x16\x1f\x6b\x74\xd2\x34\xbb\x40\x83\x15\xde\x69\x4f\x93\xaf\xe4\xe9\x7e\x3c\x4b\x99\xd8\xa4\xf7\xc0\x9c\xe3\x3d\x0a\x6f\x52\xef\xe4\xae\x39\x53\xf7\x5c\x6f\xe8\x63\x4d\xe1\x0e\x31\x8b\xe2\xe7\x24\xbe\x03\x9f\xa4\x86\x39\xe6\x1f\x99\x60\xf0\x7a\x9c\xc8\x46\xae\x7b\x98\xcc\xe2\x57\x19\x06\x1d\x01\x8b\x7a\x90\x42\xea\x3d\x7b\x1a\xa6\xfa\x47\x00\x00\x00\xff\xff\x9b\x8d\xd6\x2c\x0f\x27\x00\x00")

func assetsAppCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppCss,
		"assets/app.css",
	)
}

func assetsAppCss() (*asset, error) {
	bytes, err := assetsAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.css", size: 9999, mode: os.FileMode(436), modTime: time.Unix(1491139062, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\xf0\xe5\x7b\x8d\x43\x3a\xde\x6c\xb2\x0b\x4a\x40\xdb\x6d\x4f\xbb\xe8\x02\xdd\x16\xe8\x29\x18\x49\x63\x89\x35\x45\x0a\x22\x25\xdb\xff\xbe\x20\x25\x39\x92\x2d\xc7\x09\x1a\x04\x81\xa9\x67\x86\xcf\x7c\x90\x33\x1a\x89\xff\x7d\xf9\xfd\x97\x1f\x7f\x7f\xff\x95\x14\xae\x54\xf1\x42\x0c\x3f\x08\x59\xbc\x10\x25\x3a\x20\x69\x01\xb5\x45\x17\xd1\x3f\x7f\xfc\xb6\x7c\xa4\x6c\xc0\x35\x94\x18\xd1\x56\xe2\xae\x32\xb5\xa3\x24\x35\xda\xa1\x76\x11\xdd\xc9\xcc\x15\x51\x86\xad\x4c\x71\x19\x1e\x6e\x88\xd4\xd2\x49\x50\x4b\x9b\x82\xc2\x68\x75\x43\x4a\xa9\x65\xd9\x94\x03\x40\xa7\xac\x50\x55\x0a\x97\xa5\x49\xa4\xc2\xe5\x0e\x93\x25\x54\xd5\x32\x85\x0a\x12\x85\x23\x4b\x07\xb4\xaf\xd9\x68\x1d\xb8\xc6\x2e\x13\xa8\x97\xd6\x1d\x26\x0c\x89\x82\x74\xbb\x74\x35\x68\xab\x9a\x14\xb5\xf3\x7c\x4a\xea\x2d\xa9\x51\x45\x34\xa8\xdb\x02\xd1\x51\xe2\x0e\x15\x46\xd4\xe1\xde\xb1\xd4\x5a\x4a\x8a\x1a\x37\x11\x65\x60\x2d\x3a\xcb\xa0\xaa\x6e\x3d\x1c\x2f\x84\x4d\x6b\x59\x39\x62\xeb\x74\x2a\xfe\xc7\xd2\x58\xb0\x4e\x1a\x2f\x84\x93\x4e\x61\xdc\xb6\x82\x75\xab\x85\x60\x7d\xda\x13\x93\x1d\xfa\x43\xc0\x3a\x5e\x10\x42\x88\xd0\xd0\x12\x99\x45\xb4\x44\xdd\xd0\x0e\x0b\x78\xd2\x38\x67\x34\x49\x15\x58\x1b\x25\x90\x6e\x7b\x3f\x3b\x9c\xc6\x42\x96\xf9\xd4\x15\xaf\x74\x6b\xdb\x9c\x12\x50\x3e\x03\x90\x6e\xbd\x5f\xdd\x86\x4b\xcc\x25\x48\x7d\x95\xd9\x2b\x8d\x98\xfd\xe3\x75\x66\x8b\xce\x49\x9d\xdb\xab\xec\x83\xe2\xc8\xc2\x00\x9d\x5a\x11\x4c\x43\x7b\x92\x38\xdb\x24\x21\x77\x24\x9c\x69\x44\x33\x69\x2b\x05\x87\xcf\x44\x1b\x8d\xe3\x8c\x1a\xf5\xfc\x10\x00\x25\xe3\xa9\xcb\x35\x2a\x03\xd9\x89\xc3\x1d\x78\xf4\x43\x30\x25\xaf\xf1\xa4\x46\x6f\x64\x7e\xc2\xd3\x81\x33\x3c\x7d\x50\xdd\x2d\xf1\xf7\x42\x58\x4c\x9d\x34\x3a\x84\xa7\xa4\x75\x7d\x14\xc7\x08\x04\xf3\x2b\xc1\x7a\xbd\x93\x1d\xdd\xf1\x74\x8a\xa9\x74\xd8\x3b\x45\xc3\x6d\xa4\xb1\x36\x24\xac\x04\xf3\xc2\x5e\xcf\x56\x30\x38\x4f\xa1\x76\xc1\xa6\x36\xa4\x5b\x0a\xe6\xc5\xbd\x66\xa3\x06\xbd\x0c\x1d\x48\xe5\x8f\xa8\x19\xfc\xca\x64\x3b\x48\x51\x41\x65\x31\x7b\x92\x65\x3e\x3e\x04\xdb\xe6\x64\x5f\x2a\x6d\x23\x5a\x38\x57\x7d\x66\x6c\xb7\xdb\xdd\xee\xd6\xb7\xa6\xce\xd9\x1d\xe7\x9c\x85\x5b\xd0\xb5\x1a\x7a\xc7\x39\x25\x05\xca\xbc\x70\xfd\x83\x6f\x4b\x3f\x9b\x7d\x44\x39\xe1\xe4\x8e\x87\x7f\x1a\x2f\xa6\x07\x92\x13\xeb\x6a\xb3\xc5\x88\xfe\xff\x03\xf7\x7f\xb4\x07\x96\x3d\xef\x07\x4a\x36\x52\xa9\x88\x9e\xdc\x91\x23\x43\x05\xae\x08\xc9\x1c\xc2\xa8\xbd\x0f\x94\x64\x11\xfd\x46\x56\x9c\xdf\xac\x39\xf9\x3a\x2c\x7e\x22\x0f\xfc\xe6\xc1\x3b\xc4\x6f\x56\x01\x5c\x3d\x70\x9f\x17\xcf\xf2\x1a\x72\x85\x9b\x31\xf7\xea\x61\x20\xf7\xab\x73\xf6\xf5\x4b\xe4\xf9\x79\xa8\x3d\x60\x2a\x48\xa5\x3b\x44\x94\xdf\xde\xcf\xc4\xfc\xec\xda\x7b\x04\x39\xc3\xf6\x9f\xc2\x62\xf9\x49\xd1\x8d\x01\xe1\x2f\xcd\x50\x1a\x99\x6c\x2f\xd7\x46\x57\x84\x2f\xf6\x0a\x51\xac\xfa\x5a\x6d\x6a\xf0\x1b\x05\x2b\x56\xbd\xc8\xd7\x43\xaa\x70\x64\xb9\x58\xc7\xdf\x15\x1c\x7c\xb3\x15\xac\x58\x8f\x24\xcd\x4c\xbb\x39\x8f\x6b\x54\x31\x19\x76\xaf\x10\xe9\xbb\xc5\x57\x69\x9d\xbf\xeb\x64\x63\x94\x32\x3b\x4b\xaa\xa3\x95\x10\xe0\x4b\x44\x2d\xa8\x06\x89\xdd\x49\x97\x16\xbe\xe1\xea\xaa\x71\x7d\x33\x4a\x0b\x4c\xb7\x89\xd9\xd3\x90\x8d\x81\xf3\xc9\x5b\x7a\xea\x2c\xd1\x58\x28\x48\x50\x91\x8d\xa9\x2f\x6a\xb0\xa0\x12\xcf\xf8\x32\x6d\x8f\xa3\xd6\xc0\x26\xb9\x9b\xcf\xe4\x5f\x46\x35\x25\xbe\x6b\x1e\xff\x28\xcc\x8e\xb4\x81\x97\x68\x93\xbc\x67\xf6\x6c\x61\x76\x4f\x1d\xf5\x34\x69\x53\xc1\x6b\x73\xf5\xf6\xd8\xbe\xc1\xbe\x0f\xed\x52\x58\x16\x15\xa6\x6e\x12\x19\xed\xdf\x11\xfb\xa3\x87\xf3\xb5\x6b\x82\x11\x12\xf6\x44\xf4\x9e\xd3\xf8\x9e\x0b\xd6\xa1\xaf\xda\xf2\x91\xd3\xf8\xe3\xdb\xb6\xf8\x86\xf2\xf0\xb6\x2d\x8f\x9c\xc6\x8f\x6f\xdb\xf2\x89\xd3\xf8\xd3\xdb\xb6\xac\xfc\x4b\x66\xc5\x5f\xd8\xe4\x1b\x8e\xcf\xf5\x3b\x56\xc3\x97\x30\x68\xdb\xb3\x72\x78\xbe\x0b\x41\x3e\x79\x01\x3f\xf3\x8e\x3b\x60\x0f\x76\xef\x9c\xba\x36\xf5\xb1\xd5\xad\x4f\x86\x83\x20\x1d\xe6\x83\xc1\xee\x64\x3a\x98\xdc\xc0\x4e\x7d\x04\x0d\xa3\xc2\xc8\x91\x89\x27\x1b\x63\xdc\xd9\xe8\x3b\x34\x99\x8b\xe3\x6f\x55\x63\x3b\x9d\xa6\x86\x83\xf1\x92\xb9\x99\xd2\xe3\xa3\x79\xb2\x57\x3b\xce\x5e\x53\x76\x05\x87\x0b\xec\x0a\x0e\xac\x82\xc6\xe2\xac\x0d\x05\x87\xb1\x0d\x05\x87\x8b\x36\x34\xee\xdd\xbc\x0d\x2f\x99\x63\xf7\xf8\x88\xbd\x57\xbb\x3a\x0d\x3f\x37\xec\xd3\xea\x9e\x74\xb2\x1a\x74\x8e\xd4\x7f\xac\x45\x9c\x94\xb0\x8f\x56\x9c\x13\xeb\xb0\x8a\x56\xaf\xe0\x1e\xcd\xa4\xe7\x87\x55\x63\x85\xe0\x66\x22\xea\x04\xa3\x98\x3a\xe0\xfa\x97\x44\x0d\x3a\x33\xe5\x1c\x63\x10\x8c\x19\x03\x70\x21\x4f\x82\x0d\xb7\x4f\xb0\xee\x4b\xcc\xcf\xdc\xe1\xbb\xf8\xdf\x00\x00\x00\xff\xff\xfd\x12\x77\x07\x2f\x0f\x00\x00")

func assetsAppHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppHtml,
		"assets/app.html",
	)
}

func assetsAppHtml() (*asset, error) {
	bytes, err := assetsAppHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.html", size: 3887, mode: os.FileMode(436), modTime: time.Unix(1491115374, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x3c\x5d\x8f\xe3\x36\x92\xef\xf3\x2b\x38\x02\x6e\x2d\xa7\x35\x6e\x77\x72\x9b\xdc\xc9\x71\x16\xd9\x64\x6e\x93\xc3\x7c\x04\x99\x79\x38\xc0\x30\x1a\xb4\x44\xdb\x9c\x96\x25\x45\xa2\xdd\x6d\x74\xfc\xdf\x0f\xfc\x92\xf8\x29\xc9\x9e\xee\xd9\xc3\x6d\x3f\xb8\x25\xb2\x58\x2c\x16\x8b\xc5\xaa\x62\x51\x07\x58\x81\xc3\x01\xcc\xe9\xcf\x9f\x7f\x82\xc7\x17\x00\x00\x50\xac\x3e\xc5\xe0\xf1\x14\xb1\x97\xba\xc8\x37\xfa\x5b\xad\xbc\x92\xa2\x82\x1b\xd4\x16\xec\x8a\x14\x65\x31\x78\xcc\x70\x4d\x68\xa9\x28\x3e\x60\x74\x1f\x83\x47\x54\x55\x45\xc5\x80\xc1\x0e\xe2\x9c\x3f\x49\xd0\x08\x24\x45\xbe\xc6\x1b\x51\x8f\xf2\x3d\x7f\x2a\x33\x78\x5c\xc1\xe4\x8e\xbf\xa1\x0c\x96\x35\x4a\xf9\x4b\x5a\x15\x65\x5a\xdc\xe7\x4a\x4f\x49\x91\x93\xaa\xc8\x00\x27\xe9\x34\x7b\x71\x38\x4c\x8a\xd5\x27\x30\x07\xe1\x7a\x9f\x27\x04\x17\x79\x38\xe6\xc3\x94\xef\x60\x83\xc8\xfb\xea\x75\x56\xa3\x70\x17\x81\xbb\x08\x1c\xc6\x82\x11\xf4\xaf\x42\x64\x5f\xe5\xe0\x0e\xe0\x1c\xec\xfe\x06\x76\x8b\xbb\x25\x88\xc1\x61\xc6\x00\x4e\x2f\x14\x90\xc7\x06\x4f\xdc\xa2\x3c\xcd\x5e\x9c\xc6\xe1\x98\xd1\x41\x99\xe7\x22\x84\x4e\x02\x81\xb4\xaa\xa9\xa1\xa0\x11\xb8\x43\xc7\x3a\x02\x05\xd9\xa2\x4a\x25\x89\xc2\xe3\x59\xf3\xba\x2e\x2a\x10\x62\x4a\x1f\x85\x57\x01\x25\xf0\x1d\x3a\x82\x39\xab\x5d\xe0\xe5\x4c\xab\xc6\x6b\x10\xd2\x6a\x9c\xb3\xb9\x35\x5b\x2b\xc3\xa3\xd5\x8b\x3b\x74\x34\x10\x9c\x5e\xd8\x4f\xa2\x05\x23\x5c\x65\x14\xa5\xa5\xe1\x8c\x73\xb8\xf6\x68\xbb\x09\xf4\xd2\x76\x02\x88\xf6\x21\x5b\xcf\xe7\x20\xf8\x31\x5b\xed\x77\x1f\x8a\x8a\x04\x6e\x24\x04\x6e\x04\x21\x0b\x0e\x1b\x2c\x25\x39\x9d\x68\x2b\x82\x6b\x32\x14\x2f\x03\x1e\x88\x98\xd2\x20\x1a\x3c\x1b\xe6\x73\xf8\x21\xba\x88\xc0\xf9\x9d\x3d\x0d\xdb\x5d\xcd\x15\x21\x6b\xe4\x4c\x93\x36\xa7\x9c\x39\x56\x78\xab\x05\x14\x69\x1c\x2d\xf2\x02\x8c\xc0\x15\x5b\x42\x57\x60\xb4\x1c\x8d\x4d\x81\xae\x49\xe5\x5e\xb9\xe6\x92\xad\x8b\x8a\xf0\x95\x38\x1a\xcd\x2e\x5b\xcc\x12\xc5\xd5\xdc\x45\x2e\x5d\xdd\x11\x18\x81\xd1\xd8\xbf\x26\x05\x06\x97\xfa\x6a\x40\x5d\x7a\x2c\x52\x6b\x59\x79\x5b\x52\x93\x2a\xa6\x3f\xbc\x84\x6a\xbc\x70\xdc\x6a\xbc\xda\xa7\xf2\x28\x29\x26\xe7\x6a\x9b\x75\xca\x12\xaf\x27\x3b\x58\x86\x5a\x03\x93\x43\x02\x7a\xc1\x99\x22\x48\x98\xd4\xa4\x52\x27\x66\xd9\xf2\x67\x3c\xa1\x64\x34\x38\x41\x08\x23\xb0\x32\x91\x52\x71\x86\x8b\x9b\x25\xf8\x1e\xac\x16\x37\xcb\x31\x78\x94\xfd\xbc\xba\x99\x35\xc2\x29\xcb\x68\x91\xda\x81\x4e\xb3\xd2\xb8\x5e\x4c\x97\x33\x70\xb2\x24\x6a\x9f\xe3\x3f\xdc\x8c\xf1\xf2\x65\x8d\x33\x82\x2a\x65\x18\x7c\xb4\x18\x44\xa0\x46\xd9\xda\x35\x20\x4c\x57\xe7\xb4\x43\xe1\x93\x6a\x8f\x0c\x5d\xdf\xae\x6e\xc9\x59\xf7\xaa\x01\xa3\x31\x78\x39\x07\x0e\x20\x94\xad\x17\x18\xbc\x02\x37\x4b\x05\xf6\x12\x22\xbc\x2d\xd6\x30\xab\xcd\x26\xca\x74\x98\xcc\xe6\x9c\x73\xb0\x9b\x57\xf8\x45\xd1\x60\xb9\x53\x1a\x59\x07\x3a\x2d\x6c\x81\xaf\xe9\x02\x77\x74\xa0\xce\x8f\xc2\x3c\xc1\xdb\x35\x63\xaa\x68\xb6\x58\x2f\x5d\x2d\xbb\x19\xa1\x33\xc3\x7e\x73\x32\x5d\xe7\x99\xa5\x2d\xe8\xfa\x89\xd9\x6f\xab\x11\xa8\x04\xc7\xec\xb7\x2d\xe3\x74\xc7\xe2\xbf\x43\x57\x70\x5b\xd2\x6b\x20\x55\x88\xd6\x2d\xc4\x16\x4f\x8b\x92\x7d\x55\xa1\x9c\xb8\x4b\x6f\x33\x58\x93\xdb\x5d\x91\xe2\x35\x46\x29\x98\x83\x20\x50\x60\x84\x95\x68\xb4\xe4\xa5\x9d\x2d\x33\xbc\xaa\x60\x45\x95\x78\xcb\x01\x6d\x77\x8c\xc1\x62\xd9\x0e\x1a\x04\xff\x40\x79\x85\x94\xd2\x93\x89\xaa\xb3\xbb\x62\x4f\xca\x3d\xa9\x0d\x42\x45\x69\xdf\x10\xd7\x98\xda\x94\x8f\xc1\xa1\xc8\xf6\x3b\x4a\xc3\x63\x50\x6f\x8b\xfb\x20\x66\x13\x1c\x81\x60\x07\x1f\x82\x18\xdc\x4c\xa7\xa7\x08\x04\xd2\xce\x66\x70\xd4\x60\xbf\x5d\x17\x59\xd6\x80\x9f\x4e\x2f\x5a\xcd\x0d\x0f\x9a\xf9\xa6\x0a\x22\xa9\x8e\x86\x58\x66\x45\x02\xb3\x0f\x7c\x76\x27\x62\x1a\xff\xfb\xc3\xfb\x77\x54\x2b\xe3\x7c\x83\xd7\xc7\x90\x96\x8e\x67\xfe\x56\xcd\x60\x8c\x76\xbc\x5c\x69\x79\x02\x09\x24\xc9\x16\x84\xc8\x5c\x1c\xd7\xd7\xa0\xac\xf0\x01\x12\x04\x56\x55\x71\x5f\xe3\x7c\x63\xec\x92\xca\xcc\x14\x30\x1d\x3e\x3e\xba\x58\xad\x31\xba\xd6\xa6\x3a\xf6\x12\x56\x35\x72\x34\xf3\x29\x2e\x67\x47\x62\xf8\x8e\xae\x98\x04\x74\xf4\x65\x31\x4e\x6d\x88\x23\xf0\xc9\xae\x69\x2d\x93\xc4\xa7\x78\x18\xc8\x27\x06\xb2\xc0\x5e\xf5\x04\xb8\x9b\xb6\xc6\x9b\x05\x5e\x2e\x3e\x2d\xc1\x9c\x81\x2f\x3e\x2d\xed\x4e\x6d\x26\xd8\x25\xa7\x27\x9c\x7d\x3a\xf3\xa1\x60\x8b\xa5\xe9\xe8\x04\xc5\xec\xb7\x5d\xe0\x42\xdb\xc4\xf2\xc1\xaa\xd1\x17\x69\xec\x2e\x56\x5a\x71\x1d\x14\xcb\x07\xab\xc6\xc2\xe7\x2a\x6e\x5b\x09\x25\x13\xcb\x07\xab\xc6\xc4\xe7\x2c\x6e\x5b\x09\xd5\x13\xcb\x07\xab\xc6\xc4\xe7\x2c\xd6\x46\xc5\x7c\x7e\xfe\x5f\xb1\x29\xe1\x01\xc5\xec\x57\xa1\xb8\x80\x94\xc0\x02\xa6\xc6\xee\x41\xb7\x0f\x16\x79\x98\x64\xb8\x26\xfa\x0e\x02\xda\x2d\xe4\xe3\xef\xaf\x5f\x77\x29\x6e\x5d\x64\x02\xba\xa5\x05\xb1\x25\x7c\x96\x33\xf4\x33\x24\x88\x39\x45\xcc\x79\xa1\x05\xb8\x4e\xde\xed\x77\x2b\x54\xd1\xb7\x8f\x15\x4c\xee\x94\x57\x4c\x32\x06\xbe\xc6\x19\x0a\xd4\xad\x82\xf6\x49\x85\xcb\xd5\xa7\xd5\x69\x99\x41\x9c\x9b\xcd\x55\xfa\x28\x10\x14\xee\x94\x0b\xa8\xa1\x83\xda\x16\xc1\xd2\x02\x51\x5a\x9d\xda\xc7\x66\x3b\x1b\xca\x2b\x0e\xff\xec\xdc\x69\xba\x79\x6a\xbe\xd8\x30\x4b\x27\x5f\x98\x10\x0c\x67\xcb\x97\x91\x19\xd9\xcb\x17\x65\x8a\xe9\xcc\x94\x29\xd5\xba\xca\x6e\x9a\x42\x02\x4d\xdf\xb8\x71\x49\x81\xdc\x46\x44\xcc\x87\xae\x59\xcb\xaa\x6e\x8c\xc5\x89\xd0\x56\x2c\xf6\x03\x1a\x87\xa3\xe6\x4e\x1d\xed\x28\x62\x18\x58\xfd\x82\x4f\xc7\x52\x35\x17\xa4\x1e\x91\x74\x54\x45\x41\x72\xb8\xf3\x5a\x37\x0c\x86\x5a\x5a\x14\x30\x68\x11\x49\x83\x5d\xd9\xca\x27\x19\xca\x37\x64\x4b\x4d\x76\xcb\xcb\xaa\x04\xad\x0a\xf8\x62\xba\x5c\xdc\x2c\x4d\xd2\x40\xbb\x0f\xc9\x48\x5a\x4b\xac\xf0\xe5\xeb\x3e\x62\xe5\xa0\xc2\xb1\x4e\x70\xc5\xe2\x33\x6c\x24\x3e\x37\xba\x8b\x20\xc6\xd8\xaa\x61\xab\xe5\xc5\x96\x3e\xba\x58\xdf\x0d\x4d\x94\x41\x6e\x22\x4c\x86\x96\x45\x19\x1a\x26\x8b\x02\x42\xf7\x8a\xb0\x6b\x6e\xd3\xe2\x3e\x57\x49\x3a\xc0\x6c\x8f\x86\xf2\xab\x0d\xa3\xba\xa6\xbe\xf2\x0f\x82\x37\x6a\x78\xc5\x16\xeb\x72\xe1\x91\x15\xea\x17\x2f\xa6\x4e\xa6\x5b\xcc\xd8\xd7\xdb\x70\xc1\x5c\x68\x36\x10\x55\xac\x3d\x5c\x51\x78\x01\x57\xb5\xe9\xf2\x5a\x11\xe6\x88\x31\x42\xb8\xe9\x35\xca\x50\x42\x50\x3a\xfb\xdc\x59\xa4\xae\x8c\x2d\xfa\x86\xe9\x47\x11\xf5\x2f\x11\xfa\x27\xe9\x6a\x78\x5c\x14\xa4\x61\xb3\xc3\xf3\x66\x06\xac\x6c\xe4\x73\xbd\x59\x68\x44\x02\x29\x73\xe3\xb3\x68\x57\x15\x82\x77\x7d\x9e\x76\x2b\x0c\x12\x33\x35\x7a\xa7\x0e\xa3\xb7\x6b\xaa\xad\xa0\xc0\x1d\x3a\x8e\x97\x9d\x6e\xc3\x39\x6b\x44\xd8\x4f\x43\x96\x6d\x9f\xee\xa0\xa8\x6e\x29\x80\xd6\xa1\x2b\x78\xa3\x36\x48\xb6\x38\x4b\x7b\x49\xe4\x60\x9d\x7a\x8f\x4b\x50\x4b\xaf\xbe\x67\xb5\x6e\xbc\x63\x33\x61\x32\xa4\xc3\x8b\xa0\x0b\xb5\x1e\x4f\x91\x77\x7d\xab\xb2\xd7\xb3\xc4\x75\x24\x35\x39\x66\xe8\x7c\x34\x37\x06\x1a\x72\x2c\x29\x96\x20\xc5\xd5\xb0\xbd\x69\xee\xea\x52\x54\x9a\xd3\x2a\x91\x33\x1b\xc4\xa9\xa1\xe8\xe4\x20\xb4\x36\x36\x72\x5a\x44\x17\x9d\x41\x82\x2b\x24\xc9\x40\x45\x54\x92\x39\x36\x38\xdf\xa3\x99\x21\xce\x32\xfe\x65\x2a\x07\xda\x98\x72\x76\xe9\x50\x1c\xbc\xce\xbd\xbd\xea\xa2\xa0\x86\xf6\xa4\xcb\xd4\x44\xea\x66\x5d\x8d\xf6\x39\xfe\xa3\x6d\x42\x97\xe5\xcc\xdc\x31\xf9\x1a\x6e\x60\xd8\xac\x47\x8c\xb1\x4b\x4b\x43\x37\xcb\xa7\x53\xca\x91\x1a\xfd\x02\xb6\x11\x13\x04\xc6\x6c\x34\x75\x1e\xdb\xaa\x42\x84\xeb\x9b\x47\xbe\xb8\xe3\x06\xdb\xc9\x5a\x94\xea\xc8\x38\x74\x44\xdf\x1b\x83\x33\xe2\x92\xb8\xec\x0c\x1f\x72\xfb\x30\x16\xff\x5b\x79\x96\xdd\xb6\x04\x28\xce\xa1\x30\x7c\xe2\xe6\x49\x09\x3d\x96\x14\x57\xfb\xce\xcf\x87\xe9\x6f\x5b\x06\x57\x75\x4c\x7f\x54\x67\xb8\x26\x31\xfb\xb5\x03\x93\x6d\xb0\xd0\xed\x56\xd2\x56\x28\x67\x31\xe4\xc7\x40\x00\xf3\x80\x1f\x08\xb8\x5b\x2b\xdf\xc4\xcc\xcb\xd7\x32\x83\xc7\xac\x89\x19\x82\x40\x84\x06\xe4\xab\xf0\x9c\xe5\x6b\x4d\x60\xd5\xd4\x95\x45\xc6\xfb\x68\xed\x2d\x98\xa6\xaf\x0f\x28\x27\x6f\x5a\x72\x1a\x72\xd1\x21\x62\x2f\xea\x6c\x4b\xb2\x17\xe8\xb0\xe4\x53\xce\x20\x2c\x41\xac\x20\xae\x11\xc3\xac\x63\x1c\x74\x22\xad\x76\x62\x8a\x9a\x5a\xb7\xc0\x4b\xa7\xd2\x6f\xa8\xd8\x20\x72\x5b\xa1\x3f\xf6\x48\xdf\x9f\x4a\x48\xb6\x11\xc0\xeb\x26\xb0\x00\x12\x98\x65\x2b\x98\xdc\x99\xe4\x3d\x6c\x29\x47\x72\x74\x0f\xfe\xe7\xed\x9b\x5f\x08\x29\x7f\xe7\xd8\xd4\x6e\x1f\xb6\xd5\xa4\xc8\x2b\x04\xd3\x63\x4d\x20\x41\xc9\x16\xe6\x1b\xaf\x2f\x00\x84\xd6\xa2\xad\x58\x9b\x0f\x84\x79\x3a\x73\xf0\xef\x3e\xc3\x82\x82\x52\xcc\xfb\x9a\x82\x7d\x3d\x9d\x82\xbf\xfc\xc5\x49\xb1\xfa\x27\xeb\x43\x25\x98\xc7\xfb\xac\xcb\x22\xaf\xd1\x47\xf4\x40\xc6\x11\x23\x7e\x83\xc8\xef\xa2\xf4\x17\x04\x53\x54\x85\xc1\x1b\x58\x93\x57\x6f\x05\x7b\x82\xb1\x23\xe4\xe7\x8d\xa6\x19\x8c\x29\x51\x1e\x06\xff\x78\xfd\x31\x88\x00\x67\x3b\xa9\xf6\xc8\x70\x29\xda\x99\x60\x06\xa1\x65\x1b\x30\x06\x50\x22\x19\xef\x25\x8d\xbf\xae\x1b\x0a\x5f\x7d\xc0\x79\x42\x5d\xcd\x16\x93\x53\xef\x70\x44\x79\x63\x2a\x28\xd1\xe9\xb2\xa8\x3b\x64\xa5\x58\x7d\xfa\x97\x15\x92\xcf\x9d\xfc\xdf\xde\x7f\xf0\xce\xbe\x7b\x66\x7f\x2a\x72\x82\x72\xf2\xea\xe3\xb1\x64\xf1\x03\x58\x96\x19\x4e\x20\x65\xd3\xf5\xa7\xba\xc8\x03\x0b\x43\x9e\x86\x46\x90\xbf\x58\x7d\x1a\xdb\xb3\xcc\xf7\x8b\x5b\x91\x53\xe3\xe4\xbd\xa2\x33\xc2\x00\x96\xf8\x9a\x6d\xd4\xd7\x52\xcd\x46\xaa\x99\xe0\x0e\xcb\xb6\x78\xd9\xbe\xd6\x48\xa4\x63\x82\x5f\xd2\x9d\x93\x25\x38\x39\xe3\xf1\x56\x4f\xd4\x38\x45\x64\x11\xa4\x90\x40\xd3\x53\x71\xb7\xb0\x8e\x7b\xe4\xa3\xdd\x58\x98\x7c\x6d\x4c\x74\xe2\xf2\xd4\xa8\x5c\xa9\xdd\xb0\xbd\x6a\x22\xcf\x81\x26\xca\x19\x90\x4f\xea\xf4\x3e\xe0\xaa\x0e\x95\x31\xf5\x4a\x1b\xfd\x6b\x77\x97\xb0\xd9\xff\xc6\x3e\x99\x6c\x37\x27\x4b\x0c\xc4\x7a\x19\x28\x08\x72\x97\x8e\x8c\xf1\x3b\x22\xe9\xcf\x22\x02\x8d\x45\x31\x58\x04\x3c\x47\x93\x7e\x11\xd0\x18\x2b\x86\xeb\x75\x13\x3b\x38\xdb\x5a\xba\xc3\x58\x2b\x6d\x9c\xc8\xe1\x59\x3d\x23\x6b\x15\x31\xe4\x84\xf7\x48\x62\x1f\x71\x83\x79\x2b\xc7\x7b\x09\x6f\xdb\xd3\xdd\x61\xbc\x95\x16\xa1\xc6\x5b\xf7\x01\xcb\x73\x88\x6d\x4b\xee\x50\xb1\xf5\x1d\x54\x0f\x63\xad\x1c\xee\x59\xac\x2d\x2b\x74\xf0\x31\x54\xb5\x0c\x4c\x45\xf0\x18\xb0\xdd\x3c\x88\x41\x40\x51\x04\xa7\xb1\x65\x57\x64\xf0\x78\x5b\xc2\x7d\xdd\x19\x1d\xae\xf9\xfe\x0e\x78\xde\xa9\x92\xfa\x62\xaf\x66\x6e\xd4\xf3\x10\x7d\x4d\x8a\xb2\xa4\x06\x9a\xee\xca\x41\x9e\xce\x33\x97\x68\xe7\xdc\x6b\x08\xc0\xdf\x40\xc0\x48\x09\x40\x2c\x8a\x66\x67\x0e\x93\xa3\xb6\x87\x99\xa3\x07\xaf\xcf\x39\x90\x81\x14\x85\x83\x81\xa4\xd8\x6c\x32\x74\x5b\xa1\x12\xc1\x0b\xbb\xe0\x6d\x83\x18\xbc\xb4\xd9\xb9\x90\xb5\x4b\x7f\xd7\x30\x4f\x8b\xdd\x85\x5d\xb3\xb6\xde\xae\x79\xad\xa3\x6b\x3a\x39\x6a\x8f\xfb\x0a\x3f\x9b\xd9\xd9\x65\xb5\xb5\x16\x50\xf0\x05\x8d\x37\x6d\xe5\x3e\x06\x5c\xe8\xa8\x8c\xb0\x43\x03\xe3\x20\x29\xa0\xae\x7c\x10\x1b\xfa\x5c\xfa\xf8\x66\x0c\x0f\x04\xfb\x0a\x07\x31\xd8\x57\xd8\xa3\x1f\x1c\x66\x23\xcf\x85\x51\xd9\x96\xef\x77\x7e\x21\xb8\x36\xa5\xa0\xc9\xa5\xc9\xf7\x3b\x7b\xae\xb9\xc6\x52\xb1\xe3\x34\x02\x45\xde\x2d\x65\x42\xcf\x5d\x07\xe0\x0a\x50\xf8\x47\xa1\xf9\x50\x0e\x57\x19\x4a\x83\x18\xb8\xd6\x29\xce\x71\x67\x6c\xa8\x2c\xb2\x0c\xfb\x8d\x63\xc0\x35\xb5\x18\xdb\x44\x31\xa7\x1d\x67\x2c\x26\x14\xb3\xb6\xfa\xe1\xc4\xde\xd8\x0f\x28\x38\x60\x02\xaa\x9b\x01\x8b\x78\x8c\xcd\xe0\x3f\xf9\x88\x77\xa8\xd8\x93\x50\x8c\x36\x02\x37\xd3\xe9\xd4\x1d\xa9\x52\x90\xf1\x58\xca\x58\x55\x99\xac\x79\xe8\xd8\x50\x18\x6c\x57\x4c\x3c\x2d\x92\xfd\x0e\xe5\x44\xf5\xef\x5e\xce\xe7\x60\x94\x15\x30\xc5\xf9\x66\x64\x6d\xba\x39\xee\x0f\x8a\x37\x58\xcd\xb8\x4e\x38\xfa\xf9\xfd\x5b\xb1\x34\xdf\x14\x30\x45\xe9\x28\x62\x28\xbd\xf1\x13\x2b\xe6\x66\xa2\x8c\xad\x92\xc8\xc1\xb6\x58\x79\x56\xe3\x6d\x8d\xe0\xc4\xea\x8b\x0d\xc1\x84\x26\xd6\x5f\x2d\xa8\x26\x5f\x45\x7f\xb7\xe0\x9a\x3c\x14\xfd\xbd\x85\xa3\x9b\x78\xcc\x7e\x95\xb2\x66\x07\x8f\x95\xe7\xb6\x9e\xee\x5b\x31\xfb\xd5\xdb\x70\xe8\xb6\x4c\xdb\xc8\x62\xfd\xd5\x86\x62\x3b\x43\xac\xbf\xb6\x50\x5c\xa1\xc4\xe2\xbf\x99\x4e\x23\xf3\x67\xd4\x64\x6b\xc8\xf2\x2d\xe9\x3f\x47\x1a\x0c\x75\xda\xb8\x31\xe7\x8d\x57\x6e\x71\xda\x69\xc1\xd0\xca\x46\xfa\x36\x88\xbc\xce\x10\x7d\xfc\xfb\xf1\xd7\x34\x0c\x18\x6a\x75\xe5\xa0\x09\x3b\x8b\xa9\x50\xbe\xb8\x59\x4e\x08\x7a\x20\x42\x36\x8d\xe8\x33\x9a\xa4\xb8\x16\x7b\x61\x90\x17\xb9\x3c\x43\x50\x12\xe9\xb7\xc5\xbd\x96\x27\x80\xea\xa4\xc2\x25\x7d\x7e\x3e\x12\xfd\x75\x57\x40\x21\xc0\x33\x8e\x55\x56\x24\x77\xca\x20\x15\x85\xf4\xd7\xe9\x74\x1a\x31\x5e\x77\xa7\xcf\x52\x88\x98\xfd\x2a\x73\xbc\x2d\xee\x63\xf6\x2b\x73\x46\x8d\x09\xde\x41\x9c\xfb\x12\x65\xa9\xd6\xb9\xe5\xd2\x74\xdb\xe4\x4d\x7a\x27\x3b\xe9\xe2\xa4\x0c\x05\x08\x74\xc1\xb8\x65\x96\x7a\x6e\x99\x4c\x76\xf0\x41\x3f\x75\x11\xf9\x7d\x72\xbb\x5c\x2e\x58\xae\xe9\xd2\x7b\x28\x65\xc3\xb3\x4c\x55\x2b\x66\x9c\x4c\xd8\xa1\x49\xd7\x1c\x38\xb5\xa9\xa3\x9d\x22\x83\xc0\x3a\x67\x6c\x77\x28\x4b\xfd\x06\xad\x39\xe0\xe4\xea\x65\xdc\x9c\xb0\x43\xfc\xb9\xcb\xb4\x94\x3c\xe1\x04\x8e\x87\x51\xb8\xc6\x9b\x20\x72\xc8\xc2\x78\x36\xc8\x80\xb8\x70\x10\x0e\x52\x98\x99\xea\xe3\x95\x31\x12\x8e\x33\x64\xd1\xcb\x5f\x73\x12\x92\x2d\xae\x39\x63\xd4\xd0\xa5\x7a\x10\x65\x0f\xd0\x48\x76\xb0\x55\x20\xf8\x3f\xbf\x6d\x8f\x43\x65\x96\x4c\xad\x78\x96\x2a\xa4\x7a\x42\xd7\x84\x9d\xcb\x47\x39\xf5\xf9\xac\x4d\x62\x40\xb7\xce\x1d\x60\x8b\xd3\x14\xe5\xbe\x6e\x85\xea\xec\xe9\xd5\xec\xca\xd7\x97\x9d\x97\xf6\x59\x43\xb4\x92\xd8\x58\x1f\x19\xdb\x61\xda\xb6\xf5\xdf\x8f\x3f\x65\xb0\xae\xdf\xc1\x1d\x0a\x83\x14\x11\x88\xb3\x60\xac\x29\x53\xee\x82\xdf\xb3\xa6\x4d\xef\x49\x85\x20\x41\x3f\x8b\xd7\xff\xaa\xe0\x86\xfe\x37\xf3\x93\x32\xac\xb2\xdc\xd7\x2b\x61\xb9\x7c\xb4\x53\x63\x2b\xb4\x23\xce\x32\xf1\x6f\x39\x04\x2f\x14\x37\x15\x87\x21\x96\x37\x08\x5b\xcc\xfb\x6c\x82\xf3\x1c\x55\xbf\x7c\x7c\xfb\xc6\x75\x72\x2d\x12\x02\x6d\x64\xae\x98\x96\xbc\x7c\xc8\xe9\x07\x7f\xfe\x09\xf4\xeb\x9a\xd6\xc1\x14\x10\x19\xd6\x2c\xe3\xc0\xe3\x4e\x02\x76\x68\x69\xcf\x8b\x60\x47\x18\x64\xd8\xf4\x50\x32\x6c\xf0\x82\xdf\x23\xa4\x0e\x30\xb8\x72\x31\xc6\xbe\x60\xcb\x84\x61\x02\xcb\x12\xe5\xe9\x4f\x2c\x3b\x26\xc3\x4e\x07\xc7\x80\x62\xed\xec\xe3\x5c\x61\x2f\x8b\x7b\xd4\x5d\x7e\x0d\x5f\x8d\xa1\x75\x3b\x8b\xaf\x43\x5f\x06\x48\xd5\x69\x9a\xf1\x5e\x6f\x2b\xbc\xd9\x12\x73\xf9\x64\x43\x5a\x66\x68\x6d\x35\x6c\xc7\xd2\xec\x1c\xae\x7d\x94\x7a\x25\x72\xdc\xc1\x12\x7c\x65\xba\x8a\xb6\x49\x22\xda\xb1\xb0\xd6\xb2\x0d\xbe\xb9\x6e\x79\x99\x11\xce\x4e\x4a\x34\x60\x17\x29\x12\xab\x50\x51\x39\xba\x07\x3f\x43\x82\x4c\xff\x58\x0e\xfc\x6a\xce\x20\x29\xd3\xa8\xf9\x19\x8e\xc1\x2b\x9d\x20\xcf\x5c\x91\x82\xc0\xcc\x47\x6c\xab\x02\xa8\xf1\x61\xb0\x9c\x0e\x31\x94\xdd\x7f\x05\xbe\xf9\x76\x0a\xae\xd9\x20\xc0\xb5\xc0\xfa\x0a\xfc\xe7\x74\x0c\xbe\x02\xe1\x5b\x48\xb6\x93\xdf\x7e\xa5\xf5\xff\x61\xb2\x1b\xd7\xef\xe0\xbb\x30\x3d\x53\xc4\xa8\xad\x79\x33\x9d\x82\x2b\xf0\xdd\x14\x7c\x05\x58\x07\x49\x51\x87\xa9\x41\xe4\xd1\x01\x57\xe3\x5c\x83\x63\x07\xae\xe0\x7b\x06\x68\x51\x31\xa9\x11\xf9\x91\x90\x0a\xaf\xf6\x84\xea\xeb\x20\x02\xc1\x5b\x0a\x19\x7d\x33\x05\x6f\xe4\xc3\x8f\xe0\xbb\x69\xf4\xdd\x14\x4c\xc1\x34\xba\x61\x85\x37\xdf\x4d\x2d\x45\xe0\xc7\x75\xf3\x9d\x44\x46\x9f\x74\x6c\x54\x4b\x3c\x50\x85\x11\xd1\xa7\x63\x6f\x26\xdd\x25\x14\xfb\xfb\xf8\x0c\xc2\x1d\x6c\x30\x33\xc3\x8b\x0a\xa3\x9c\x40\x11\xe0\xf6\xaa\xa1\x97\xd2\xe9\x11\xe7\x93\xe7\xab\x25\x6a\x42\x85\x9a\x17\x76\x8f\xf3\xb4\xa0\x6e\x14\x49\xb6\x6f\x51\x8a\x61\x18\x84\x0a\x39\x31\x28\x8b\x8a\x54\x10\x93\x71\x30\xa6\x96\x5c\x63\xc4\x29\x40\x02\x61\x2f\xaa\x0c\xe6\x69\x9d\xc0\x12\xf5\xe3\xea\x36\xea\x9b\x63\x6b\xae\xc2\x87\xb4\x61\x41\xb3\xc8\xd0\xf9\xbe\xeb\x4d\xa6\xd7\x09\x3c\xde\x29\x9f\x80\x58\xfc\x37\x23\x33\x7a\x26\x97\x9a\x47\xc5\x26\xd1\xbe\xa0\xf3\xf8\x34\xa6\x2e\x4b\xa4\xfa\xf2\xa6\xee\x80\x6e\x9f\xc1\xd4\xe5\xbd\x3e\x9d\xa9\x9b\xd5\xdc\x4c\x53\xa2\xee\xf4\xc7\x8c\xb8\xcb\xeb\xfc\x59\xed\x4b\x3d\xcd\xea\xc5\x37\x46\xcd\x60\x63\x56\x6f\xb6\xef\x34\x07\x04\x03\x14\xdf\xd3\xcc\xef\x1d\x64\x58\x7a\xf3\xd6\xd8\x48\xed\x84\x35\x30\x07\x3b\x78\x87\x6e\x59\x72\x26\x26\x68\xc7\x2f\x8b\xb3\xef\x2e\x64\x35\xa5\x82\xfe\xfb\xda\x3c\x70\xce\xb0\xc3\x1d\x4c\x32\x9c\xdc\x8d\x3a\x1c\x63\x60\x2a\x40\xf9\xb9\x1b\xaf\x0a\x6c\x86\xe5\x68\x60\x19\x0f\xf2\xcf\xd4\x9b\xf2\xcf\xce\xd5\x60\xe7\x27\xd4\x1b\x07\x73\xc0\x5c\xf3\x8d\xb6\x33\xdc\xa1\x63\x60\x1e\xd1\xc8\x29\xa8\xb0\xbb\xcd\xbe\xb2\x4c\x66\x39\x6c\x2e\x51\x22\x9b\x79\x58\x02\x0a\x1d\xab\xb8\xd6\xe1\x1e\xab\xaa\x85\x64\x9e\x80\x2b\x4d\xc5\xf7\x89\x01\xa0\x2b\x5c\xba\xec\xd8\x79\x5e\x6f\x5e\x55\xc4\x6f\xe3\x8f\x2f\x34\xed\xcf\x58\x07\x43\x7c\x00\x5d\x86\x3d\x1f\xe2\x61\xca\xc5\x52\x14\xc3\xdd\x1f\x1e\x62\xe2\x89\xa8\xea\x9a\xcb\xb0\x61\x51\x24\xd4\x87\x0c\x64\x87\x1d\x80\x54\xc0\x7c\x57\x20\xba\xda\x51\x21\x8b\xf8\x37\x82\xc4\x0d\x3a\xc3\x00\x14\xe9\xf7\x73\x71\xbf\xcd\x0e\xfc\x88\x51\x7c\x5f\x97\x30\x07\x8c\xde\x39\xa9\x60\x72\xf7\x43\x70\x65\x93\xa3\xdd\xde\x1b\x5f\x05\xdf\x5f\xd3\x66\x3f\x04\x57\x4e\x71\xd2\x91\x52\x77\xd5\x83\x94\xbb\xed\x2d\xba\x99\xe5\xf4\x3a\x5a\x35\xde\xae\xfe\x35\x8e\xa6\x5a\xfd\xc4\x90\x53\xff\xb0\xa1\x5f\x19\x63\xe7\xae\xbe\x9b\x4e\x89\xcd\x47\xa8\x7d\xa5\xdd\x81\x84\xcd\x12\xbb\x62\xa2\x56\xda\xde\x49\x03\x3a\x9c\x76\x61\x04\xfd\xd0\x3d\x2b\xf6\xd4\xf0\x4b\x11\xb7\x35\x2a\x61\x05\x49\x51\xfd\x70\x3d\x68\x7c\x4e\x1a\x38\x2e\x37\xff\xde\xb0\x3a\x37\xff\x94\xef\xaf\xb4\x22\xcb\xef\x6d\xba\x65\xd6\xec\x98\x2a\x3c\x77\xb7\xec\xaa\xa8\x5f\xba\xdc\x62\x40\x7b\xf6\x48\x01\x27\xea\x02\x7c\x9d\xb2\xa5\x8a\x6b\x07\x83\xdc\xcb\xd7\xad\x38\x5c\xea\x36\xc3\x9a\xc5\xc0\x9e\x67\xa6\x71\x26\x4d\x8c\x21\x47\x06\x6d\x52\x9c\x6e\xbb\x7f\x49\x2f\x88\x62\x19\xe6\xf0\x30\x28\x64\x99\x3f\xa6\x11\xe1\x64\xb6\xea\x6b\x01\xc3\xe9\xfb\x7f\xe4\x75\xfd\x73\x9c\xa7\xe6\x38\xcf\xe9\x3e\x75\x9d\xe7\x5c\x5f\x83\x8f\xef\x7f\x7e\x1f\x83\x35\x7e\x00\x59\x51\x94\x60\x9f\x57\x3c\xe7\x41\xdb\xb0\xdb\xe3\x9d\x36\xf9\x77\xd8\x09\xa1\xf2\xc1\x18\x35\xaf\xc2\x51\x3f\x49\xb6\x28\xb9\x63\x51\xb2\x61\xd9\xc7\x3d\xe8\x2e\x3c\x74\x1a\xd0\xb1\xb4\x59\x05\xc1\x56\x16\x8b\xef\x5a\xa5\x21\x55\x46\x2a\xee\x1a\x6f\x02\xcf\x71\x96\xf4\x82\x6f\x9b\x34\x25\x2f\xe7\x15\x30\x15\x9b\x52\xdc\xc9\x67\x01\x42\xc1\xdd\x8d\x9f\x86\xab\x4a\x37\xff\x14\x66\xee\xe0\xc3\x00\x5e\xb6\x50\x2a\xae\xb6\x74\x22\xbd\x9e\x0f\x2c\xaf\xcd\x3e\xb8\x96\xe3\xdc\xc1\x07\x37\x82\x27\xe5\x26\x3f\x6d\x77\x9d\x92\x3e\x2f\x53\xed\x53\x84\x14\x1d\x70\x82\x3a\x3f\x40\xd0\xed\xc7\xcb\xce\x3a\xce\xc8\x58\x0f\xc6\x21\xd9\x25\x2e\xbd\x9d\x96\xec\x8a\xe3\x17\xfa\x6a\x11\x90\xd6\x67\x53\xcf\xf4\x85\x64\x93\x14\xd5\x49\x47\xa3\x14\x1f\xcc\x56\xb4\x85\xc7\x5f\x0a\x94\xfc\x14\x67\x33\xfd\xe4\xa9\x58\x88\xb4\xc2\x1c\xee\xac\xbb\xf1\x4c\xf1\xdc\x9f\x47\x5a\x7d\xef\x23\x8c\x2f\x97\xfa\x1e\x93\x64\xeb\x62\x43\xb2\xed\xe8\x09\xe7\xe5\x9e\x98\xad\x92\xad\xd1\x17\x11\x39\xa9\x4c\x9b\xac\x8a\x87\xde\x06\x38\xe5\x2c\xa3\xe2\x74\x1b\x5c\x19\xdc\xe8\x6b\xcd\xdb\x31\x1c\x4d\x4b\x9c\xba\xda\xb5\x4a\xb7\x01\x94\x79\x9c\xfc\x08\xe9\x26\xb0\xda\x5c\xa2\x1d\x80\xbe\x82\x79\x4f\xa1\xd3\x99\xd1\x35\xc5\xc6\x3d\xb0\xb1\x27\x74\xa3\xea\x6c\x33\x11\xdf\x31\xb5\x19\xec\x5a\x14\x70\x85\xac\x24\xce\x0c\x1a\xbc\x5e\x17\xd5\x19\x53\x55\xdf\x6b\x11\x8f\x64\xdb\x5d\x9f\x41\x47\x6c\x4e\xa9\xa7\x0b\xa7\x1b\xa2\xbe\x37\xea\xfb\x43\x38\xa7\x7e\x3b\xb3\xbd\xda\xa1\xab\xd6\xa7\xca\x04\xb1\xb5\xfa\x17\x0a\x90\x0f\xea\xf8\x19\x42\xe4\xcd\xce\x32\x24\x48\xde\x35\x33\x3c\x57\x58\xcb\xd5\x79\x52\xeb\xdf\xb2\xf2\x77\x28\xdf\x5f\x62\xe3\x37\xac\x58\x15\xe9\xf1\x92\x80\xb3\x4a\x00\x0b\x19\xdf\xd6\xfb\x55\xd8\x65\x5d\x71\x4a\xfd\x76\x15\xca\xf7\x9a\x45\x45\x11\xfb\x76\x7a\xf6\xed\xc9\xb1\x33\x8b\xcc\x26\xdd\xf9\xf9\x88\x97\x5a\x78\xb7\x2b\x48\x6e\x5e\x18\x33\x4d\x23\x6f\x00\xd8\xbe\xf0\xe8\xc8\x47\xe9\x0b\x78\xbd\xb4\xbd\xd7\x91\xcf\x7b\x1d\x79\xdd\x71\x6d\xc6\x20\x76\x07\xf9\xbb\x06\xd2\xb6\x34\x9d\x76\x9b\x6c\x3b\xfa\xe0\x32\x27\xfb\x62\xeb\x1a\x88\xab\x53\xaa\x1a\x8a\xf2\xb7\xaa\x28\xe1\x06\x72\x19\x75\x4b\x5f\xa7\x24\xf1\xdc\xac\xcf\x92\xa4\x27\x9f\x21\x29\x92\xe7\xcf\x90\x97\x59\xd6\x0c\x9d\x2b\x99\x67\xaf\x99\xbe\xf9\xbd\x58\x66\xbc\x52\xf8\x34\x02\x51\x23\x42\x70\xbe\xa9\x3f\x4f\x28\x4c\xf5\x98\xa2\x9c\x2b\xc8\xce\x95\x49\x81\x99\x5f\x6d\xe8\x52\x30\x68\x75\xfa\x34\xb1\xcd\xed\xc1\x9c\x62\xa6\xc4\x7e\xd5\xa7\xbb\x05\x88\x16\x5b\xe0\x45\x5e\x36\x57\x28\x2b\x60\x3a\x98\xc9\xd6\xf1\x6a\xc1\xef\x96\x4d\x38\x1e\x1f\xfd\x7d\x54\xc8\x8d\xff\x42\x2a\x7a\x55\x6a\xef\x8a\x36\xe4\xde\x8a\x88\xda\xde\xb4\x94\x8f\x8b\x8d\x2c\xc7\x64\x9d\x67\xde\x7d\x81\xde\x55\xab\x6b\x66\x18\x79\x5d\xdd\xf7\x19\x7a\x4d\xef\x3d\x96\xde\x80\x60\xef\x50\x53\x8f\x92\x1b\x37\x4f\xba\xc9\xc7\xeb\xe4\x93\x69\xfa\x35\xb5\xe2\xd9\x63\x02\xca\x60\xe4\x25\x66\xa0\x1a\xc6\x1d\x12\xba\x75\x85\x6b\xbd\x8b\x8b\x5d\x8d\xbe\x58\x8b\xaa\x47\xe7\x15\x3a\x5c\xac\xec\xfb\xc9\x64\x69\x9a\x4f\x41\x66\x73\x4b\xec\xf9\x88\x65\xb7\xa5\x9f\x82\x58\x8a\xe8\x62\x32\xb5\xe8\xbf\xc8\xd2\xea\x0f\xfb\x9b\xe9\x4f\x5a\x45\xc7\x46\xc1\xee\x69\x3f\xc5\x98\xb5\xbb\x77\x9f\x3d\x47\x3d\x64\xf3\x3b\xde\x4f\x49\x36\xc3\x78\x11\xd9\xf6\xe7\x24\xba\x8e\x0f\x2f\xca\x6b\x1e\xa0\x3a\x06\xac\x40\x35\x37\xa5\xae\x12\xba\x15\x5c\xc3\xba\x46\xa4\xbe\x66\x0b\x6b\x52\x1f\x36\x7d\x47\xb8\xcf\x4f\x49\x06\x8f\x26\x21\xda\xd2\x68\xbf\xda\x73\xfe\xa2\xf0\x4d\x80\xfc\x5c\x81\x75\xc9\x8d\xf7\x35\x68\xf9\x68\x63\x62\xfb\x5f\x51\xc2\x04\x93\xe3\xfc\x66\x32\xed\xe1\xea\xd3\xf4\x33\x9d\xfc\xd5\x77\xdc\xdc\xf5\xa1\x84\xb3\x07\xad\x2c\xbe\x67\x1d\xf4\xa0\x7e\x1c\x83\xbe\x2c\x94\x34\xf0\xa6\x61\xf7\xe1\xb3\xf3\xf0\xd8\x30\x29\xda\x4b\x12\xee\x5b\xc1\xfd\x49\xa2\x29\x24\xd0\x3a\x4b\xa4\xf4\xe9\x92\x3e\x62\x7a\x65\x04\x70\x0e\xcc\x2f\x7d\x03\xff\x85\x0d\x0a\xda\x7f\x45\xc3\x5e\x8d\x02\xd8\x15\x88\xf6\x5c\xc8\xe0\x3d\x3d\xd5\x15\x0c\x76\x93\x90\xd3\xde\xa7\x4e\x15\xe9\x3b\xe3\xc6\x06\xb0\x3c\xbd\x76\xf0\xcd\x98\x64\xd1\xb5\x6f\x14\x3b\x76\x5f\xd8\x01\xff\xed\x74\x6c\x01\xd7\x88\xea\x46\x09\xf3\x6f\xe0\xdb\xa9\x83\xbb\x2b\x94\x81\x39\xc3\x7b\x05\x46\xf1\x08\x5c\x81\x30\x98\x06\xe0\x8a\xb6\x1e\x4f\xea\x0c\x27\x28\x7c\xf5\xb5\x8d\x9c\xa0\x07\xf6\x09\x21\x87\x1a\xd5\x17\xa2\x14\x03\xc7\x68\xb0\x5e\xd4\x9e\xf1\x31\xe4\xbe\x3c\x5a\x56\xb9\xc0\xfa\xed\xb4\x97\x73\x3e\x16\x5f\x82\xa9\xb3\x91\x68\x33\xb3\x5a\x78\xbf\xa6\x37\x54\x43\x78\x56\xfc\xf0\x24\x7f\x43\x45\xe8\x9a\xc1\xf2\x33\x64\x82\x70\xd7\xb7\x02\xfa\x63\xf0\xde\xc0\x88\x23\xa2\xef\xd7\x30\x5d\x21\x0f\xff\xdd\x79\x67\x32\x8d\x19\x7a\x3f\x59\x1f\x73\x9d\x30\x55\x4c\xd1\xff\x6f\x00\x00\x00\xff\xff\x19\x55\xa9\xe7\x02\x75\x00\x00")

func assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppJs,
		"assets/app.js",
	)
}

func assetsAppJs() (*asset, error) {
	bytes, err := assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.js", size: 29954, mode: os.FileMode(436), modTime: time.Unix(1491123854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBackSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xcd\x6a\x03\x21\x14\x85\xf7\x3e\xc5\xe1\x76\x9b\xc6\xe3\x74\xc8\xa2\xa8\x8b\xee\xfb\x10\x85\x58\x95\x4e\xc7\x10\x45\x43\x9f\xbe\x4c\x18\x86\xcb\x3d\x3f\xdf\xe2\xd8\xda\x23\x1e\xbf\xcb\x5a\x9d\xa4\xd6\x6e\xef\x5a\x8f\x31\xce\xe3\xed\x5c\xee\x51\x4f\x24\x75\xed\x51\x30\xf2\xb5\x25\x27\x13\x29\x48\x21\xc7\xd4\xf6\xd2\x73\x18\x1f\xe5\xe1\x84\x20\x26\x3e\x5f\xbc\xb2\x11\xb5\xdd\xcb\x4f\x70\xf2\x32\x73\x3b\xd9\xc1\xeb\x31\x25\xf8\xce\xcb\xe2\x64\x2d\x6b\x10\xaf\x00\xc0\xde\xbe\x5a\xc2\xd5\xc9\x27\x66\x9e\x0c\x09\x43\x9e\x66\xc2\x5c\x0e\x33\x17\xe2\x89\xb7\xf0\x27\xda\x2b\xab\xe3\x26\xb5\x47\xaf\xfe\x03\x00\x00\xff\xff\x97\x3e\xd8\x86\xd1\x00\x00\x00")

func assetsBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsBackSvg,
		"assets/back.svg",
	)
}

func assetsBackSvg() (*asset, error) {
	bytes, err := assetsBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/back.svg", size: 209, mode: os.FileMode(436), modTime: time.Unix(1490968217, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMainSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\xc1\x4a\xc4\x30\x18\x84\xef\x79\x8a\xe1\xf7\xba\x6e\xa6\xb5\xec\x41\x92\x1c\xbc\xfb\x10\xc2\xc6\x24\x58\x9b\xd2\x84\xa4\xf8\xf4\x52\x29\x2e\xc3\xcc\xc7\xcc\x61\x4c\x69\x01\xfb\xf7\xbc\x14\x2b\xb1\xd6\xf5\x55\xeb\xde\xfb\xb5\xbf\x5c\xf3\x16\xf4\x48\x52\x97\x16\x04\x3d\xdd\x6b\xb4\x32\x92\x82\xe8\x53\x88\xf5\x2c\x2d\xf9\xfe\x96\x77\x2b\x04\x31\xf2\xcf\xe2\x94\x09\x28\x75\xcb\x5f\xde\xca\xd3\xc4\x43\x72\x0e\xcf\xff\x57\x82\xcf\x34\xcf\x56\x96\xbc\x78\x71\x0a\x00\xcc\xfa\x51\x23\xee\x56\xde\x31\x90\x97\x89\x18\x6e\xbc\x0c\x3c\x79\x23\xa6\x07\x48\xfc\x88\x76\xca\xe8\x70\x44\x69\xc1\xa9\xdf\x00\x00\x00\xff\xff\xc0\x2d\x9c\xc4\xd0\x00\x00\x00")

func assetsMainSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsMainSvg,
		"assets/main.svg",
	)
}

func assetsMainSvg() (*asset, error) {
	bytes, err := assetsMainSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/main.svg", size: 208, mode: os.FileMode(436), modTime: time.Unix(1490968250, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsNextSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\xf1\x33\xbd\x5a\x33\x49\x55\xb0\x24\x1e\x7a\xef\x43\x14\xb4\x49\xa8\x5d\xc5\x84\x44\xf6\xe9\x17\x57\x61\x17\x96\x61\x06\xfe\xe1\xe3\xd7\x21\x59\x6c\xff\xd3\x25\x18\x72\x31\x2e\x9f\x42\xe4\x9c\xab\xfc\x51\xcd\xab\x15\x8a\x99\x45\x48\x96\x90\xfd\x10\x9d\x21\xc5\x4c\x70\xa3\xb7\x2e\x9e\x21\xf9\x31\x7f\xcd\x9b\x21\x06\x43\xf1\x7d\xa9\x2f\xb4\x45\x88\xeb\xfc\x37\x1a\x7a\xab\x79\x1f\x3a\x1f\xef\x67\x95\x54\x84\x5f\x3f\x4d\x0f\xd0\x17\x00\xa0\x97\x9f\xe8\x30\x18\xfa\x46\xdd\x94\x2d\x43\xca\xa6\x94\xcc\x7b\x92\x35\xe3\x4a\xe2\x05\x76\x07\x6c\x0f\xd8\x3d\x41\x2d\xec\x7e\x42\xb2\x7d\x71\x0b\x00\x00\xff\xff\x22\xf8\x97\x68\xec\x00\x00\x00")

func assetsNextSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsNextSvg,
		"assets/next.svg",
	)
}

func assetsNextSvg() (*asset, error) {
	bytes, err := assetsNextSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/next.svg", size: 236, mode: os.FileMode(436), modTime: time.Unix(1490506165, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xe1\x4a\x03\x31\x10\x84\xff\xdf\x53\x0c\xeb\xdf\xda\xec\xc6\xd6\x2b\x72\x39\xd0\xff\x3e\x84\xd0\x73\x73\x78\xde\x95\x26\x24\xc5\xa7\x97\x94\xd4\x62\x95\x90\x5d\x32\x7c\x99\x99\x2e\x24\xc5\xe9\x73\x9a\x83\x23\x1f\xe3\xe1\xc9\x98\x9c\xf3\x3a\x3f\xac\x97\xa3\x1a\xcb\xcc\x26\x24\x25\xe4\x71\x1f\xbd\x23\xcb\x4c\xf0\xc3\xa8\x3e\xd6\x47\x1a\x87\xfc\xb2\x9c\x1c\x31\x18\x96\xcf\x97\xfa\xa6\x53\x84\x78\x5c\x3e\x06\x47\x77\x1b\x2e\x87\xaa\x70\x5f\xad\xc4\x12\xde\xc7\x69\xba\x02\x7d\x03\x00\xdd\xe1\x2d\x7a\xec\x1d\xbd\xa2\xdd\xae\x1e\x19\xbb\xcb\x94\x0d\x17\xa9\xac\x2f\x32\x7f\x68\xb1\x67\x50\xe4\x67\x15\xb2\xa8\xbf\x7f\xe8\x4d\x91\xdd\xa5\xc7\xbc\xcc\x43\x2d\x71\x63\x5d\x3c\x98\xf1\x5c\xe2\xdb\x2d\x18\xb2\x12\x48\xfb\x9f\x5a\xd1\x6b\x9c\xd1\xbe\xa9\x23\x24\xed\x9b\xef\x00\x00\x00\xff\xff\x0a\xc1\xa7\x81\x72\x01\x00\x00")

func assetsPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPauseSvg,
		"assets/pause.svg",
	)
}

func assetsPauseSvg() (*asset, error) {
	bytes, err := assetsPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pause.svg", size: 370, mode: os.FileMode(436), modTime: time.Unix(1490523630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xd1\x4a\xc3\x40\x10\x45\xdf\xf3\x15\x97\xf1\x35\x76\xef\xae\x89\x11\xc9\x06\xf4\xdd\x8f\x10\x1a\x67\x83\x31\x29\xdd\x25\x5b\xfc\x7a\x69\x59\x29\x94\x32\xcc\xc0\xbd\x1c\xce\xf4\x71\x53\x9c\x7e\xe6\x25\x7a\x09\x29\x1d\x5e\x8d\xc9\x39\xef\xf2\xd3\x6e\x3d\xaa\x71\x24\x4d\xdc\x54\x90\xa7\x7d\x0a\x5e\x1c\x29\x08\xe3\xa4\x21\x95\xb0\x4d\x63\x7e\x5f\x4f\x5e\x08\xc2\xf1\xb2\x32\x54\xbd\x22\xa6\xe3\xfa\x3d\x7a\x79\x68\x78\x1e\x29\xc5\x63\x51\x59\x27\xf8\x9a\xe6\xf9\x0a\x0c\x15\x00\xf4\x87\xcf\x14\xb0\xf7\xf2\x81\x8e\xf5\x33\x61\x1b\xd6\x96\x3c\x27\xdb\x10\xbf\x62\x0a\xa8\x37\xc6\x97\x7f\xe1\xb2\x2e\x63\xb1\xdd\x18\x5d\x7b\x51\xbd\xa1\x6b\xeb\xae\x05\x61\x6b\x0b\xdb\xdd\x6b\x0b\x7a\x7d\x67\x74\xa8\xca\x89\x9b\x0e\xd5\x5f\x00\x00\x00\xff\xff\x74\x48\x45\x6f\x3b\x01\x00\x00")

func assetsPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPlaySvg,
		"assets/play.svg",
	)
}

func assetsPlaySvg() (*asset, error) {
	bytes, err := assetsPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/play.svg", size: 315, mode: os.FileMode(436), modTime: time.Unix(1490506353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrevSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\x31\x4c\xaf\xd6\xfc\x89\x5a\x4a\x49\x3c\xf4\xde\x87\x28\x68\x93\x50\x77\x15\x13\x12\xd9\xa7\x5f\x94\xc0\x2e\x2c\xc3\x0c\xfc\xc3\xc7\xaf\x43\xb2\xb4\x5f\xe6\x6b\x30\xec\x62\x5c\xbf\x84\xc8\x39\x37\xb9\x6d\x96\xcd\x0a\x05\x40\x84\x64\x99\xb2\x1f\xa3\x33\xac\x00\x26\x37\x79\xeb\x62\x09\xc9\x4f\xf9\x7b\xd9\x0d\x83\x40\x0a\xe7\xf2\x50\x69\x4b\x21\x6e\xcb\xff\x64\xf8\xad\xc3\x31\x5c\x1e\xef\xa5\x4a\x2a\xa6\x3f\x3f\xcf\x0f\x30\x54\x44\x44\x7a\xfd\x8d\x8e\x46\xc3\x3f\x24\xfb\xbe\xfe\x00\x7d\xf6\xb5\x04\xce\x24\x3b\xd0\x8d\xc5\xab\xc4\x29\xdb\x22\xf1\x24\xb5\xb0\xc7\x09\xc9\x0e\xd5\x3d\x00\x00\xff\xff\x27\x39\x48\xbf\xee\x00\x00\x00")

func assetsPrevSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrevSvg,
		"assets/prev.svg",
	)
}

func assetsPrevSvg() (*asset, error) {
	bytes, err := assetsPrevSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prev.svg", size: 238, mode: os.FileMode(436), modTime: time.Unix(1490506308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRandomSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xd1\x6a\xc3\x20\x18\x85\xef\xf3\x14\x87\x7f\xb7\x59\xfd\x75\x9a\x95\x11\x03\xdb\xfd\x1e\x62\xd0\x4c\xc3\xb2\xa4\x54\x89\x65\x4f\x3f\x6c\x2c\xdd\x42\x11\x85\xff\xf8\x9d\x73\xb4\x0d\x8b\xc3\xf9\x7b\x9c\x82\x25\x1f\xe3\xf1\x45\x88\x94\xd2\x2e\x3d\xed\xe6\x93\x13\x8a\x99\x45\x58\x1c\x21\x0d\x87\xe8\x2d\x29\x66\x82\xef\x07\xe7\x63\x19\x96\xa1\x4f\x6f\xf3\xd9\x12\x83\xa1\xf8\xb2\xa9\xab\x5a\x87\x10\x4f\xf3\x57\x6f\xe9\x41\x73\x5e\x54\x84\xc7\x12\x25\x15\xe1\x73\x18\xc7\x1b\xd0\x55\x00\xd0\x1e\x3f\xa2\xc7\xc1\xd2\x3b\xa4\x31\xb5\x32\x90\x7b\x53\x6b\xbe\x4c\xc6\xe0\x87\xc4\x5d\x50\xea\x95\x94\xcd\x8a\xca\xe7\xbf\xac\xdb\xb4\xef\xaf\xe5\xd3\x3c\xf5\xa5\x79\x13\xaa\x39\xb7\xbe\xa2\xe1\xba\xc9\x9f\x93\xb5\xcc\x5a\xce\xbf\xc6\x6e\x9f\xd1\xac\xd7\xff\x3d\x59\xd5\x37\x4f\x2b\x5c\x57\x95\x23\x2c\xae\xab\x7e\x03\x00\x00\xff\xff\xa2\x45\x96\xa5\x83\x01\x00\x00")

func assetsRandomSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRandomSvg,
		"assets/random.svg",
	)
}

func assetsRandomSvg() (*asset, error) {
	bytes, err := assetsRandomSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/random.svg", size: 387, mode: os.FileMode(436), modTime: time.Unix(1490535047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRepeatSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4e\xc3\x30\x10\x44\xef\xf9\x8a\xd1\x72\x2d\xf5\xc6\xad\xa5\x0a\xc5\x39\x70\xe7\x23\x10\x35\xeb\x88\x90\x54\xb1\x15\xa7\x7c\x3d\xb2\x71\x01\x55\x96\x3d\x1a\x6b\xf4\x76\xb6\x0b\xab\x60\xfb\x1c\xa7\x60\xc9\xc7\x78\x79\x52\x2a\xa5\xb4\x4f\x87\xfd\xbc\x88\xd2\xcc\xac\xc2\x2a\x84\x34\x9c\xa3\xb7\xa4\x99\x09\xde\x0d\xe2\x63\x35\xeb\xe0\xd2\xf3\xbc\x59\x62\x30\x34\x97\x4b\x7d\xd3\x09\x42\x5c\xe6\x0f\x67\xe9\xe1\xc8\xf9\x50\xfd\x78\xac\xa8\x56\x13\xde\x87\x71\xfc\x0b\xf4\x0d\x00\x74\x97\xd7\xe8\x71\xb6\xf4\x82\x93\xd9\x69\x83\xb6\x35\xbb\x23\x67\x63\x0c\xbe\x48\xd5\x98\xdc\xf1\x4e\x37\xdc\x34\x4f\xae\xb2\x4a\x70\x71\x6f\x11\x9b\xa5\x5c\xe1\xfa\x23\xbf\x15\xfe\x6d\x53\xcc\xb2\x59\x3a\x64\xbd\x16\xbd\xcd\x52\xd2\x37\xf5\x09\xab\xf4\xcd\x77\x00\x00\x00\xff\xff\x5e\x9e\x3f\xba\x36\x01\x00\x00")

func assetsRepeatSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRepeatSvg,
		"assets/repeat.svg",
	)
}

func assetsRepeatSvg() (*asset, error) {
	bytes, err := assetsRepeatSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repeat.svg", size: 310, mode: os.FileMode(436), modTime: time.Unix(1490535180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsSettingsSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xc1\x6e\x84\x20\x10\x86\xef\x3e\xc5\x64\x7a\x65\x97\x19\x44\xcd\x36\x6a\xd2\xde\xfb\x10\x4d\xd6\xa2\xa9\xd5\xcd\x42\x64\xd3\xa7\x6f\x14\x6a\xd3\xa4\xec\xa9\x31\x32\x01\xbe\xf9\xf8\xa1\xb6\x8b\x81\xdb\xc7\x38\xd9\x06\x7b\xe7\x2e\x8f\x52\x7a\xef\x8f\x3e\x3f\xce\x57\x23\x15\x11\x49\xbb\x18\x04\x3f\x9c\x5d\xdf\xa0\x22\x42\xe8\xbb\xc1\xf4\x2e\x4e\x96\xa1\xf3\xcf\xf3\xad\x41\x02\x02\x45\xdb\x8f\x6d\x56\x1b\xb0\xee\x3a\xbf\x77\x0d\x3e\x68\x5a\x3f\x8c\x0b\x87\xa8\x62\x85\xf0\x36\x8c\xe3\x0f\xd0\x66\x00\x00\x7b\xe7\x61\x3f\xf3\x1b\x9c\xe6\xa9\x8b\xd4\x46\x5e\x5e\x5d\x0f\xe7\x06\x5f\x80\x89\x44\x4e\x5b\x29\x09\x3e\x51\x26\x29\xae\x02\xc6\x3a\xcd\xe5\x24\x98\x08\xca\x50\x92\xb6\x2a\xec\xb3\xfe\x27\x2e\x84\x7f\x02\x4d\x42\xaf\xaf\xc9\x82\xf7\xa8\xf7\x6e\xa4\xff\x6a\x2a\x93\x3d\x05\x89\x82\xa0\x62\x51\x71\x32\x4b\x41\x82\x03\xc4\xea\x94\x4e\x1c\x54\xac\x4e\xf7\x5c\x1c\x65\x2b\xf6\xcb\x56\x4b\xd3\x66\x71\xb0\x8b\x69\xb3\xaf\x00\x00\x00\xff\xff\x38\xf2\x81\x5c\x8d\x02\x00\x00")

func assetsSettingsSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsSettingsSvg,
		"assets/settings.svg",
	)
}

func assetsSettingsSvg() (*asset, error) {
	bytes, err := assetsSettingsSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/settings.svg", size: 653, mode: os.FileMode(436), modTime: time.Unix(1490712532, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/app.css": assetsAppCss,
	"assets/app.html": assetsAppHtml,
	"assets/app.js": assetsAppJs,
	"assets/back.svg": assetsBackSvg,
	"assets/main.svg": assetsMainSvg,
	"assets/next.svg": assetsNextSvg,
	"assets/pause.svg": assetsPauseSvg,
	"assets/play.svg": assetsPlaySvg,
	"assets/prev.svg": assetsPrevSvg,
	"assets/random.svg": assetsRandomSvg,
	"assets/repeat.svg": assetsRepeatSvg,
	"assets/settings.svg": assetsSettingsSvg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{assetsAppCss, map[string]*bintree{}},
		"app.html": &bintree{assetsAppHtml, map[string]*bintree{}},
		"app.js": &bintree{assetsAppJs, map[string]*bintree{}},
		"back.svg": &bintree{assetsBackSvg, map[string]*bintree{}},
		"main.svg": &bintree{assetsMainSvg, map[string]*bintree{}},
		"next.svg": &bintree{assetsNextSvg, map[string]*bintree{}},
		"pause.svg": &bintree{assetsPauseSvg, map[string]*bintree{}},
		"play.svg": &bintree{assetsPlaySvg, map[string]*bintree{}},
		"prev.svg": &bintree{assetsPrevSvg, map[string]*bintree{}},
		"random.svg": &bintree{assetsRandomSvg, map[string]*bintree{}},
		"repeat.svg": &bintree{assetsRepeatSvg, map[string]*bintree{}},
		"settings.svg": &bintree{assetsSettingsSvg, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

