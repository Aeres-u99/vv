// Code generated by go-bindata.
// sources:
// assets/app.css
// assets/app.html
// assets/app.js
// assets/back.svg
// assets/main.svg
// assets/next.svg
// assets/pause.svg
// assets/play.svg
// assets/prev.svg
// assets/random.svg
// assets/repeat.svg
// assets/settings.svg
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAppCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xdd\x8e\xa3\x36\x14\xbe\x9e\x3c\x85\xb5\xa3\x95\x76\xaa\x10\x01\x09\x99\x19\xaa\x56\xbd\xea\x4b\x54\xd5\xca\x80\x93\xb8\x43\x6c\x64\xcc\x4c\x66\xab\xbc\x7b\x65\x6c\x8c\xff\x48\x48\x2a\x6d\xd1\x54\x0b\xb1\xbf\xf3\x9d\xe3\xf3\xeb\x82\x56\x9f\xe0\xdf\x05\x00\x00\x44\x1f\xa8\x78\xc3\x3c\xe2\xe8\xc4\xa3\x16\xff\x40\x11\xac\xfe\xe9\x5a\x9e\x83\x24\x8e\xbf\xfe\xda\xaf\x39\x42\xb6\xc7\x24\x07\x71\x73\x92\x1f\x0a\xca\x2a\xc4\x8c\x0f\x0d\xac\x2a\x4c\xf6\xea\xcb\x79\xb1\x38\x20\x58\x21\xb6\x04\x3b\x4a\x39\x62\x4a\x56\x43\x5b\xcc\x31\x25\x39\xd8\xe1\x13\xaa\xe4\xd6\x1f\x11\x26\x15\x3a\x09\x79\x62\xa7\xdc\xa8\x36\xd4\x68\xc7\x0d\x29\x1f\xb8\xe2\x07\x93\x18\xa7\x8d\xf1\xf3\x01\xe1\xfd\x81\xe7\xe0\x79\x20\x61\x09\x2f\x28\xe7\xf4\x38\x85\x76\x5e\xfc\x71\x44\x15\x86\xe0\x1b\x65\x18\x11\x0e\x25\xcf\x86\x32\xce\x20\xe6\x4f\x0a\xc4\x42\x34\x65\x26\x1b\x8d\x7b\x9e\x02\xab\x21\xa9\xda\x12\x36\xe8\x2a\xda\xab\x05\xb6\x58\xb4\xa8\x14\x10\x9e\x19\x61\xd1\xd2\xba\xe3\xc8\xb0\xc6\x8b\xde\x3a\x1a\xb6\x37\xc6\x2c\xfd\x6c\x41\x81\x23\x08\x1e\x83\xeb\x01\xfd\x5f\x92\x19\x4a\x88\xff\x3f\xd6\xb8\xe5\x06\x72\x85\xdb\xa6\x86\x9f\x39\x20\x94\xa0\x5b\x4d\xe7\x13\x55\xac\xb2\x8b\xa4\x5e\xaf\x70\x72\xb4\x55\x8b\x8e\x10\xfb\x26\xd1\x82\xfa\x23\x92\x40\xb4\x1e\x1c\x17\xb7\x3c\x6a\xf9\x67\x8d\x22\xfe\xd9\x20\x53\x47\xcd\x29\xd1\x62\x4a\x5a\x53\x96\x83\xc7\x4d\x2c\x1e\x2f\xe6\x40\x92\x4e\xc6\x99\x94\xbb\x6a\xea\x91\xe2\xe8\x1e\x0c\xd5\x90\xe3\x77\x5b\x70\x24\xdd\xc4\x0d\x9a\xb5\x66\xb3\xa3\x44\x66\x82\x1c\x24\x2f\x76\xc4\x47\x43\x10\xb5\xb4\xc6\x15\x48\x9a\x13\x78\xdc\xc5\xe2\x31\xc9\xb4\x94\xec\xaf\x70\x19\xa4\x6e\xe2\xf9\x02\x46\xab\xe8\x55\xda\x2e\xea\x7b\xaf\xda\x46\x9a\xc6\x24\xb3\xe2\x0c\x96\x6f\x4b\x60\x7d\xab\x11\xd9\xf3\x43\xf0\xe3\xf7\x16\x35\x90\x41\x4e\x99\xf3\x33\xaa\x61\xd3\xa2\xea\x4a\x20\x0e\xf4\x92\x4d\xc8\xa6\xe9\x14\x3f\x3f\xe9\x39\xab\x6c\xe9\x4c\x9a\x70\xbb\x1e\x84\xc8\x14\x7e\x80\x15\xfd\xc8\x7b\xd3\x25\xca\xeb\x3f\x0e\x58\x50\x73\xd0\x5c\x55\x6d\xd8\x31\x7a\xef\x82\xb5\xc1\x92\x7b\xc1\x38\xe6\x35\xba\x62\x6d\x69\xaf\xd1\x93\x7a\x27\x48\xdc\x34\x5f\xc2\xba\xfc\x26\x52\x16\x88\x40\x92\xc6\xcd\xe9\xe9\x82\xb7\xd7\x98\xa0\x68\x4c\xed\xf3\xc8\x2f\x87\xb7\x69\x75\x20\xe3\x63\xbe\xb9\x98\xc6\x53\x2d\xd4\x55\x6f\xda\x95\x60\x5d\x74\xc7\x99\x81\x97\xdd\x10\x78\x8e\x80\x55\x05\xf9\xb5\x33\x91\x67\xe0\xe8\x90\x4c\xeb\x60\x66\xc1\x97\x58\x3c\x81\x46\xc3\xe5\x11\xd6\x37\x44\x24\xb5\x89\x8c\xca\xdb\x07\x3d\x33\x92\x42\x07\xed\x68\x95\xa6\xc1\x56\x29\xa8\xc1\x7c\xa7\x18\x73\xb4\xd4\x23\x0d\x1a\x74\x33\x21\x7a\x31\xb3\x07\x90\xe5\x4e\x86\xde\x72\x78\x93\x24\xf5\xab\xca\x44\xfa\xbd\x42\x1c\xe2\xda\xa8\x91\xc1\x56\x2f\xe4\x0a\xf3\x4b\xfe\xcf\xe0\xe5\x14\x75\x43\xa2\xc2\x70\x7a\x2c\xaf\x15\x32\x0e\x62\x9d\x0e\x35\xda\xa4\xaa\x70\xc2\xad\x6c\xb2\xf6\x9a\xd9\xe0\x19\xa7\x5b\x1b\xda\x2e\x0c\x3d\x94\xd6\x44\x2a\xb6\x1d\x5e\x3d\xc1\xda\xfb\x43\x3a\x6c\x5e\x6c\x41\x96\x3d\x25\x65\x33\x98\xe6\x36\x3d\x23\x62\x8d\x15\x98\x1b\xfd\xa3\xcc\x92\x12\xce\x74\x67\x75\xbd\xe6\x6a\x3e\x56\xf1\x11\x78\x88\x31\x7a\x71\x16\x91\xfd\x83\x0b\x10\xdb\x5d\x86\xe9\xbd\x5a\xaf\xcc\xf1\x88\x75\x3c\x26\x58\x58\xbe\xed\x19\xed\x48\x15\x0d\x4a\xee\x76\xc9\xe6\x75\x2d\x7f\x76\xda\xe0\x91\xe7\xef\xe0\x17\xc5\xd5\x96\x7b\x5e\x2c\x8a\x8e\x73\xdd\xfc\xd2\x8e\x8b\x34\x96\x83\x38\xd4\x23\x82\x59\xf3\x9b\xcf\x91\xed\x0b\xf8\x2d\xcd\xb2\xe5\xf0\x17\x3f\xc9\x24\xf2\x78\x44\xa4\x13\x01\x86\x48\x07\x08\x7c\x37\xfe\x09\x2c\x5e\x9e\x10\x8f\x86\xdf\xcd\xf6\x48\x1a\xe5\xe1\x72\x56\xd7\x36\x37\x2d\xf0\xa0\x0e\x40\x9e\xe2\x83\xdd\x68\xce\x4f\x35\x82\xc7\xaa\x18\x9b\xb2\x70\xea\x32\xd6\x0a\x5f\x75\x97\x3e\x87\x97\xb6\x88\x73\x4c\xf6\xad\x82\x7e\xf0\x9a\xa4\xc9\x9c\xe8\xa7\xea\x69\x9e\xd9\xd7\x99\x2c\xfb\xce\x28\xeb\x1b\x23\xa3\x2f\x9a\xc3\x38\x33\x92\xa5\x75\x74\xf8\x28\x06\x80\x2b\x47\x31\x8c\xfa\xa3\xe3\xe4\x07\xfa\x3e\xce\xeb\xd3\x61\x73\x0e\x6c\x85\xa5\x68\x72\xa6\xf7\xfe\xd9\xff\x27\xbd\x4c\xc4\x9b\x61\x33\x45\x33\x4d\xa6\xe3\xc3\x1e\xcc\x67\xbb\x91\x23\xe8\xa6\xc2\x08\x42\x77\x16\xc1\x30\x3a\xdb\xc2\xbe\xbf\xd3\xba\x3b\xa2\xf9\x32\xd3\x24\x34\xde\x3f\x9b\x83\x74\xa0\x89\xee\x33\xdc\x93\x4f\x6b\xd3\x77\x47\xb7\x3a\x72\xc0\x52\x03\xa0\x28\x30\x00\x76\x9c\x8e\xa8\xf7\xea\xab\x8b\x44\x50\xe3\xb1\x02\xf6\x0e\xad\x29\x49\x0f\x5b\x02\xf7\x4b\xbe\xa3\x65\xd7\xfa\xdf\x95\xfb\xff\xe4\xdc\x1c\x72\x53\x97\xd9\x4a\xbc\x1b\xf4\x94\xe2\xaf\x3a\xff\x7a\xeb\x19\x7a\xf7\xd7\x6f\x27\xd7\x13\x74\xe2\x37\xac\x9f\x1f\xf0\xde\xce\x7b\xe2\x7d\xf0\x14\x4c\x9a\x8e\xff\x25\x7a\x94\xdf\xbe\x30\x48\xf6\xe8\xcb\xdf\x0a\x68\x30\xe0\x8b\x53\xce\x5f\x03\x57\xa1\x3a\xfd\x0d\x57\xa8\xb0\x69\x10\x64\x90\x94\x56\xeb\x33\x72\x73\x6e\x78\xd4\xe0\xc5\x60\x85\xbb\x76\x18\x4a\x66\xd2\xcd\xf3\x41\x68\x5b\x63\x81\xc2\x0f\xdd\xb1\x70\xae\x74\x6f\xe4\x33\xa4\xc1\x8d\xd7\x82\x3a\x13\x85\x41\xf9\xab\xc3\xb8\x9f\x6e\xbc\x28\xb8\xb3\x08\x07\x51\x43\x51\x6e\x37\x07\x40\xcf\xd0\xd9\x54\x86\x94\x43\x18\x43\x0d\x82\xe6\xed\x9f\x77\xf5\x31\xb1\x0f\x92\x8a\x1e\xfd\x7d\xf7\x14\xf0\xff\xab\xe3\xf3\xad\x3a\x06\x9b\x83\x99\x0a\x66\xd6\x70\xd4\x76\x45\x5f\xf3\x2f\xf4\xd3\x6a\xf6\xd8\xae\xb6\x5b\x7b\xfc\x58\xaf\x57\xeb\xb5\x39\xf9\x64\x99\xca\x58\x03\xea\x4d\x57\xa9\xd3\xd9\xd4\xb9\xe4\xd7\xf0\x96\xa5\x27\x67\xa2\xcd\xa5\x26\xbe\x8a\xc5\x13\x40\xb5\xb2\xda\x7d\xd8\x65\x2c\x1e\x81\xfd\x5f\x00\x00\x00\xff\xff\xed\xb8\xa3\x17\xab\x19\x00\x00")

func assetsAppCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppCss,
		"assets/app.css",
	)
}

func assetsAppCss() (*asset, error) {
	bytes, err := assetsAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.css", size: 6571, mode: os.FileMode(436), modTime: time.Unix(1490864431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x8f\xdb\x36\x10\xbd\xfb\x57\xb0\x3c\x47\xe1\x2e\x72\x29\x02\x4a\x97\x7e\xdc\x8a\x16\x68\x5a\xa0\xa7\x62\x44\xcd\x5a\xac\x29\x92\x20\x47\xb2\xf5\xef\x0b\x92\x92\x57\x72\xec\x38\xa7\x25\xdf\x8c\xde\x7c\xbc\xe1\xac\xe5\x0f\x3f\xff\xfe\xd3\x97\x7f\xfe\xf8\x85\xf5\x34\x98\xe6\x20\xd7\x3f\x08\x5d\x73\x90\x03\x12\x30\xd5\x43\x88\x48\x35\xff\xeb\xcb\xaf\xd5\x8f\x5c\xac\xb8\x85\x01\x6b\x3e\x69\x3c\x7b\x17\x88\x33\xe5\x2c\xa1\xa5\x9a\x9f\x75\x47\x7d\xdd\xe1\xa4\x15\x56\xf9\xf2\x81\x69\xab\x49\x83\xa9\xa2\x02\x83\xf5\xeb\x07\x36\x68\xab\x87\x71\x58\x01\xbe\x67\x05\xef\x0d\x56\x83\x6b\xb5\xc1\xea\x8c\x6d\x05\xde\x57\x0a\x3c\xb4\x06\x37\x91\x66\x8c\xdf\xf3\x61\x24\xa0\x31\x56\x2d\x84\x2a\xd2\xbc\x63\x68\x0d\xa8\x53\x45\x01\x6c\x34\xa3\x42\x4b\x89\xcf\x68\x7b\x62\x01\x4d\xcd\xb3\x7b\xec\x11\x89\x33\x9a\x3d\xd6\x9c\xf0\x42\x42\xc5\xc8\x59\x1f\xf0\xad\xe6\x02\x62\x44\x8a\x02\xbc\xff\x98\xe0\xe6\x20\xa3\x0a\xda\x13\x8b\x41\xed\xcd\xff\x45\xde\x48\x51\xac\xcd\x41\x92\x26\x83\xcd\x34\x49\x51\x4e\x07\x29\x96\xb6\xb7\xae\x9b\x17\x11\x30\x34\x07\xc6\x18\x93\x16\x26\xa6\xbb\x9a\x0f\x68\x47\x5e\xb0\x8c\xb7\x23\x91\xb3\x4c\x19\x88\xb1\x6e\x41\x9d\x96\x3c\x0b\xce\x1b\xa9\x87\xe3\x3e\x95\xe4\xf4\x31\x4e\x47\xce\xc0\xa4\x0e\x80\x3a\xa5\xbc\xca\x07\x8f\x98\x07\xd0\xf6\x29\x73\x72\xda\x30\xa7\xeb\x73\xe6\x88\x44\xda\x1e\xe3\x53\xf6\xd5\x71\x13\x61\x85\x6e\xa3\x48\x61\x61\xba\x69\x5c\x1c\xdb\xdc\x3b\x96\x35\xad\x79\xa7\xa3\x37\x30\x7f\x66\xd6\x59\xdc\x76\xd4\x99\xf7\x4b\x06\x8c\x6e\xf6\x29\x07\x34\x0e\xba\x9b\x84\x0b\x78\xcd\x43\x0a\xa3\x9f\xf1\x28\x67\xdf\xf4\xf1\x86\xa7\x80\x77\x78\x96\xa2\xca\x94\xa4\xb9\x90\x11\x15\x69\x67\x73\x79\x46\x47\x5a\xaa\xb8\x56\x20\x45\x3a\x49\xb1\xf8\xdd\x7c\x51\xe4\x29\x8e\x4a\x13\x2e\x49\xf1\x3c\x8d\xbc\xb1\x8e\xe5\x93\x14\xc9\xb8\xf8\x45\x0f\x6b\xf2\x1c\x02\xe5\x98\xd6\xb1\x72\x94\x22\x99\xef\x78\xa2\x01\x1f\xb1\xcb\xae\xa9\xe7\xda\x1e\x77\xbe\xa3\x59\x3d\x3b\x24\xd0\x26\xc9\x39\x7e\x23\xf3\xd2\xa2\x6f\x2a\x29\xfb\x4f\xcd\xdf\xce\x8c\x03\x4a\xd1\x7f\xba\xc6\xd9\xc8\x9c\xd4\xd0\xd6\x8f\xb4\xf4\x5f\xf5\xa8\x4e\xad\xbb\xf0\x32\x2d\xbd\x3b\xff\x3b\x65\x02\xde\xfc\xd9\xbb\x33\x2b\x17\x66\x5d\xbb\x97\x36\x11\xfd\x06\x97\xc5\xfe\x99\xed\x48\xed\x38\xb4\x18\xf8\xd2\xef\xcb\xca\x98\xb6\x5f\xcd\x5f\x5f\x38\x1b\xe0\x92\x0e\x2f\xa9\x18\xf4\x05\x9b\xc0\x8c\x58\xd0\x9d\xfc\xb7\x2d\x49\x5d\x57\x06\x33\x39\x86\xe0\xc2\x7b\xed\x37\x5a\x66\xeb\x2a\xe7\xb5\x1d\x5b\x89\x3a\x2c\x7b\x49\xa7\x11\x2c\xee\x1b\x68\x55\x4b\x8a\x25\x66\x73\xd8\x65\xf2\xe6\x1c\x7d\xb5\xa9\x92\x26\x65\xb9\x3c\x78\xf9\x3e\xe0\xb4\x1f\xfe\xb5\xf4\x64\xb9\xb7\x02\x12\xbe\x79\xfe\x8b\xdb\xf5\xa9\xec\xd9\x0d\xcc\x0f\xd8\x0d\xcc\xc2\xc3\x18\xf1\x6e\x0c\x03\xf3\x36\x86\x81\xf9\x61\x0c\x8b\x17\xba\x1f\x23\x59\xee\xb1\x27\x7c\xc3\xbe\xb8\x3d\x5d\x5e\x6b\x2f\xaf\x23\xf9\xde\xd2\xed\xb8\x05\xb0\xc7\x65\xba\x5e\xf2\x68\xbd\xbe\xbc\x94\xc1\x7a\xfd\x0e\xee\xcd\x0a\xf9\x5a\xac\x80\x1e\x81\xee\x54\x54\x0c\x9b\x9a\x0a\xf0\x7c\xf1\x07\xb0\x9d\x1b\xee\x31\x66\xc3\x96\x31\x03\x0f\xfa\x24\xc5\x3a\x7d\x52\x94\x7f\x9c\x69\x45\xe6\x9f\x31\xff\x07\x00\x00\xff\xff\x49\x98\xeb\x25\xde\x08\x00\x00")

func assetsAppHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppHtml,
		"assets/app.html",
	)
}

func assetsAppHtml() (*asset, error) {
	bytes, err := assetsAppHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.html", size: 2270, mode: os.FileMode(436), modTime: time.Unix(1490863833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x8f\xe3\x36\x92\xef\xf3\x2b\x38\x02\x6e\x2d\x5f\x7b\xdc\xee\xdc\xed\x3e\xc8\x71\x82\xdd\x64\x6e\x93\xc3\x4c\x12\x64\xe6\xe1\x00\xc3\x68\xd0\x12\x6d\x73\x2c\x4b\x0a\x45\xbb\xc7\xe8\xf8\xbf\x1f\xf8\x25\xf1\x53\x52\x7b\xba\x07\x77\xb8\xeb\x07\x59\x22\x8b\xc5\x62\x55\xb1\x58\x55\x24\xfb\x04\x09\x38\x9d\xc0\x82\x3d\xfe\xfc\x13\x3c\xbe\x02\x00\x80\x72\xfd\x29\x01\x8f\x97\x09\xff\xa8\xcb\x62\x6b\x7e\xd5\xda\x27\x2d\x09\xdc\xa2\xb6\xe0\x50\x66\x28\x4f\xc0\x63\x8e\x6b\xca\x4a\x65\xf1\x09\xa3\x87\x04\x3c\x22\x42\x4a\xc2\x81\xc1\x01\xe2\x42\xbc\x29\xd0\x09\x48\xcb\x62\x83\xb7\xb2\x1e\x15\x47\xf1\x56\xe5\xf0\xbc\x86\xe9\x5e\x7c\xa1\x1c\x56\x35\xca\xc4\x47\x46\xca\x2a\x2b\x1f\x0a\xad\xa7\xb4\x2c\x28\x29\x73\x20\x48\xba\xcc\x5f\x9d\x4e\xd3\x72\xfd\x09\x2c\x40\xbc\x39\x16\x29\xc5\x65\x11\x8f\xc5\x30\xd5\x37\xd8\x22\xfa\x2b\x79\x9b\xd7\x28\x3e\x4c\xc0\x7e\x02\x4e\x63\xc9\x08\xf6\x47\x10\x3d\x92\x02\xec\x01\x2e\xc0\xe1\x7b\x70\x58\xee\x57\x20\x01\xa7\x39\x07\xb8\xbc\xd2\x40\x1e\x1b\x3c\x49\x8b\xf2\x32\x7f\x75\x19\xc7\x63\x4e\x07\x63\x9e\x8f\x10\x26\x04\x0a\x59\x55\x53\xc3\x40\x27\x60\x8f\xce\xf5\x04\x94\x74\x87\x88\x4e\x12\x83\xc7\xf3\xe6\x73\x53\x12\x10\x63\x46\x1f\x83\xd7\x01\x15\xf0\x1e\x9d\xc1\x82\xd7\x2e\xf1\x6a\x6e\x54\xe3\x0d\x88\x59\x35\x2e\xb8\x6c\xed\xd6\xda\xf0\x58\xf5\x72\x8f\xce\x16\x82\xcb\x2b\xf7\x4d\xb6\xe0\x84\xeb\x8c\x62\xb4\x34\x9c\xf1\x0e\xd7\x1d\x6d\x37\x81\x41\xda\x2e\x00\xb1\x3e\x54\xeb\xc5\x02\x44\x7f\xcf\xd7\xc7\xc3\x87\x92\xd0\xc8\x8f\x84\xc2\xad\x24\x64\x29\x60\xa3\x95\x22\xa7\x13\x2d\xa1\xb8\xa6\x43\xf1\x72\xe0\x81\x88\x19\x0d\xb2\xc1\x8b\x61\x7e\x0a\x3f\x64\x17\x13\xf0\xf4\xce\x9e\x87\xed\xbe\xe6\x9a\x92\x35\x7a\x66\x68\x9b\x57\xcf\x3c\x33\xbc\xb5\x02\x9a\x36\x8e\x96\x45\x09\x46\xe0\x86\x4f\xa1\x1b\x30\x5a\x8d\xc6\xb6\x42\xd7\x94\xf8\x67\xae\x3d\x65\xeb\x92\x50\x31\x13\x47\xa3\xf9\x75\x93\x59\xa1\xb8\x59\xf8\xc8\x65\xb3\x7b\x02\x46\x60\x34\x0e\xcf\x49\x89\xc1\x67\xbe\x1a\x50\x9f\x1d\x9b\xe8\xb5\xbc\xbc\x2d\xa9\x29\x49\xd8\x43\x94\x30\x8b\x17\x8f\x5b\x8b\x57\x87\x4c\x1e\x23\xc5\xe6\x5c\xed\xb2\x4e\x9b\xe2\xf5\xf4\x00\xab\xd8\x68\x60\x73\x48\x42\x2f\x05\x53\x24\x09\xd3\x9a\x12\x5d\x30\xab\x96\x3f\xe3\x29\x23\xa3\xc1\x09\x62\x38\x01\x6b\x1b\x29\x53\x67\xb8\xbc\x5b\x81\x6f\xc1\x7a\x79\xb7\x1a\x83\x47\xd5\xcf\x9b\xbb\x79\xa3\x9c\xaa\x8c\x15\xe9\x1d\x98\x34\x6b\x8d\xeb\xe5\x6c\x35\x07\x17\x47\xa3\x8e\x05\xfe\xc3\xcf\x98\x20\x5f\x36\x38\xa7\x88\x68\xc3\x10\xa3\xc5\x60\x02\x6a\x94\x6f\x7c\x03\xc2\x6c\x76\xce\x3a\x0c\x3e\x25\x47\x64\xd9\xfa\x76\x76\x2b\xce\xfa\x67\x0d\x18\x8d\xc1\xeb\x05\xf0\x00\xa1\x7c\xb3\xc4\xe0\x0d\xb8\x5b\x69\xb0\xd7\x10\x11\x6c\xb1\x81\x79\x6d\x37\xd1\xc4\x61\x33\x5b\x70\xce\xc3\x6e\x51\x11\x56\x45\x8b\xe5\x5e\x6d\xe4\x1d\x98\xb4\xf0\x09\xbe\x61\x13\xdc\xd3\x81\x2e\x1f\x8d\x79\x92\xb7\x1b\xce\x54\xd9\x6c\xb9\x59\xf9\x5a\x76\x33\xc2\x64\x86\xfb\xe5\x65\xba\xc9\x33\xc7\x5a\xb0\xf9\x93\xf0\x67\x6b\x11\x98\x06\x27\xfc\xd9\x96\x09\xba\x13\xf9\xeb\xb1\x15\xc2\x97\x0c\x3a\x48\x04\xb1\xba\xa5\x5c\xe2\x59\x51\x7a\x24\x04\x15\xd4\x5f\x7a\x9f\xc3\x9a\xde\x1f\xca\x0c\x6f\x30\xca\xc0\x02\x44\x91\x06\x23\xbd\x44\xab\xa5\x28\xed\x6c\x99\xe3\x35\x81\x84\x19\xf1\x96\x03\xc6\xea\x98\x80\xe5\xaa\x1d\x34\x88\xfe\x89\x0a\x82\xb4\xd2\x8b\x8d\xaa\x8f\xd0\x0d\x66\x9e\xe1\x63\x74\x2a\xf3\xe3\x81\x61\x7a\x8c\xea\x5d\xf9\x10\x25\x5c\x4c\x13\x10\x1d\xe0\xe7\x28\x01\x77\xb3\xd9\xe5\xf2\xaa\x35\xae\xf0\x64\x78\x58\xba\xae\x50\x72\xb6\x34\x27\x2f\x53\x98\x7f\x10\x02\x98\x4a\x4e\xff\xe7\x87\x5f\x7f\x61\x86\x13\x17\x5b\xbc\x39\xc7\xac\x74\x3c\x0f\xb7\x6a\x28\xb5\xda\x89\x72\xad\xe5\x05\xa4\x90\xa6\x3b\x10\x23\x5b\x7f\x6f\x6f\x41\x45\xf0\x09\x52\x04\xd6\xa4\x7c\xa8\x71\xb1\xb5\x16\x32\x8d\x79\x25\xcc\x86\x8f\x8f\xcd\x27\x67\x8c\xbe\xe9\xa3\x8f\xbd\x82\xa4\x46\x9e\x66\x21\xdb\xe2\xed\x48\x0e\xdf\xd3\x95\xc9\x30\x4f\x67\x0e\xe7\xcc\xee\xbe\x9c\x8f\x8c\x87\xb1\xc4\xef\x4c\x6b\x36\xd4\x84\x3f\x5b\x6d\x96\x53\x2b\x51\x2f\x4e\x8d\xa9\xcb\x89\xbf\x58\x6b\x25\x26\x5c\xa2\x5e\x9c\x1a\x07\x9f\xaf\xb8\x6d\x25\x67\x54\xa2\x5e\x9c\x1a\x1b\x9f\xb7\xd8\xa0\x82\x07\xa4\xe2\x57\x73\x78\xe0\x09\x25\xfc\xa9\xf5\x50\x42\x86\xb0\x84\x99\x65\xda\x98\x6d\xe3\x61\xf1\x94\x45\xba\xa6\x79\x03\xad\x7d\xfb\xf8\xfb\xdb\xb7\x5d\x56\xc5\x14\x71\xc4\xec\x6d\x94\x38\x4a\xe5\x78\xea\x3f\x42\x8a\xb8\xc7\xce\x3d\x6b\x56\x80\xeb\xf4\x97\xe3\x61\x8d\x08\xfb\xfa\x48\x60\xba\xd7\x3e\x31\xcd\x39\xf8\x06\xe7\x28\xd2\xed\x18\xeb\x93\x29\x83\xaf\x4f\xa7\xd3\x2a\x87\xb8\xb0\x9b\xeb\xf4\x31\x20\x28\x7d\x7d\x1f\x50\x43\x07\x5b\xf8\xa2\x95\x03\xa2\xb5\xba\xb4\xaf\x8d\xad\x1d\xca\x2b\x01\xff\xe2\xdc\x69\xba\x79\x6e\xbe\xb8\x30\x2b\x2f\x5f\xb8\x12\x0c\x67\xcb\xd7\xd1\x19\xd5\xcb\x57\x65\x8a\xed\x69\x57\x19\xb3\x92\xda\x3a\x92\x41\x0a\xed\xc0\xad\x89\x97\x80\xf2\xdf\x64\x42\x82\xcd\x59\xc7\xe5\x6b\x3c\x99\xa9\xb4\x2e\x3c\x31\x01\x1a\x6f\xb8\x16\x11\x07\xeb\x68\xc2\x31\xf0\xfa\xa5\x10\xc7\x4a\x5f\x28\x95\x1d\x51\x74\x90\xb2\xa4\x05\x3c\x04\xd7\x75\x0e\xc3\x1c\x08\x06\x18\xb5\x88\x94\x37\xa9\x2d\x62\xd3\x1c\x15\x5b\xba\x63\xfe\xa4\x13\x02\x10\x49\xab\x06\xbe\x9c\xad\x96\x77\x2b\x9b\x34\xd0\xae\x1b\x2a\xcd\x33\x37\xa2\x3b\x16\x6c\xf5\x11\xab\x06\x15\x8f\x4d\x82\x09\x4f\x1e\xf0\x91\x84\x62\xbc\x2e\x82\x38\x63\x49\xc3\x56\x27\xc4\xaa\x42\x74\xf1\xbe\x1b\x9a\x18\x83\xfc\x44\xd8\x0c\xad\xca\x2a\xb6\xd6\x6a\x0d\x84\xad\x15\x71\x97\x6c\xb3\xf2\xa1\xd0\x49\x3a\xc1\xfc\x88\x86\xf2\xab\xcd\xf1\xf9\x44\x4f\xc2\x83\x10\x8d\x1a\x5e\xf1\xc9\xba\x5a\x06\x74\x85\x05\x6d\x2c\x62\xf5\x30\xdd\x61\xc6\xb1\xde\xc5\x4b\x1e\xdf\xf1\x81\xe8\x6a\x1d\xe0\x8a\xc6\x0b\xb8\xae\xed\x78\xcc\x49\x7f\x4e\x38\x23\x64\x0c\x59\xa3\x1c\xa5\x14\x65\xf3\x2f\x95\x22\x0b\x08\x5c\xd5\xb7\x32\x9e\x0c\x51\xff\x14\x61\x7f\x8a\xae\x86\xc7\x65\x49\x1b\x36\x7b\xc2\x42\x9e\xf7\x51\x8d\x42\x71\x21\x8f\xdb\x15\x90\x26\x9b\x50\x34\xb8\x26\x08\xee\xfb\xc2\xc0\x56\x19\x14\xe6\x25\x36\x85\x3d\x44\xd4\x4e\xc4\xba\x47\xe7\xf1\xaa\xd3\x61\x7e\xca\x1c\x91\xfe\xd3\x90\x69\xdb\x67\x3b\x18\xaa\x7b\x06\x60\x74\xe8\xcb\x2c\xe8\x0d\xd2\x1d\xce\xb3\x5e\x12\x05\x58\xa7\xdd\x13\x1a\xd4\xd2\x6b\xae\x59\x6d\x8c\xe9\x59\x4c\xb8\x0e\x99\xf0\x32\x23\xc0\xbc\xc7\xcb\x24\x38\xbf\x75\xdd\xeb\x99\xe2\x26\x92\x9a\x9e\x73\xf4\x74\x34\x77\x16\x1a\x7a\xae\x18\x96\x28\xc3\x64\xd8\xda\xb4\xf0\x75\x29\x2b\x6d\xb1\x2a\xe4\xdc\x07\xf1\x5a\x28\x26\x1c\x84\x36\xd6\x42\xce\x8a\xd8\xa4\xb3\x48\xf0\xe5\xcb\x38\xa8\x4c\x99\xf1\x40\x04\x17\x47\x34\xb7\xd4\x59\x25\x67\x6c\xe3\xc0\x1a\x33\xce\xae\x3c\x86\x43\xd4\xf9\x97\x57\x53\x15\xf4\xbc\x93\x0a\x71\x9a\x34\xd2\xbc\xab\xd1\xb1\xc0\x7f\xb4\x4d\xd8\xb4\x9c\xdb\x2b\xa6\x98\xc3\x0d\x0c\x97\xfa\x84\x33\x76\xe5\x58\xe8\x66\xfa\x74\x6a\x39\xd2\x53\x33\xc0\x75\x62\xa2\xc8\x92\x46\x53\x17\xf0\xad\x08\xa2\xc2\xde\x3c\x8a\xc9\x9d\x34\xd8\x2e\xce\xa4\xd4\x47\x26\xa0\x27\xec\xbb\x71\x38\x27\x42\x13\x57\x9d\xb9\x2d\xe1\x1f\x26\xf2\xb7\xd5\x67\xd5\x6d\x4b\x80\x16\x1c\x4a\xc7\x27\x69\xde\xb4\xbc\x58\xc5\x70\xb5\xdf\x62\xf3\x92\x3d\xdb\x32\xb8\xae\x13\xf6\xd0\x83\xd7\x9a\x26\xfc\xe9\x66\xcd\xda\x4c\x96\x3f\xac\x64\xad\x50\xc1\x13\x9c\x8f\x91\x04\x16\xd9\x28\x10\x89\xb0\x56\x7d\x49\xc9\xab\xcf\x2a\x87\xe7\xbc\x49\x68\x81\x48\x86\xf2\xea\xb3\xa6\x90\x34\x1f\x55\x99\x0b\xa4\xad\x83\x05\xb3\xec\xed\x09\x15\xf4\x5d\xdb\x7f\x43\x1f\x3a\x4d\xf8\x87\x2e\x5e\x45\xe7\x12\x9d\x56\x42\xc6\x1c\xc2\xd1\x3c\x02\x71\x8d\x38\x66\x13\xe3\xa0\xfd\x51\xbd\x13\x5b\xb7\xf4\xba\x25\x5e\x79\xad\x7c\x43\xc5\x16\xd1\x7b\x82\xfe\x38\x22\x73\x41\xaa\x20\xdd\x4d\x00\xde\x34\x99\x04\x90\xc2\x3c\x5f\xc3\x74\x6f\x93\xf7\x79\xc7\x38\x52\xa0\x07\xf0\x5f\xef\xdf\xfd\x44\x69\xf5\xbb\xc0\xa6\x77\xfb\x79\x47\xa6\x65\x41\x10\xcc\xce\x35\x85\x14\xa5\x3b\x58\x6c\x83\xce\x3f\x90\x66\x8a\xb5\xe2\x6d\x3e\x50\x1e\xda\x2c\xc0\xbf\x87\x3c\x09\x06\xca\x30\x1f\x6b\x06\xf6\xcd\x6c\x06\xfe\xf2\x17\x2f\xc5\xfa\x9f\xaa\x8f\xb5\xb4\x95\xe8\xb3\xae\xca\xa2\x46\x1f\xd1\x67\x3a\x9e\x70\xe2\xb7\x88\xfe\x2e\x4b\x7f\x42\x30\x43\x24\x8e\xde\xc1\x9a\xbe\x79\x2f\xd9\x13\x8d\xc7\xc3\xd3\xd3\x17\x8b\x31\x15\x2a\xe2\xe8\x9f\x6f\x3f\x46\x13\x20\xd8\x4e\xc9\x11\x59\x31\x44\x2b\x09\xee\x01\x3a\xce\x00\x67\x00\x23\x92\xf3\x5e\xd1\xf8\xf3\xa6\xa1\xf0\xcd\x07\x5c\xa4\x2c\xb6\x6c\x31\x79\x0d\x8d\x40\x54\x34\xbe\x81\x96\x88\xad\xca\xba\x43\x57\xca\xf5\xa7\xff\xb3\x4a\xf2\xa5\xc2\xff\xed\xd7\x0f\x41\xe9\xfb\x25\xfb\x43\x59\x50\x54\xd0\x37\x1f\xcf\x15\x4f\x18\xc0\xaa\xca\x71\x0a\x19\x9b\x6e\x3f\xd5\x65\x11\x39\x18\x8a\x2c\xb6\xf2\xd9\xe5\xfa\xd3\xd8\x95\xb2\x58\x20\xee\xe5\x09\x0f\x2f\xef\x35\x9b\x11\x47\xb0\xc2\xb7\x7c\x65\xbe\x55\x76\x75\xa2\xfb\x05\xfe\xbc\x69\x8b\x97\x2f\x64\x8d\x46\x7a\x04\x4c\x10\x5d\x46\xfc\xb8\x4d\x1d\xad\x98\xe0\x8a\x63\x9e\xfb\xa4\xe5\x76\xca\x1c\x53\xd6\x3a\x83\x14\xda\x51\x8a\xbf\x85\xb3\x83\xa1\x5e\xdd\xc6\xd2\xdd\x6b\xf3\xa1\xd3\x21\x51\x9a\xd6\xb5\xd6\x12\xae\xeb\x58\xa3\xb4\x57\x9d\xd8\x5f\xbb\x7c\xc4\xcd\x8a\x36\x0e\x29\x5d\xbb\xfa\x38\x72\x96\x13\x62\xa0\xa4\xd5\xba\x6b\xca\xd8\x9b\xcb\x7e\x69\x19\x37\xee\xc2\x60\x19\x07\x36\xc5\xc2\x32\x36\x78\x2c\x47\x1e\xde\xc5\x08\x33\xb9\x75\x63\x87\x71\x59\x39\x30\x13\x4f\xd8\xf4\x75\xb8\xac\x29\xa7\x18\x43\x8f\x7e\xf6\xd1\x39\x98\xcd\x6a\xe8\x4f\x62\x73\x45\xd0\xe9\xa9\x2a\xfc\x3d\xe4\xb0\x0b\xd6\x96\x59\xd0\xc8\xb3\xe0\xe5\xf0\x7c\x5f\xc1\x63\xdd\x99\xa7\xac\xc5\xc2\x03\xc4\xf1\x3c\xed\x84\x80\xab\x7a\xc2\xdb\x14\xc9\xe2\x9a\x96\x55\xc5\x3c\x07\x33\xa8\x10\x54\x81\x85\x42\xbb\x10\xfe\x6b\x04\xbe\x07\x11\x27\x25\x02\x89\x2c\x9a\x0f\x1e\x63\x74\x23\x5e\xfc\xc3\x2c\xd0\xe7\x60\xf4\xd3\x87\x99\xb5\xed\xe0\x9e\x8e\xf6\x48\xf0\x8b\xb9\x05\x5d\xab\x6a\xbb\x42\x45\x5f\x71\x71\x35\xb4\xf7\x31\x12\xec\x8a\x12\xb9\x57\x61\x65\xf6\x23\x16\x5b\x45\x89\x35\xf1\x54\xd0\x65\x27\x55\x40\x74\x24\x38\x4a\xc0\x91\xe0\xc0\x1c\xf1\x2c\xeb\x62\xcf\x5d\x67\x5b\x71\x3c\xe8\xf2\xd0\xbd\xbb\x38\xba\x35\x8d\xbd\xb6\x67\x5f\x1c\x0f\x97\xb1\x8d\x1d\x17\xb8\x33\x80\x66\x61\x15\x0e\x3b\x14\x40\x58\x10\xd9\xdf\x54\x73\x41\x3c\x89\x68\x1b\x8a\x2f\x60\xfd\x70\xd2\xb0\xd8\x80\xba\xed\xe1\xc1\xdf\xd8\x4e\x7c\xd2\x8f\xf8\x80\xca\x23\x8d\xe5\x20\x26\xe0\x6e\x36\x9b\xf9\xa3\x74\x0d\x99\x08\x2b\x35\x30\xd9\x3c\xf6\xd8\x2f\x0e\xdb\x95\x0f\xcc\xca\xf4\x78\x40\x05\xd5\x5d\xdd\xd7\x8b\x05\x18\xe5\x25\xcc\x70\xb1\x1d\x39\xf6\xbe\xc0\xfd\x09\xc1\x06\xab\x1d\xe2\xc6\xa3\x1f\x7f\x7d\x2f\x67\xc1\xbb\x12\x66\x28\x1b\x4d\x38\xca\x60\x28\xe9\xe4\x1b\x6c\x94\x89\x53\x32\xf1\xb0\x2d\xd1\xde\x27\x56\xee\xe2\x5e\x9c\xdf\xd6\x3e\x5c\x08\xae\x0b\x89\xf9\xe9\x40\x35\x7b\xeb\xe6\x77\x0b\xc7\x96\x84\x84\x3f\xb5\xb2\x66\x2d\x48\xb4\xf7\xb6\x9e\x19\xc2\x84\x3f\xcd\x36\x02\xba\x2d\x13\xf3\x28\x91\xbf\xfa\xc9\x43\xc8\x0f\x1f\xb1\x1f\xcf\xb6\xfb\x09\xa3\x87\x29\x5f\xbb\x83\xf9\x91\x1d\xce\x3a\xd7\x29\x56\xd9\x48\x7c\x8b\xe8\xdb\x1c\xb1\xd7\x7f\x9c\x7f\xce\x62\xe1\x16\xe8\xda\x8a\xa6\x3c\xf7\x4b\x50\xb1\xbc\x5b\x4d\x29\xfa\x4c\xa5\x3e\x58\xd9\x2e\x34\xcd\x70\x2d\x4d\x7d\x54\x94\x85\xca\x59\x6a\xa7\x4a\x77\xe5\x83\xb1\x2f\x89\xea\x94\xe0\x8a\xbd\xbf\x1c\x89\xe1\xba\x1b\xa0\x11\x10\x18\xc7\x3a\x2f\xd3\xbd\x36\x48\xcd\x08\xfc\x75\x36\x9b\x4d\x38\xaf\xbb\xcf\x92\x31\x88\x84\x3f\x35\x19\xef\xca\x87\x84\x3f\xd5\x01\x2a\x4b\xc0\x07\x88\x8b\xd0\xa9\x31\x36\xd3\xef\x85\xd6\xdc\x37\x07\x6e\x82\xc2\x4e\xbb\x38\xa9\xee\x21\x48\x74\xd1\xb8\x65\x96\xbe\x4f\x92\x4e\x0f\xf0\xb3\x99\xe5\x15\x1d\x2f\xd5\x6a\xb0\x5a\xf2\x23\x5b\xab\x60\x12\xdc\x85\xe7\x07\xbe\x9c\x94\x55\x3a\xe5\x49\xda\x2e\x19\x78\x2d\x98\xa7\x9d\xa6\x83\xc0\xd9\xd7\x68\x57\x05\xc7\xe4\x45\xed\x6a\xe7\xe5\xea\x75\xdc\x9c\xf2\x4d\xc3\x85\xeb\x0a\xb6\x3c\x11\x04\x8e\x87\x51\xb8\xc1\xdb\x68\xe2\xd1\x85\xf1\x7c\xd0\x5a\x7c\xe5\x20\x3c\xa4\x70\x2f\x2c\xc4\x2b\x6b\x24\x02\x67\xcc\x93\x27\x3f\x17\x34\xa6\x3b\x5c\x0b\xc6\xe8\x99\x13\x3d\xf1\xed\x0e\xd0\xda\x5c\x75\x4d\x20\xf8\x1f\xbf\x54\x8e\x63\x4d\x4a\xb6\x55\x7c\x92\x29\x64\x76\xc2\xb4\x84\x9d\xd3\x47\x4b\x3a\x7f\xd1\x22\x31\xa0\x5b\xef\x0a\xb0\xc3\x59\x86\x8a\x50\xb7\xd2\x74\xf6\xf4\x6a\x77\x15\xea\xcb\x3d\x07\xf3\x45\x43\x74\x0e\xcd\xf0\x3e\x72\xbe\xc2\xb4\x6d\xeb\x7f\x9c\x7f\xc8\x61\x5d\xff\x02\x0f\x28\x8e\x32\x44\x21\xce\xa3\xb1\x61\x4c\x45\xa0\xf5\xc0\x9b\x36\xbd\xa7\x04\x41\x8a\x7e\x94\x9f\xff\x41\xe0\x96\xfd\xda\xe7\x21\x72\xac\xb3\x3c\xd4\x2b\xe5\x67\x87\x58\xa7\xd6\x52\xe8\x66\xb9\xd4\x41\xa3\xd5\x10\xbc\x50\x5e\xdb\x19\x86\x58\x5d\xa7\x69\x31\x1f\xf3\x29\x2e\x0a\x44\x7e\xfa\xf8\xfe\x9d\x6f\xa7\x4c\x1e\x40\x72\x91\xf9\x52\x18\xea\x26\x8e\xa0\x1f\xfc\xf9\x27\x30\xef\x2e\x79\xf3\x6d\xcd\x0e\x67\x20\x5a\x02\x7c\xcf\xc4\x95\x8b\x64\x47\x1c\xe5\xd8\x8e\x0a\x72\x6c\xf1\x42\x5c\xaa\x61\xf1\x1d\xb8\xf1\x31\xc6\xbd\x6d\xc6\x95\x61\x0a\xab\x0a\x15\xd9\x0f\x7c\x37\x3e\xc7\xde\xa0\xc2\x82\xe2\xed\xac\xdd\xa4\xce\x45\xa3\xc9\xca\x8a\xa9\x11\x3a\x25\x6b\x3b\x27\x20\xe0\xc4\x88\xc9\x9c\xc8\x5f\xdb\xb9\x36\x37\x18\xf5\xed\x3d\xee\xe0\xb8\xe7\x46\x1f\x9f\xc7\x22\xf2\xfd\xbd\xaf\x6f\x11\x07\x74\xfb\x02\x16\x51\xf4\xfa\x7c\x16\x31\xaf\xc5\x6c\xd6\x72\x0f\xec\x61\xe7\x1d\xd4\x15\xa8\xbc\x0e\x9d\x88\xc8\xeb\xe5\xbf\x59\x35\x83\x6d\x9e\xd9\xcc\x6c\x13\x60\x80\xe6\xa2\xd8\xc7\x4e\x06\xd9\x9f\xe0\xee\x2a\x1f\xa9\xbb\xad\x0a\x16\xe0\x00\xf7\x2c\x60\xac\xe9\x3d\xa6\xe8\x20\x2e\xd8\xf0\xbb\x6a\x79\xcd\xa8\x60\x3f\xdf\xd8\xf9\xd1\x1c\x7b\xbc\x86\x34\xc7\xe9\x7e\xd4\xe1\x3f\x01\x69\xf2\x5e\xab\xb9\xa3\xae\x08\x4f\x85\xf2\xc4\xde\xbb\x46\x40\x98\x03\xa7\x01\xb2\xf3\x1e\xea\x4f\xe8\xda\x90\x0d\x07\x9e\x45\x62\x4e\x1b\x58\x00\xee\xc1\x6d\x11\xfd\x3b\xa5\x04\xaf\x8f\x14\xc5\xd1\x1e\x9d\x23\x3b\x51\xa5\x44\x40\xb0\xbf\xcd\x91\x38\x96\x55\x0d\x5b\x68\x94\x3c\x64\x33\x6c\x17\x85\x8d\x55\x9e\x36\xf4\x8f\x55\xb7\x42\x2a\xad\xed\xdb\x6b\x09\x5d\xcb\x02\xa6\xad\x65\xd3\x8e\x67\x35\x7b\x77\xff\x26\xe2\x06\xd3\xf8\xca\x15\xe0\x09\xf3\xa0\x77\xa9\x80\xc4\xd2\xe1\xc0\xe5\x65\x6e\x5c\x1c\x43\x31\x7c\x95\x14\x91\x88\x38\x2e\xa1\xcf\xb9\x1c\x4f\x6b\x43\x07\x52\xe6\x6a\x44\xaa\xc3\x0e\x40\xa6\x60\xa1\x93\x79\x5d\xed\x98\x92\x4d\xc4\xbd\x6a\x79\xb0\xdb\xda\x5b\x97\xa7\xc2\x16\xf2\xd8\xb5\x1b\x1f\xc8\x51\x7c\x5b\x57\xb0\x00\x9c\xde\x05\x25\x30\xdd\x7f\x17\xdd\xb8\xe4\x18\x87\xca\xc7\x37\xd1\xb7\xb7\xac\xd9\x77\xd1\x8d\x57\x9d\x4c\xa4\xcc\xab\x09\x20\x15\xde\x5d\x8b\x6e\xee\xf8\x46\x9e\x56\x8d\x53\x64\xde\x60\x6c\xaa\xf5\x6b\xd9\x5e\xfb\xc3\x87\x7e\x63\x8d\x5d\x78\x84\x7e\x3a\x15\xb6\x10\xa1\xee\x1d\x23\x0f\x12\x2e\x25\x7e\xf2\x51\xaf\x74\xbd\xaa\x06\x74\x38\xed\xf2\x9f\x2e\xf8\x89\x7f\xc7\x0f\xe4\xf5\x0b\xcd\x95\x9c\x38\xca\x77\x5f\xa3\x0a\x12\x48\x4b\xf2\xdd\xed\xa0\xe1\x7b\x49\x14\xb8\x86\x52\xe8\xc4\xad\xa6\x46\x8b\xdb\x06\x7e\x95\xb6\x3b\x66\xf6\xd0\xdf\x2d\xbf\xe0\x10\x56\x3e\xbf\x96\xb0\x9e\x03\x4a\x22\x88\xba\x02\x5f\xa7\xea\xe9\xda\xdc\xc1\x20\xff\xec\xf6\xdb\x15\x9f\x35\xce\xb1\xe1\x50\xf0\xf7\xb9\xed\xbb\x29\x0f\x64\x88\x87\xde\xee\xf6\x1a\x1e\x3a\xb3\xa0\x25\xc1\xa8\xa0\x50\x6e\x09\x06\x73\x1e\x8d\x8f\x20\x72\x25\x41\x0f\xc1\x5e\xec\x2f\x06\x96\x03\xa4\xe9\xee\x3d\xca\x30\x8c\xa3\x58\xeb\x39\x01\x55\x49\x28\x81\x98\x8e\xa3\xf1\x94\x43\x21\xc7\x3b\xb2\x7d\x0c\x2f\xb3\x99\x8b\xef\x39\x8e\xc6\x9f\x0f\xb8\xc8\xca\x87\xe9\x30\x22\x60\x96\x35\xfc\xd3\x80\x24\xea\x5e\x54\x39\x2c\xb2\x3a\x85\x15\xea\xc7\xf5\xbf\x27\xb6\x6a\x92\xc2\xde\xe8\xaa\x6f\x87\x8e\x11\x77\xdf\x6c\x12\x06\x3d\x0e\x0d\x4c\x5f\xed\xb5\xe2\x69\xba\x43\xe9\x9e\xef\xf8\x3b\x89\x60\x99\x09\x9c\x32\x70\x7f\xe3\x2b\x33\x8d\xe1\x6e\x94\xe3\x29\xa9\x72\x76\x09\x43\x47\xf6\x2d\xd9\x5b\x27\x41\x36\x78\x1b\x05\x52\x97\xc2\xc3\xfa\x3c\x80\x97\x2d\x94\x8e\xab\x2d\x9d\x2a\x6f\xfb\x03\xdf\x55\x76\xf3\xea\x6a\x9c\x07\xf8\xd9\x8f\xe0\x59\xb9\x29\x36\x03\x7c\x49\xdc\x97\x65\xea\xff\x67\x7c\x33\x1f\x7b\xbe\x52\x86\x63\x50\xc7\x2f\x90\xe3\x50\xfd\x0e\xc9\x72\x3c\xab\xbd\x75\xec\xea\x01\x15\xc7\x6b\xac\x6a\x33\xb4\x75\x99\x9d\xaf\xc9\x00\xe8\x04\xf0\x18\xfe\xbe\x3e\xae\xe3\x2e\xb3\x23\x28\x0d\x1b\x1c\x54\x1c\x0d\x53\xc3\x10\x87\xf2\xbe\x6b\x98\xee\x45\xd6\x77\x00\xe9\xde\x6b\x26\xaf\x8d\x78\xbb\x2b\x6b\x61\x1f\x38\xb3\x6d\x46\x30\x22\x77\x8f\x51\x7a\xf2\xc8\x7d\x11\xc8\x6b\xd7\x5f\x18\x85\xfc\x85\x51\xd0\x01\x32\x24\x06\xb1\x3f\xeb\xd2\x35\x90\xb6\xa5\xed\x26\xb9\x64\xbb\xfe\x9e\xcf\xce\xf6\x25\x3b\x0c\x10\x5f\xa7\x86\x06\xfa\x71\x30\x6b\x50\x56\xbf\x91\xb2\x82\x5b\x28\xd4\xd8\xaf\xa0\x9d\xca\x26\xb6\x5d\xbe\x48\xd9\x9e\x5d\x88\x4a\x6b\x9f\x2e\xc4\x20\x3f\xaf\x16\x62\x50\x2d\xbe\x9a\x84\x6a\x44\x29\x2e\xb6\xf5\x97\x49\xc9\x36\x69\x19\x2a\x84\x51\xeb\x9c\x4d\x0c\x98\x3b\x89\x96\xfd\x1b\x24\x8c\xa0\xf5\x74\x05\x32\x98\x53\x7c\x39\x3f\xae\xfb\xec\xad\x04\x31\x1c\x65\x51\x14\x64\x33\x41\xcc\x69\x19\xcc\x64\x27\x47\x5d\x8a\x63\x8a\x53\x81\x27\x44\x7f\x1f\x15\x6a\xf1\xbd\x92\x8a\x5e\x33\xd8\x3b\xc5\xac\xa9\xe1\xc4\x8d\x6e\x52\x53\xe9\xc7\xd5\x8e\x8e\x47\x58\x4f\x73\xb1\xbe\x42\xef\xba\xe7\x33\xb7\x1c\xad\xae\xee\xfb\x9c\xad\xa6\xf7\x1e\x6f\xab\xed\xb3\x7f\x53\x89\xff\x5f\x82\x1e\x57\x24\xa8\x80\xc7\xca\xb3\x7d\x9e\xc3\x35\xca\x45\x58\xe9\xba\x15\xdf\x03\x91\x0d\x07\x09\x60\xad\xcd\x0c\xef\xb1\x32\xb6\x6b\x5f\x2f\x04\x2e\x5b\x6f\x2d\x30\x09\xe5\x4f\x57\x74\xe6\x05\xc4\xd9\x4f\x23\x2a\xf0\xfa\xa8\x4c\x66\x49\xf3\x66\xfa\xaa\xa2\x4e\xbd\xd9\x3e\x6b\x53\x2b\xdf\x9f\x98\x2b\x50\xc7\x7d\xae\xcd\x16\x68\xed\x7b\x8f\x14\x19\x67\x60\x65\x59\x50\xf0\xfc\x34\xfe\xd5\x4b\x8c\xbe\x39\x43\xd0\xe9\xea\x95\xb0\x9f\xcc\x1c\x9e\x9f\x87\xcc\xe6\x28\xe9\xcb\x11\xcb\xcf\xe8\x3f\x07\xb1\x0c\xd1\x55\x64\xba\x57\x62\xba\xb2\x99\xbe\xc3\x72\xe2\xda\xc4\xaa\xbd\x0f\x61\x93\x39\x40\x0d\x07\x48\x53\xdf\x49\xab\x49\xca\x6c\xee\x2d\xac\x6b\x44\xeb\x5b\x2e\xa4\x69\x7d\xda\xf6\x65\x94\x5f\x9e\x92\x1c\x9e\x6d\x42\x8c\xd9\xd9\x5e\x7f\xeb\x3f\xef\x67\x9f\x60\x08\x09\x80\xa0\x0a\x41\xea\x39\xb9\x29\xfa\xea\x70\x68\x78\x3b\x77\x4c\x7c\xa1\x29\x2b\x98\x62\x7a\x5e\xdc\x4d\x67\x3d\x5c\x7d\x9e\x7e\x66\xd3\xbf\x86\xb2\xdf\xde\x41\xc3\x22\x2b\x0f\x57\x0c\x5a\xb4\x7b\xf9\x41\x0f\xea\xc7\x33\xe8\xeb\xd6\xb0\x81\xc7\x67\xbb\x73\xe1\xde\xf5\xc9\x5a\x9e\xe4\x2e\x5d\xf0\xa8\x7b\xbf\xf7\x91\x41\x0a\x9d\x0c\x34\xa3\xcf\xd4\xf4\x11\xb7\x2b\x23\x80\x0b\x60\xff\xbb\x2c\x85\xa9\xa5\xa5\x49\x7d\x32\xd0\x25\xdf\x2c\xbe\x97\xb5\xd1\x0a\xfc\xab\x7d\x2d\xc4\x9d\x8d\x12\xd8\x05\xb1\xaf\xca\x59\x3d\x19\xd5\x5d\x5d\x49\xae\x14\xe8\x01\xfc\xe8\x89\x04\x79\xb2\x54\xd0\xde\x67\x4e\x35\xed\x03\x37\x0b\x8e\x98\x69\xe1\x47\xcc\xaf\xb7\xbe\x31\x29\xee\x08\xa9\xda\xc1\x37\x63\x52\x45\xb7\xa1\x51\x1c\xf8\x21\x78\x0f\xfc\xdf\x66\x63\x07\xb8\x46\xcc\x36\x2a\x98\x7f\x01\x7f\x9b\x79\xb8\x2b\xfc\x46\x86\xf7\x06\x8c\x92\x11\xb8\x01\x71\x34\x8b\xc0\x0d\x6b\x3d\x9e\xd6\x39\x4e\x51\xfc\xe6\x1b\x17\x39\xf3\x06\x6b\xbf\x19\x35\x27\xa2\x52\x03\xcf\x68\xb0\x59\xd4\x1e\x32\xe2\xc8\x43\xa7\x7e\x78\xe5\x12\xaf\x06\xf9\xad\xea\xcf\xdb\xc8\xf1\x62\xfd\x82\xb2\xff\xf9\xfd\x00\x0b\x11\x98\xf1\x9d\x6d\xf8\x15\xab\x80\x89\x30\x2d\x83\xe3\xb3\xaa\xe3\x4c\x5d\x17\x60\xfa\x13\xce\xc1\x0c\x84\x27\x7d\x1d\xb6\x30\x5d\xb9\x85\xf0\x85\x10\xef\xde\x9e\x9d\x97\xbe\x38\xff\x11\x65\xca\x4d\x31\x43\xff\xdf\x01\x00\x00\xff\xff\xd1\xab\x97\x4a\xe4\x62\x00\x00")

func assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsAppJs,
		"assets/app.js",
	)
}

func assetsAppJs() (*asset, error) {
	bytes, err := assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/app.js", size: 25316, mode: os.FileMode(436), modTime: time.Unix(1490864246, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBackSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xcd\x6a\x03\x21\x14\x85\xf7\x3e\xc5\xe1\x76\x9b\xc6\xe3\x4c\x21\x50\xd4\x45\xf7\x7d\x88\x42\xac\x4a\xa7\x63\x88\xa2\xa1\x4f\x5f\x26\x0c\xc3\xe5\x9e\x9f\x6f\x71\x6c\xed\x11\x8f\xdf\x65\xad\x4e\x52\x6b\xb7\x77\xad\xc7\x18\xe7\x31\x9f\xcb\x3d\xea\x89\xa4\xae\x3d\x0a\x46\xbe\xb6\xe4\x64\x22\x05\x29\xe4\x98\xda\x5e\x7a\x0e\xe3\xa3\x3c\x9c\x10\xc4\xc4\xe7\x8b\x57\x36\xa2\xb6\x7b\xf9\x09\x4e\x5e\xde\xb8\x9d\xec\xe0\xf5\x98\x12\x7c\xe7\x65\x71\xb2\x96\x35\x88\x57\x00\x60\x6f\x5f\x2d\xe1\xea\xe4\x13\x33\x4f\x86\x84\x21\x4f\x33\x61\x2e\x87\x99\x0b\xf1\xc4\x5b\xf8\x13\xed\x95\xd5\x71\x93\xda\xa3\x57\xff\x01\x00\x00\xff\xff\xc0\x07\xee\x15\xd1\x00\x00\x00")

func assetsBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsBackSvg,
		"assets/back.svg",
	)
}

func assetsBackSvg() (*asset, error) {
	bytes, err := assetsBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/back.svg", size: 209, mode: os.FileMode(436), modTime: time.Unix(1490861399, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMainSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\xc1\x4a\xc4\x30\x18\x84\xef\x79\x8a\xe1\xf7\xba\x6e\xa6\xad\xb0\x20\x49\x0e\xde\x7d\x08\x61\x63\x12\xac\x4d\x69\x42\x52\x7c\x7a\xa9\x14\x97\x61\xe6\x63\xe6\x30\xa6\xb4\x80\xfd\x7b\x5e\x8a\x95\x58\xeb\xfa\xaa\x75\xef\xfd\xda\xa7\x6b\xde\x82\x1e\x49\xea\xd2\x82\xa0\xa7\x7b\x8d\x56\x46\x52\x10\x7d\x0a\xb1\x9e\xa5\x25\xdf\xdf\xf2\x6e\x85\x20\x46\xfe\x59\x9c\x32\x01\xa5\x6e\xf9\xcb\x5b\x79\x7a\xe1\x21\x39\x87\xe7\xff\x2b\xc1\x67\x9a\x67\x2b\x4b\x5e\xbc\x38\x05\x00\x66\xfd\xa8\x11\x77\x2b\xef\x18\xc8\xcb\x44\x0c\x37\x5e\x06\x9e\xbc\x11\xd3\x03\x24\x7e\x44\x3b\x65\x74\x38\xa2\xb4\xe0\xd4\x6f\x00\x00\x00\xff\xff\xd3\xed\x09\x4f\xd0\x00\x00\x00")

func assetsMainSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsMainSvg,
		"assets/main.svg",
	)
}

func assetsMainSvg() (*asset, error) {
	bytes, err := assetsMainSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/main.svg", size: 208, mode: os.FileMode(436), modTime: time.Unix(1490861491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsNextSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\xf1\x33\xbd\x5a\x33\x49\x55\xb0\x24\x1e\x7a\xef\x43\x14\xb4\x49\xa8\x5d\xc5\x84\x44\xf6\xe9\x17\x57\x61\x17\x96\x61\x06\xfe\xe1\xe3\xd7\x21\x59\x6c\xff\xd3\x25\x18\x72\x31\x2e\x9f\x42\xe4\x9c\xab\xfc\x51\xcd\xab\x15\x8a\x99\x45\x48\x96\x90\xfd\x10\x9d\x21\xc5\x4c\x70\xa3\xb7\x2e\x9e\x21\xf9\x31\x7f\xcd\x9b\x21\x06\x43\xf1\x7d\xa9\x2f\xb4\x45\x88\xeb\xfc\x37\x1a\x7a\xab\x79\x1f\x3a\x1f\xef\x67\x95\x54\x84\x5f\x3f\x4d\x0f\xd0\x17\x00\xa0\x97\x9f\xe8\x30\x18\xfa\x46\xdd\x94\x2d\x43\xca\xa6\x94\xcc\x7b\x92\x35\xe3\x4a\xe2\x05\x76\x07\x6c\x0f\xd8\x3d\x41\x2d\xec\x7e\x42\xb2\x7d\x71\x0b\x00\x00\xff\xff\x22\xf8\x97\x68\xec\x00\x00\x00")

func assetsNextSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsNextSvg,
		"assets/next.svg",
	)
}

func assetsNextSvg() (*asset, error) {
	bytes, err := assetsNextSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/next.svg", size: 236, mode: os.FileMode(436), modTime: time.Unix(1490506165, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xe1\x4a\x03\x31\x10\x84\xff\xdf\x53\x0c\xeb\xdf\xda\xec\xc6\xd6\x2b\x72\x39\xd0\xff\x3e\x84\xd0\x73\x73\x78\xde\x95\x26\x24\xc5\xa7\x97\x94\xd4\x62\x95\x90\x5d\x32\x7c\x99\x99\x2e\x24\xc5\xe9\x73\x9a\x83\x23\x1f\xe3\xe1\xc9\x98\x9c\xf3\x3a\x3f\xac\x97\xa3\x1a\xcb\xcc\x26\x24\x25\xe4\x71\x1f\xbd\x23\xcb\x4c\xf0\xc3\xa8\x3e\xd6\x47\x1a\x87\xfc\xb2\x9c\x1c\x31\x18\x96\xcf\x97\xfa\xa6\x53\x84\x78\x5c\x3e\x06\x47\x77\x1b\x2e\x87\xaa\x70\x5f\xad\xc4\x12\xde\xc7\x69\xba\x02\x7d\x03\x00\xdd\xe1\x2d\x7a\xec\x1d\xbd\xa2\xdd\xae\x1e\x19\xbb\xcb\x94\x0d\x17\xa9\xac\x2f\x32\x7f\x68\xb1\x67\x50\xe4\x67\x15\xb2\xa8\xbf\x7f\xe8\x4d\x91\xdd\xa5\xc7\xbc\xcc\x43\x2d\x71\x63\x5d\x3c\x98\xf1\x5c\xe2\xdb\x2d\x18\xb2\x12\x48\xfb\x9f\x5a\xd1\x6b\x9c\xd1\xbe\xa9\x23\x24\xed\x9b\xef\x00\x00\x00\xff\xff\x0a\xc1\xa7\x81\x72\x01\x00\x00")

func assetsPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPauseSvg,
		"assets/pause.svg",
	)
}

func assetsPauseSvg() (*asset, error) {
	bytes, err := assetsPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pause.svg", size: 370, mode: os.FileMode(436), modTime: time.Unix(1490523630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xd1\x4a\xc3\x40\x10\x45\xdf\xf3\x15\x97\xf1\x35\x76\xef\xae\x89\x11\xc9\x06\xf4\xdd\x8f\x10\x1a\x67\x83\x31\x29\xdd\x25\x5b\xfc\x7a\x69\x59\x29\x94\x32\xcc\xc0\xbd\x1c\xce\xf4\x71\x53\x9c\x7e\xe6\x25\x7a\x09\x29\x1d\x5e\x8d\xc9\x39\xef\xf2\xd3\x6e\x3d\xaa\x71\x24\x4d\xdc\x54\x90\xa7\x7d\x0a\x5e\x1c\x29\x08\xe3\xa4\x21\x95\xb0\x4d\x63\x7e\x5f\x4f\x5e\x08\xc2\xf1\xb2\x32\x54\xbd\x22\xa6\xe3\xfa\x3d\x7a\x79\x68\x78\x1e\x29\xc5\x63\x51\x59\x27\xf8\x9a\xe6\xf9\x0a\x0c\x15\x00\xf4\x87\xcf\x14\xb0\xf7\xf2\x81\x8e\xf5\x33\x61\x1b\xd6\x96\x3c\x27\xdb\x10\xbf\x62\x0a\xa8\x37\xc6\x97\x7f\xe1\xb2\x2e\x63\xb1\xdd\x18\x5d\x7b\x51\xbd\xa1\x6b\xeb\xae\x05\x61\x6b\x0b\xdb\xdd\x6b\x0b\x7a\x7d\x67\x74\xa8\xca\x89\x9b\x0e\xd5\x5f\x00\x00\x00\xff\xff\x74\x48\x45\x6f\x3b\x01\x00\x00")

func assetsPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPlaySvg,
		"assets/play.svg",
	)
}

func assetsPlaySvg() (*asset, error) {
	bytes, err := assetsPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/play.svg", size: 315, mode: os.FileMode(436), modTime: time.Unix(1490506353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrevSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\x31\x4c\xaf\xd6\xfc\x89\x5a\x4a\x49\x3c\xf4\xde\x87\x28\x68\x93\x50\x77\x15\x13\x12\xd9\xa7\x5f\x94\xc0\x2e\x2c\xc3\x0c\xfc\xc3\xc7\xaf\x43\xb2\xb4\x5f\xe6\x6b\x30\xec\x62\x5c\xbf\x84\xc8\x39\x37\xb9\x6d\x96\xcd\x0a\x05\x40\x84\x64\x99\xb2\x1f\xa3\x33\xac\x00\x26\x37\x79\xeb\x62\x09\xc9\x4f\xf9\x7b\xd9\x0d\x83\x40\x0a\xe7\xf2\x50\x69\x4b\x21\x6e\xcb\xff\x64\xf8\xad\xc3\x31\x5c\x1e\xef\xa5\x4a\x2a\xa6\x3f\x3f\xcf\x0f\x30\x54\x44\x44\x7a\xfd\x8d\x8e\x46\xc3\x3f\x24\xfb\xbe\xfe\x00\x7d\xf6\xb5\x04\xce\x24\x3b\xd0\x8d\xc5\xab\xc4\x29\xdb\x22\xf1\x24\xb5\xb0\xc7\x09\xc9\x0e\xd5\x3d\x00\x00\xff\xff\x27\x39\x48\xbf\xee\x00\x00\x00")

func assetsPrevSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrevSvg,
		"assets/prev.svg",
	)
}

func assetsPrevSvg() (*asset, error) {
	bytes, err := assetsPrevSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prev.svg", size: 238, mode: os.FileMode(436), modTime: time.Unix(1490506308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRandomSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xd1\x6a\xc3\x20\x18\x85\xef\xf3\x14\x87\x7f\xb7\x59\xfd\x75\x9a\x95\x11\x03\xdb\xfd\x1e\x62\xd0\x4c\xc3\xb2\xa4\x54\x89\x65\x4f\x3f\x6c\x2c\xdd\x42\x11\x85\xff\xf8\x9d\x73\xb4\x0d\x8b\xc3\xf9\x7b\x9c\x82\x25\x1f\xe3\xf1\x45\x88\x94\xd2\x2e\x3d\xed\xe6\x93\x13\x8a\x99\x45\x58\x1c\x21\x0d\x87\xe8\x2d\x29\x66\x82\xef\x07\xe7\x63\x19\x96\xa1\x4f\x6f\xf3\xd9\x12\x83\xa1\xf8\xb2\xa9\xab\x5a\x87\x10\x4f\xf3\x57\x6f\xe9\x41\x73\x5e\x54\x84\xc7\x12\x25\x15\xe1\x73\x18\xc7\x1b\xd0\x55\x00\xd0\x1e\x3f\xa2\xc7\xc1\xd2\x3b\xa4\x31\xb5\x32\x90\x7b\x53\x6b\xbe\x4c\xc6\xe0\x87\xc4\x5d\x50\xea\x95\x94\xcd\x8a\xca\xe7\xbf\xac\xdb\xb4\xef\xaf\xe5\xd3\x3c\xf5\xa5\x79\x13\xaa\x39\xb7\xbe\xa2\xe1\xba\xc9\x9f\x93\xb5\xcc\x5a\xce\xbf\xc6\x6e\x9f\xd1\xac\xd7\xff\x3d\x59\xd5\x37\x4f\x2b\x5c\x57\x95\x23\x2c\xae\xab\x7e\x03\x00\x00\xff\xff\xa2\x45\x96\xa5\x83\x01\x00\x00")

func assetsRandomSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRandomSvg,
		"assets/random.svg",
	)
}

func assetsRandomSvg() (*asset, error) {
	bytes, err := assetsRandomSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/random.svg", size: 387, mode: os.FileMode(436), modTime: time.Unix(1490535047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRepeatSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4e\xc3\x30\x10\x44\xef\xf9\x8a\xd1\x72\x2d\xf5\xc6\xad\xa5\x0a\xc5\x39\x70\xe7\x23\x10\x35\xeb\x88\x90\x54\xb1\x15\xa7\x7c\x3d\xb2\x71\x01\x55\x96\x3d\x1a\x6b\xf4\x76\xb6\x0b\xab\x60\xfb\x1c\xa7\x60\xc9\xc7\x78\x79\x52\x2a\xa5\xb4\x4f\x87\xfd\xbc\x88\xd2\xcc\xac\xc2\x2a\x84\x34\x9c\xa3\xb7\xa4\x99\x09\xde\x0d\xe2\x63\x35\xeb\xe0\xd2\xf3\xbc\x59\x62\x30\x34\x97\x4b\x7d\xd3\x09\x42\x5c\xe6\x0f\x67\xe9\xe1\xc8\xf9\x50\xfd\x78\xac\xa8\x56\x13\xde\x87\x71\xfc\x0b\xf4\x0d\x00\x74\x97\xd7\xe8\x71\xb6\xf4\x82\x93\xd9\x69\x83\xb6\x35\xbb\x23\x67\x63\x0c\xbe\x48\xd5\x98\xdc\xf1\x4e\x37\xdc\x34\x4f\xae\xb2\x4a\x70\x71\x6f\x11\x9b\xa5\x5c\xe1\xfa\x23\xbf\x15\xfe\x6d\x53\xcc\xb2\x59\x3a\x64\xbd\x16\xbd\xcd\x52\xd2\x37\xf5\x09\xab\xf4\xcd\x77\x00\x00\x00\xff\xff\x5e\x9e\x3f\xba\x36\x01\x00\x00")

func assetsRepeatSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsRepeatSvg,
		"assets/repeat.svg",
	)
}

func assetsRepeatSvg() (*asset, error) {
	bytes, err := assetsRepeatSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repeat.svg", size: 310, mode: os.FileMode(436), modTime: time.Unix(1490535180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsSettingsSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xc1\x6e\x84\x20\x10\x86\xef\x3e\xc5\x64\x7a\x65\x97\x19\x44\xcd\x36\x6a\xd2\xde\xfb\x10\x4d\xd6\xa2\xa9\xd5\xcd\x42\x64\xd3\xa7\x6f\x14\x6a\xd3\xa4\xec\xa9\x31\x32\x01\xbe\xf9\xf8\xa1\xb6\x8b\x81\xdb\xc7\x38\xd9\x06\x7b\xe7\x2e\x8f\x52\x7a\xef\x8f\x3e\x3f\xce\x57\x23\x15\x11\x49\xbb\x18\x04\x3f\x9c\x5d\xdf\xa0\x22\x42\xe8\xbb\xc1\xf4\x2e\x4e\x96\xa1\xf3\xcf\xf3\xad\x41\x02\x02\x45\xdb\x8f\x6d\x56\x1b\xb0\xee\x3a\xbf\x77\x0d\x3e\x68\x5a\x3f\x8c\x0b\x87\xa8\x62\x85\xf0\x36\x8c\xe3\x0f\xd0\x66\x00\x00\x7b\xe7\x61\x3f\xf3\x1b\x9c\xe6\xa9\x8b\xd4\x46\x5e\x5e\x5d\x0f\xe7\x06\x5f\x80\x89\x44\x4e\x5b\x29\x09\x3e\x51\x26\x29\xae\x02\xc6\x3a\xcd\xe5\x24\x98\x08\xca\x50\x92\xb6\x2a\xec\xb3\xfe\x27\x2e\x84\x7f\x02\x4d\x42\xaf\xaf\xc9\x82\xf7\xa8\xf7\x6e\xa4\xff\x6a\x2a\x93\x3d\x05\x89\x82\xa0\x62\x51\x71\x32\x4b\x41\x82\x03\xc4\xea\x94\x4e\x1c\x54\xac\x4e\xf7\x5c\x1c\x65\x2b\xf6\xcb\x56\x4b\xd3\x66\x71\xb0\x8b\x69\xb3\xaf\x00\x00\x00\xff\xff\x38\xf2\x81\x5c\x8d\x02\x00\x00")

func assetsSettingsSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsSettingsSvg,
		"assets/settings.svg",
	)
}

func assetsSettingsSvg() (*asset, error) {
	bytes, err := assetsSettingsSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/settings.svg", size: 653, mode: os.FileMode(436), modTime: time.Unix(1490712532, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/app.css": assetsAppCss,
	"assets/app.html": assetsAppHtml,
	"assets/app.js": assetsAppJs,
	"assets/back.svg": assetsBackSvg,
	"assets/main.svg": assetsMainSvg,
	"assets/next.svg": assetsNextSvg,
	"assets/pause.svg": assetsPauseSvg,
	"assets/play.svg": assetsPlaySvg,
	"assets/prev.svg": assetsPrevSvg,
	"assets/random.svg": assetsRandomSvg,
	"assets/repeat.svg": assetsRepeatSvg,
	"assets/settings.svg": assetsSettingsSvg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{assetsAppCss, map[string]*bintree{}},
		"app.html": &bintree{assetsAppHtml, map[string]*bintree{}},
		"app.js": &bintree{assetsAppJs, map[string]*bintree{}},
		"back.svg": &bintree{assetsBackSvg, map[string]*bintree{}},
		"main.svg": &bintree{assetsMainSvg, map[string]*bintree{}},
		"next.svg": &bintree{assetsNextSvg, map[string]*bintree{}},
		"pause.svg": &bintree{assetsPauseSvg, map[string]*bintree{}},
		"play.svg": &bintree{assetsPlaySvg, map[string]*bintree{}},
		"prev.svg": &bintree{assetsPrevSvg, map[string]*bintree{}},
		"random.svg": &bintree{assetsRandomSvg, map[string]*bintree{}},
		"repeat.svg": &bintree{assetsRepeatSvg, map[string]*bintree{}},
		"settings.svg": &bintree{assetsSettingsSvg, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

